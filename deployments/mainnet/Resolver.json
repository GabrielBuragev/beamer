{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "Resolution",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callerChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "requestManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addRequestManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "fillChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sourceChainInfos",
      "outputs": [
        {
          "internalType": "address",
          "name": "requestManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "12": "contracts/contracts/Resolver.sol",
    "13": "contracts/contracts/RestrictedCalls.sol",
    "14": "contracts/interfaces/IMessenger.sol",
    "6": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/Resolver.sol",
    "exportedSymbols": {
      "Address": [
        4370
      ],
      "BeamerUtils": [
        2664
      ],
      "Context": [
        4004
      ],
      "IERC20": [
        2350
      ],
      "IERC20Permit": [
        4040
      ],
      "IMessenger": [
        2854
      ],
      "LpWhitelist": [
        354
      ],
      "Math": [
        3827
      ],
      "Ownable": [
        2272
      ],
      "Pausable": [
        2962
      ],
      "RequestManager": [
        2159
      ],
      "Resolver": [
        2832
      ],
      "RestrictedCalls": [
        3982
      ],
      "SafeERC20": [
        2631
      ]
    },
    "id": 2833,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2666,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:12"
      },
      {
        "absolutePath": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "id": 2667,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2833,
        "sourceUnit": 2273,
        "src": "58:80:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 2668,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2833,
        "sourceUnit": 2855,
        "src": "139:38:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RequestManager.sol",
        "file": "./RequestManager.sol",
        "id": 2669,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2833,
        "sourceUnit": 2160,
        "src": "178:30:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RestrictedCalls.sol",
        "file": "./RestrictedCalls.sol",
        "id": 2670,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2833,
        "sourceUnit": 3983,
        "src": "209:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2672,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2272,
              "src": "499:7:12"
            },
            "id": 2673,
            "nodeType": "InheritanceSpecifier",
            "src": "499:7:12"
          },
          {
            "baseName": {
              "id": 2674,
              "name": "RestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3982,
              "src": "508:15:12"
            },
            "id": 2675,
            "nodeType": "InheritanceSpecifier",
            "src": "508:15:12"
          }
        ],
        "canonicalName": "Resolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2671,
          "nodeType": "StructuredDocumentation",
          "src": "242:236:12",
          "text": "The resolver.\n This contract resides on the L1 chain and is tasked with receiving the\n fill or non-fill proofs from the target L2 chain and forwarding them to\n the :sol:contract:`RequestManager` on the source L2 chain."
        },
        "fullyImplemented": true,
        "id": 2832,
        "linearizedBaseContracts": [
          2832,
          3982,
          2272,
          4004
        ],
        "name": "Resolver",
        "nameLocation": "487:8:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Resolver.SourceChainInfo",
            "id": 2680,
            "members": [
              {
                "constant": false,
                "id": 2677,
                "mutability": "mutable",
                "name": "requestManager",
                "nameLocation": "571:14:12",
                "nodeType": "VariableDeclaration",
                "scope": 2680,
                "src": "563:22:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2676,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2679,
                "mutability": "mutable",
                "name": "messenger",
                "nameLocation": "603:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 2680,
                "src": "595:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2678,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "595:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SourceChainInfo",
            "nameLocation": "537:15:12",
            "nodeType": "StructDefinition",
            "scope": 2832,
            "src": "530:89:12",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2681,
              "nodeType": "StructuredDocumentation",
              "src": "625:172:12",
              "text": "Emitted when a fill or a non-fill proof is received and sent to the request manager.\n .. note:: In case of a non-fill proof, the ``filler`` will be zero."
            },
            "eventSelector": "44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb",
            "id": 2693,
            "name": "Resolution",
            "nameLocation": "808:10:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "836:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "828:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "867:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "859:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "896:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "888:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "923:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "915:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2691,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "947:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "939:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2690,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:141:12"
            },
            "src": "802:158:12"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2694,
              "nodeType": "StructuredDocumentation",
              "src": "966:48:12",
              "text": "Maps source chain IDs to source chain infos."
            },
            "functionSelector": "308634a5",
            "id": 2699,
            "mutability": "mutable",
            "name": "sourceChainInfos",
            "nameLocation": "1062:16:12",
            "nodeType": "VariableDeclaration",
            "scope": 2832,
            "src": "1019:59:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2680_storage_$",
              "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo)"
            },
            "typeName": {
              "id": 2698,
              "keyType": {
                "id": 2695,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1019:35:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2680_storage_$",
                "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo)"
              },
              "valueType": {
                "id": 2697,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2696,
                  "name": "SourceChainInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2680,
                  "src": "1038:15:12"
                },
                "referencedDeclaration": 2680,
                "src": "1038:15:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SourceChainInfo_$2680_storage_ptr",
                  "typeString": "struct Resolver.SourceChainInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2808,
              "nodeType": "Block",
              "src": "2195:944:12",
              "statements": [
                {
                  "assignments": [
                    2718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2718,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2228:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2808,
                      "src": "2205:27:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceChainInfo_$2680_memory_ptr",
                        "typeString": "struct Resolver.SourceChainInfo"
                      },
                      "typeName": {
                        "id": 2717,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2716,
                          "name": "SourceChainInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2680,
                          "src": "2205:15:12"
                        },
                        "referencedDeclaration": 2680,
                        "src": "2205:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SourceChainInfo_$2680_storage_ptr",
                          "typeString": "struct Resolver.SourceChainInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2722,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2719,
                      "name": "sourceChainInfos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2699,
                      "src": "2235:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2680_storage_$",
                        "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo storage ref)"
                      }
                    },
                    "id": 2721,
                    "indexExpression": {
                      "id": 2720,
                      "name": "sourceChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2708,
                      "src": "2252:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2235:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SourceChainInfo_$2680_storage",
                      "typeString": "struct Resolver.SourceChainInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2205:61:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2724,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2718,
                            "src": "2297:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SourceChainInfo_$2680_memory_ptr",
                              "typeString": "struct Resolver.SourceChainInfo memory"
                            }
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "requestManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2677,
                          "src": "2297:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2328:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2320:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2726,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2320:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2320:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2297:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072657175657374206d616e6167657220617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 2731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2344:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e02b9a3cb391a52fa0429c4e8e1a801c103bb26be266b57c6f428603495d85e0",
                          "typeString": "literal_string \"No request manager available for source chain\""
                        },
                        "value": "No request manager available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e02b9a3cb391a52fa0429c4e8e1a801c103bb26be266b57c6f428603495d85e0",
                          "typeString": "literal_string \"No request manager available for source chain\""
                        }
                      ],
                      "id": 2723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2276:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2276:125:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2733,
                  "nodeType": "ExpressionStatement",
                  "src": "2276:125:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2735,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2718,
                            "src": "2432:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SourceChainInfo_$2680_memory_ptr",
                              "typeString": "struct Resolver.SourceChainInfo memory"
                            }
                          },
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "messenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2679,
                          "src": "2432:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2458:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2450:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2737,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2450:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2450:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2432:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d657373656e67657220617661696c61626c6520666f7220736f7572636520636861696e",
                        "id": 2742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:41:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        },
                        "value": "No messenger available for source chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d26b5a0618e5494cf176ee41dec1dbca8fb3bc55523487f35a7d4d4aefdad044",
                          "typeString": "literal_string \"No messenger available for source chain\""
                        }
                      ],
                      "id": 2734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2411:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:114:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2744,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:114:12"
                },
                {
                  "assignments": [
                    2746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2746,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "2549:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2808,
                      "src": "2536:20:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2745,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2536:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2747,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2536:20:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2748,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2710,
                      "src": "2571:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2589:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2581:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2749,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2581:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2581:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2571:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2782,
                    "nodeType": "Block",
                    "src": "2761:170:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2768,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2746,
                            "src": "2775:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2771,
                                  "name": "RequestManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2159,
                                  "src": "2817:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RequestManager_$2159_$",
                                    "typeString": "type(contract RequestManager)"
                                  }
                                },
                                "id": 2772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "resolveRequest",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2083,
                                "src": "2817:29:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                                  "typeString": "function RequestManager.resolveRequest(bytes32,bytes32,uint256,address)"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 2773,
                                    "name": "requestId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2702,
                                    "src": "2865:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2774,
                                    "name": "fillId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2704,
                                    "src": "2876:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2775,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2884:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "chainid",
                                    "nodeType": "MemberAccess",
                                    "src": "2884:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2777,
                                    "name": "filler",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2710,
                                    "src": "2899:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "id": 2778,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2864:42:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256,address)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                                  "typeString": "function RequestManager.resolveRequest(bytes32,bytes32,uint256,address)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_address_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256,address)"
                                }
                              ],
                              "expression": {
                                "id": 2769,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2785:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "2785:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2785:135:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2775:145:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2781,
                        "nodeType": "ExpressionStatement",
                        "src": "2775:145:12"
                      }
                    ]
                  },
                  "id": 2783,
                  "nodeType": "IfStatement",
                  "src": "2567:364:12",
                  "trueBody": {
                    "id": 2767,
                    "nodeType": "Block",
                    "src": "2593:162:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2754,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2746,
                            "src": "2607:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2757,
                                  "name": "RequestManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2159,
                                  "src": "2649:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RequestManager_$2159_$",
                                    "typeString": "type(contract RequestManager)"
                                  }
                                },
                                "id": 2758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "invalidateFill",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2138,
                                "src": "2649:29:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                                  "typeString": "function RequestManager.invalidateFill(bytes32,bytes32,uint256)"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 2759,
                                    "name": "requestId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2702,
                                    "src": "2697:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2760,
                                    "name": "fillId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2704,
                                    "src": "2708:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2761,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2716:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "chainid",
                                    "nodeType": "MemberAccess",
                                    "src": "2716:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2763,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2696:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                                  "typeString": "function RequestManager.invalidateFill(bytes32,bytes32,uint256)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint256_$",
                                  "typeString": "tuple(bytes32,bytes32,uint256)"
                                }
                              ],
                              "expression": {
                                "id": 2755,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2617:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "2617:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2617:127:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2607:137:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2766,
                        "nodeType": "ExpressionStatement",
                        "src": "2607:137:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2786,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "2952:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2808,
                      "src": "2941:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMessenger_$2854",
                        "typeString": "contract IMessenger"
                      },
                      "typeName": {
                        "id": 2785,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2784,
                          "name": "IMessenger",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2854,
                          "src": "2941:10:12"
                        },
                        "referencedDeclaration": 2854,
                        "src": "2941:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$2854",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2791,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2788,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2718,
                          "src": "2975:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SourceChainInfo_$2680_memory_ptr",
                            "typeString": "struct Resolver.SourceChainInfo memory"
                          }
                        },
                        "id": 2789,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "messenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2679,
                        "src": "2975:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2787,
                      "name": "IMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2854,
                      "src": "2964:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMessenger_$2854_$",
                        "typeString": "type(contract IMessenger)"
                      }
                    },
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMessenger_$2854",
                      "typeString": "contract IMessenger"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2941:49:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2795,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2718,
                          "src": "3022:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SourceChainInfo_$2680_memory_ptr",
                            "typeString": "struct Resolver.SourceChainInfo memory"
                          }
                        },
                        "id": 2796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2677,
                        "src": "3022:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2797,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "3043:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2792,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2786,
                        "src": "3000:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMessenger_$2854",
                          "typeString": "contract IMessenger"
                        }
                      },
                      "id": 2794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2843,
                      "src": "3000:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2799,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:51:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2801,
                        "name": "sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2708,
                        "src": "3078:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2802,
                        "name": "fillChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "3093:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2803,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "3106:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2804,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2710,
                        "src": "3117:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2805,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "3125:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2800,
                      "name": "Resolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2693,
                      "src": "3067:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes32,address,bytes32)"
                      }
                    },
                    "id": 2806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3067:65:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2807,
                  "nodeType": "EmitStatement",
                  "src": "3062:70:12"
                }
              ]
            },
            "documentation": {
              "id": 2700,
              "nodeType": "StructuredDocumentation",
              "src": "1085:914:12",
              "text": "Resolve the specified request.\n This marks the request identified by ``requestId`` as filled by ``filler``.\n If the ``filler`` is zero, the fill will be marked invalid.\n Information about the fill will be sent to the source chain's :sol:contract:`RequestManager`,\n using the messenger responsible for the source chain.\n .. note::\n     This function is callable only by the native L1 messenger contract,\n     which simply delivers the message sent from the target chain by the\n     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param fillChainId The fill (target) chain ID.\n @param sourceChainId The source chain ID.\n @param filler The address that filled the request, or zero to invalidate the fill."
            },
            "functionSelector": "a56e3c38",
            "id": 2809,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2713,
                    "name": "fillChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2706,
                    "src": "2182:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2714,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2712,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3981,
                  "src": "2171:10:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2171:23:12"
              }
            ],
            "name": "resolve",
            "nameLocation": "2013:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2038:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "2030:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2704,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "2065:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "2057:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2706,
                  "mutability": "mutable",
                  "name": "fillChainId",
                  "nameLocation": "2089:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "2081:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2708,
                  "mutability": "mutable",
                  "name": "sourceChainId",
                  "nameLocation": "2118:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "2110:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "2149:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2809,
                  "src": "2141:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:141:12"
            },
            "returnParameters": {
              "id": 2715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2195:0:12"
            },
            "scope": 2832,
            "src": "2004:1135:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2830,
              "nodeType": "Block",
              "src": "3964:87:12",
              "statements": [
                {
                  "expression": {
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2821,
                        "name": "sourceChainInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2699,
                        "src": "3974:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SourceChainInfo_$2680_storage_$",
                          "typeString": "mapping(uint256 => struct Resolver.SourceChainInfo storage ref)"
                        }
                      },
                      "id": 2823,
                      "indexExpression": {
                        "id": 2822,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2812,
                        "src": "3991:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3974:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceChainInfo_$2680_storage",
                        "typeString": "struct Resolver.SourceChainInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2825,
                          "name": "requestManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2814,
                          "src": "4018:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2826,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2816,
                          "src": "4034:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2824,
                        "name": "SourceChainInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2680,
                        "src": "4002:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SourceChainInfo_$2680_storage_ptr_$",
                          "typeString": "type(struct Resolver.SourceChainInfo storage pointer)"
                        }
                      },
                      "id": 2827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4002:42:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceChainInfo_$2680_memory_ptr",
                        "typeString": "struct Resolver.SourceChainInfo memory"
                      }
                    },
                    "src": "3974:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SourceChainInfo_$2680_storage",
                      "typeString": "struct Resolver.SourceChainInfo storage ref"
                    }
                  },
                  "id": 2829,
                  "nodeType": "ExpressionStatement",
                  "src": "3974:70:12"
                }
              ]
            },
            "documentation": {
              "id": 2810,
              "nodeType": "StructuredDocumentation",
              "src": "3145:678:12",
              "text": "Add a request manager.\n In order to be able to send messages to the :sol:contract:`RequestManager`,\n the resolver contract needs to know the address of the request manager on the source\n chain, as well as the address of the messenger contract responsible for\n transferring messages to the L2 chain.\n .. note:: This function can only be called by the contract owner.\n @param chainId The source L2 chain ID.\n @param requestManager The request manager.\n @param messenger The messenger contract responsible for chain ``chainId``.\n                  Must implement :sol:interface:`IMessenger`."
            },
            "functionSelector": "44596f9b",
            "id": 2831,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2818,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2191,
                  "src": "3954:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3954:9:12"
              }
            ],
            "name": "addRequestManager",
            "nameLocation": "3837:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2812,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "3872:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "3864:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3864:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2814,
                  "mutability": "mutable",
                  "name": "requestManager",
                  "nameLocation": "3897:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "3889:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2816,
                  "mutability": "mutable",
                  "name": "messenger",
                  "nameLocation": "3929:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "3921:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3921:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3854:90:12"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3964:0:12"
            },
            "scope": 2832,
            "src": "3828:223:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2833,
        "src": "478:3575:12",
        "usedErrors": []
      }
    ],
    "src": "32:4022:12"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610af98061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637203ae3b116100665780637203ae3b14610139578063747293fb1461014c5780638da5cb5b1461015f578063a56e3c3814610170578063f2fde38b1461018357600080fd5b80630e19a1c614610098578063308634a5146100c857806344596f9b1461011c578063715018a614610131575b600080fd5b6100ab6100a636600461093e565b610196565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100d6366004610960565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152016100bf565b61012f61012a366004610995565b6101c4565b005b61012f610224565b61012f610147366004610995565b610238565b61012f61015a3660046109d1565b610250565b6000546001600160a01b03166100ab565b61012f61017e3660046109f3565b610267565b61012f6101913660046109d1565b61069b565b600160205281600052604060002081600281106101b257600080fd5b01546001600160a01b03169150829050565b6101cc610711565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b61022c610711565b610236600061076b565b565b610240610711565b61024b8383836107bb565b505050565b610258610711565b610264468260006107bb565b50565b60008381526001602052604090205483906001600160a01b03164682036102ea57336001600160a01b038216146102e55760405162461bcd60e51b815260206004820181905260248201527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f77656460448201526064015b60405180910390fd5b61041c565b600082815260016020819052604090912001546001600160a01b03168061035e5760405162461bcd60e51b815260206004820152602260248201527f5265737472696374656443616c6c733a206d657373656e676572206e6f742073604482015261195d60f21b60648201526084016102dc565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa1580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610a3c565b61041a5760405162461bcd60e51b815260206004820181905260248201527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f77656460448201526064016102dc565b505b600084815260026020908152604091829020825180840190935280546001600160a01b0390811680855260019092015416918301919091526104b65760405162461bcd60e51b815260206004820152602d60248201527f4e6f2072657175657374206d616e6167657220617661696c61626c6520666f7260448201526c1039b7bab931b29031b430b4b760991b60648201526084016102dc565b60208101516001600160a01b03166105205760405162461bcd60e51b815260206004820152602760248201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604482015266329031b430b4b760c91b60648201526084016102dc565b60606001600160a01b03851661057b57604051602481018a90526044810189905246606482015260840160408051601f198184030181529190526020810180516001600160e01b03166303fc4c3760e01b17905290506105d1565b604051602481018a9052604481018990524660648201526001600160a01b038616608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316632d9d377960e11b17905290505b6020820151825160405163bb5ddb0f60e01b81526001600160a01b0383169163bb5ddb0f9161060591908690600401610a5e565b600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b5050604080518a8152602081018c90529081018d90526001600160a01b0389166060820152608081018c90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a150505050505050505050565b6106a3610711565b6001600160a01b0381166107085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102dc565b6102648161076b565b6000546001600160a01b031633146102365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661081d5760405162461bcd60e51b815260206004820152602360248201527f5265737472696374656443616c6c733a2063616c6c65722063616e6e6f74206260448201526206520360ec1b60648201526084016102dc565b6000838152600160205260409020546001600160a01b0316156108915760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b60648201526084016102dc565b6040805180820182526001600160a01b038085168252831660208083019190915260008681526001909152919091206108cb9160026108d1565b50505050565b8260028101928215610919579160200282015b8281111561091957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906108e4565b50610925929150610929565b5090565b5b80821115610925576000815560010161092a565b6000806040838503121561095157600080fd5b50508035926020909101359150565b60006020828403121561097257600080fd5b5035919050565b80356001600160a01b038116811461099057600080fd5b919050565b6000806000606084860312156109aa57600080fd5b833592506109ba60208501610979565b91506109c860408501610979565b90509250925092565b6000602082840312156109e357600080fd5b6109ec82610979565b9392505050565b600080600080600060a08688031215610a0b57600080fd5b85359450602086013593506040860135925060608601359150610a3060808701610979565b90509295509295909350565b600060208284031215610a4e57600080fd5b815180151581146109ec57600080fd5b60018060a01b038316815260006020604081840152835180604085015260005b81811015610a9a57858101830151858201606001528201610a7e565b81811115610aac576000606083870101525b50601f01601f19169290920160600194935050505056fea2646970667358221220e4bd8ed94173de87ead036d9108dbe7415b199865cdc6ce1bad41c38c7dcc72064736f6c634300080d0033",
  "bytecodeSha1": "e44586e25dbeae28cfdb950e9261f52e4842ffb1",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Resolver",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "23": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "22": [
            2169,
            2191,
            true
          ]
        }
      },
      "12": {
        "Resolver.resolve": {
          "20": [
            2432,
            2460,
            true
          ],
          "21": [
            2571,
            2591,
            false
          ]
        }
      },
      "13": {
        "Resolver.resolve": {
          "24": [
            2129,
            2159,
            false
          ],
          "25": [
            2183,
            2203,
            true
          ],
          "26": [
            2485,
            2538,
            true
          ]
        },
        "RestrictedCalls._addCaller": {
          "27": [
            763,
            783,
            true
          ],
          "28": [
            854,
            893,
            true
          ]
        }
      },
      "14": {},
      "6": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "14": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "15": [
            2541,
            2558
          ],
          "16": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "2": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "11": [
            2161,
            2234
          ],
          "12": [
            2244,
            2272
          ]
        }
      },
      "12": {
        "Resolver.addRequestManager": {
          "1": [
            3974,
            4044
          ]
        },
        "Resolver.resolve": {
          "5": [
            2276,
            2401
          ],
          "6": [
            2411,
            2525
          ],
          "7": [
            2607,
            2744
          ],
          "8": [
            2775,
            2920
          ],
          "9": [
            3000,
            3051
          ],
          "10": [
            3062,
            3132
          ]
        }
      },
      "13": {
        "RestrictedCalls._addCaller": {
          "17": [
            755,
            823
          ],
          "18": [
            833,
            957
          ],
          "19": [
            967,
            1011
          ]
        },
        "RestrictedCalls.addCaller": {
          "3": [
            1567,
            1611
          ],
          "4": [
            1185,
            1230
          ]
        }
      },
      "14": {},
      "6": {
        "Context._msgSender": {
          "13": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "IMessenger",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable",
    "RestrictedCalls"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80637203ae3b116100665780637203ae3b14610139578063747293fb1461014c5780638da5cb5b1461015f578063a56e3c3814610170578063f2fde38b1461018357600080fd5b80630e19a1c614610098578063308634a5146100c857806344596f9b1461011c578063715018a614610131575b600080fd5b6100ab6100a636600461093e565b610196565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100d6366004610960565b600260205260009081526040902080546001909101546001600160a01b03918216911682565b604080516001600160a01b039384168152929091166020830152016100bf565b61012f61012a366004610995565b6101c4565b005b61012f610224565b61012f610147366004610995565b610238565b61012f61015a3660046109d1565b610250565b6000546001600160a01b03166100ab565b61012f61017e3660046109f3565b610267565b61012f6101913660046109d1565b61069b565b600160205281600052604060002081600281106101b257600080fd5b01546001600160a01b03169150829050565b6101cc610711565b6040805180820182526001600160a01b03938416815291831660208084019182526000958652600290529320905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b61022c610711565b610236600061076b565b565b610240610711565b61024b8383836107bb565b505050565b610258610711565b610264468260006107bb565b50565b60008381526001602052604090205483906001600160a01b03164682036102ea57336001600160a01b038216146102e55760405162461bcd60e51b815260206004820181905260248201527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f77656460448201526064015b60405180910390fd5b61041c565b600082815260016020819052604090912001546001600160a01b03168061035e5760405162461bcd60e51b815260206004820152602260248201527f5265737472696374656443616c6c733a206d657373656e676572206e6f742073604482015261195d60f21b60648201526084016102dc565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa1580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610a3c565b61041a5760405162461bcd60e51b815260206004820181905260248201527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f77656460448201526064016102dc565b505b600084815260026020908152604091829020825180840190935280546001600160a01b0390811680855260019092015416918301919091526104b65760405162461bcd60e51b815260206004820152602d60248201527f4e6f2072657175657374206d616e6167657220617661696c61626c6520666f7260448201526c1039b7bab931b29031b430b4b760991b60648201526084016102dc565b60208101516001600160a01b03166105205760405162461bcd60e51b815260206004820152602760248201527f4e6f206d657373656e67657220617661696c61626c6520666f7220736f757263604482015266329031b430b4b760c91b60648201526084016102dc565b60606001600160a01b03851661057b57604051602481018a90526044810189905246606482015260840160408051601f198184030181529190526020810180516001600160e01b03166303fc4c3760e01b17905290506105d1565b604051602481018a9052604481018990524660648201526001600160a01b038616608482015260a40160408051601f198184030181529190526020810180516001600160e01b0316632d9d377960e11b17905290505b6020820151825160405163bb5ddb0f60e01b81526001600160a01b0383169163bb5ddb0f9161060591908690600401610a5e565b600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b5050604080518a8152602081018c90529081018d90526001600160a01b0389166060820152608081018c90527f44702e0d5959cc77a7f68b33530b86546d1b157d0d74b27010d5f519adae07cb925060a001905060405180910390a150505050505050505050565b6106a3610711565b6001600160a01b0381166107085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102dc565b6102648161076b565b6000546001600160a01b031633146102365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661081d5760405162461bcd60e51b815260206004820152602360248201527f5265737472696374656443616c6c733a2063616c6c65722063616e6e6f74206260448201526206520360ec1b60648201526084016102dc565b6000838152600160205260409020546001600160a01b0316156108915760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b60648201526084016102dc565b6040805180820182526001600160a01b038085168252831660208083019190915260008681526001909152919091206108cb9160026108d1565b50505050565b8260028101928215610919579160200282015b8281111561091957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906108e4565b50610925929150610929565b5090565b5b80821115610925576000815560010161092a565b6000806040838503121561095157600080fd5b50508035926020909101359150565b60006020828403121561097257600080fd5b5035919050565b80356001600160a01b038116811461099057600080fd5b919050565b6000806000606084860312156109aa57600080fd5b833592506109ba60208501610979565b91506109c860408501610979565b90509250925092565b6000602082840312156109e357600080fd5b6109ec82610979565b9392505050565b600080600080600060a08688031215610a0b57600080fd5b85359450602086013593506040860135925060608601359150610a3060808701610979565b90509295509295909350565b600060208284031215610a4e57600080fd5b815180151581146109ec57600080fd5b60018060a01b038316815260006020604081840152835180604085015260005b81811015610a9a57858101830151858201606001528201610a7e565b81811115610aac576000606083870101525b50601f01601f19169290920160600194935050505056fea2646970667358221220e4bd8ed94173de87ead036d9108dbe7415b199865cdc6ce1bad41c38c7dcc72064736f6c634300080d0033",
  "deployedSourceMap": "478:3575:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:45:13;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;431:32:15;;;413:51;;401:2;386:18;576:45:13;;;;;;;;1019:59:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:59:12;;;;;;;;;;;-1:-1:-1;;;;;890:15:15;;;872:34;;942:15;;;;937:2;922:18;;915:43;807:18;1019:59:12;660:304:15;3828:223:12;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;1431:187:13:-;;;;;;:::i;:::-;;:::i;1121:116::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2004:1135:12;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;576:45:13:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;576:45:13;;-1:-1:-1;576:45:13;;-1:-1:-1;576:45:13:o;3828:223:12:-;1094:13:0;:11;:13::i;:::-;4002:42:12::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4002:42:12;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;3974:25:12;;;:16:::1;:25:::0;;;;:70;;;;-1:-1:-1;;;;;;3974:70:12;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;3974:70:12;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;3828:223::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1431:187:13:-;1094:13:0;:11;:13::i;:::-;1567:44:13::1;1578:13;1593:6;1601:9;1567:10;:44::i;:::-;1431:187:::0;;;:::o;1121:116::-;1094:13:0;:11;:13::i;:::-;1185:45:13::1;1196:13;1211:6;1227:1;1185:10;:45::i;:::-;1121:116:::0;:::o;2004:1135:12:-;2072:14:13;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:13;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:13;;;2175:65;;;;-1:-1:-1;;;2175:65:13;;2470:2:15;2175:65:13;;;2452:21:15;;;2489:18;;;2482:30;2548:34;2528:18;;;2521:62;2600:18;;2175:65:13;;;;;;;;;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;;;;:25;;-1:-1:-1;;;;;2291:25:13;;2330:116;;;;-1:-1:-1;;;2330:116:13;;2831:2:15;2330:116:13;;;2813:21:15;2870:2;2850:18;;;2843:30;2909:34;2889:18;;;2882:62;-1:-1:-1;;;2960:18:15;;;2953:32;3002:19;;2330:116:13;2629:398:15;2330:116:13;2485:53;;-1:-1:-1;;;2485:53:13;;-1:-1:-1;;;;;890:15:15;;;2485:53:13;;;872:34:15;2527:10:13;922:18:15;;;915:43;2485:33:13;;;;;807:18:15;;2485:53:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:13;;2470:2:15;2460:144:13;;;2452:21:15;;;2489:18;;;2482:30;2548:34;2528:18;;;2521:62;2600:18;;2460:144:13;2268:356:15;2460:144:13;2257:358;2125:490;2205:27:12::1;2235:31:::0;;;:16:::1;:31;::::0;;;;;;;;2205:61;;;;::::1;::::0;;;;;-1:-1:-1;;;;;2205:61:12;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;2276:125:::1;;;::::0;-1:-1:-1;;;2276:125:12;;3516:2:15;2276:125:12::1;::::0;::::1;3498:21:15::0;3555:2;3535:18;;;3528:30;3594:34;3574:18;;;3567:62;-1:-1:-1;;;3645:18:15;;;3638:43;3698:19;;2276:125:12::1;3314:409:15::0;2276:125:12::1;2432:14;::::0;::::1;::::0;-1:-1:-1;;;;;2432:28:12::1;2411:114;;;::::0;-1:-1:-1;;;2411:114:12;;3930:2:15;2411:114:12::1;::::0;::::1;3912:21:15::0;3969:2;3949:18;;;3942:30;4008:34;3988:18;;;3981:62;-1:-1:-1;;;4059:18:15;;;4052:37;4106:19;;2411:114:12::1;3728:403:15::0;2411:114:12::1;2536:20;-1:-1:-1::0;;;;;2571:20:12;::::1;2567:364;;2617:127;::::0;::::1;::::0;::::1;4338:25:15::0;;;4379:18;;;4372:34;;;2716:13:12::1;4422:18:15::0;;;4415:34;4311:18;;2617:127:12::1;::::0;;-1:-1:-1;;2617:127:12;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2617:127:12::1;-1:-1:-1::0;;;2617:127:12::1;::::0;;;-1:-1:-1;2567:364:12::1;;;2785:135;::::0;::::1;::::0;::::1;4691:25:15::0;;;4732:18;;;4725:34;;;2884:13:12::1;4775:18:15::0;;;4768:34;-1:-1:-1;;;;;4838:32:15;;4818:18;;;4811:60;4663:19;;2785:135:12::1;::::0;;-1:-1:-1;;2785:135:12;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2785:135:12::1;-1:-1:-1::0;;;2785:135:12::1;::::0;;;-1:-1:-1;2567:364:12::1;2975:14;::::0;::::1;::::0;3022:19;;3000:51:::1;::::0;-1:-1:-1;;;3000:51:12;;-1:-1:-1;;;;;3000:21:12;::::1;::::0;::::1;::::0;:51:::1;::::0;3022:19;3043:7;;3000:51:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3067:65:12::1;::::0;;5838:25:15;;;5894:2;5879:18;;5872:34;;;5922:18;;;5915:34;;;-1:-1:-1;;;;;5985:32:15;;5980:2;5965:18;;5958:60;6049:3;6034:19;;6027:35;;;3067:65:12::1;::::0;-1:-1:-1;5825:3:15;5810:19;;-1:-1:-1;3067:65:12::1;;;;;;;2195:944;;;2062:570:13::0;2004:1135:12;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;6275:2:15;2161:73:0::1;::::0;::::1;6257:21:15::0;6314:2;6294:18;;;6287:30;6353:34;6333:18;;;6326:62;-1:-1:-1;;;6404:18:15;;;6397:36;6450:19;;2161:73:0::1;6073:402:15::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6682:2:15;1414:68:0;;;6664:21:15;;;6701:18;;;6694:30;6760:34;6740:18;;;6733:62;6812:18;;1414:68:0;6480:356:15;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;628:390:13:-;-1:-1:-1;;;;;763:20:13;;755:68;;;;-1:-1:-1;;;755:68:13;;7043:2:15;755:68:13;;;7025:21:15;7082:2;7062:18;;;7055:30;7121:34;7101:18;;;7094:62;-1:-1:-1;;;7172:18:15;;;7165:33;7215:19;;755:68:13;6841:399:15;755:68:13;891:1;854:22;;;:7;:22;;;;;:25;-1:-1:-1;;;;;854:25:13;:39;833:124;;;;-1:-1:-1;;;833:124:13;;7447:2:15;833:124:13;;;7429:21:15;7486:2;7466:18;;;7459:30;7525:34;7505:18;;;7498:62;-1:-1:-1;;;7576:18:15;;;7569:36;7622:19;;833:124:13;7245:402:15;833:124:13;967:44;;;;;;;;-1:-1:-1;;;;;967:44:13;;;;;;;;;;;;;;;-1:-1:-1;967:22:13;;;:7;:22;;;;;;;:44;;;;:::i;:::-;;628:390;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:248:15;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:15;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:15:o;475:180::-;534:6;587:2;575:9;566:7;562:23;558:32;555:52;;;603:1;600;593:12;555:52;-1:-1:-1;626:23:15;;475:180;-1:-1:-1;475:180:15:o;969:173::-;1037:20;;-1:-1:-1;;;;;1086:31:15;;1076:42;;1066:70;;1132:1;1129;1122:12;1066:70;969:173;;;:::o;1147:328::-;1224:6;1232;1240;1293:2;1281:9;1272:7;1268:23;1264:32;1261:52;;;1309:1;1306;1299:12;1261:52;1345:9;1332:23;1322:33;;1374:38;1408:2;1397:9;1393:18;1374:38;:::i;:::-;1364:48;;1431:38;1465:2;1454:9;1450:18;1431:38;:::i;:::-;1421:48;;1147:328;;;;;:::o;1480:186::-;1539:6;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1631:29;1650:9;1631:29;:::i;:::-;1621:39;1480:186;-1:-1:-1;;;1480:186:15:o;1671:460::-;1766:6;1774;1782;1790;1798;1851:3;1839:9;1830:7;1826:23;1822:33;1819:53;;;1868:1;1865;1858:12;1819:53;1904:9;1891:23;1881:33;;1961:2;1950:9;1946:18;1933:32;1923:42;;2012:2;2001:9;1997:18;1984:32;1974:42;;2063:2;2052:9;2048:18;2035:32;2025:42;;2086:39;2120:3;2109:9;2105:19;2086:39;:::i;:::-;2076:49;;1671:460;;;;;;;;:::o;3032:277::-;3099:6;3152:2;3140:9;3131:7;3127:23;3123:32;3120:52;;;3168:1;3165;3158:12;3120:52;3200:9;3194:16;3253:5;3246:13;3239:21;3232:5;3229:32;3219:60;;3275:1;3272;3265:12;4882:692;5086:1;5082;5077:3;5073:11;5069:19;5061:6;5057:32;5046:9;5039:51;5020:4;5109:2;5147;5142;5131:9;5127:18;5120:30;5179:6;5173:13;5222:6;5217:2;5206:9;5202:18;5195:34;5247:1;5257:140;5271:6;5268:1;5265:13;5257:140;;;5366:14;;;5362:23;;5356:30;5332:17;;;5351:2;5328:26;5321:66;5286:10;;5257:140;;;5415:6;5412:1;5409:13;5406:91;;;5485:1;5480:2;5471:6;5460:9;5456:22;5452:31;5445:42;5406:91;-1:-1:-1;5558:2:15;5537:15;-1:-1:-1;;5533:29:15;5518:45;;;;5565:2;5514:54;;4882:692;-1:-1:-1;;;;4882:692:15:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Resolution(uint256,uint256,bytes32,address,bytes32)": {
        "notice": "Emitted when a fill or a non-fill proof is received and sent to the request manager. .. note:: In case of a non-fill proof, the ``filler`` will be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "addCaller(address)": {
        "notice": "Allow calls from an address on the same chain.",
        "params": {
          "caller": "The caller."
        }
      },
      "addCaller(uint256,address,address)": {
        "notice": "Allow calls from an address on another chain.",
        "params": {
          "caller": "The caller.",
          "callerChainId": "The caller's chain ID.",
          "messenger": "The messenger."
        }
      },
      "addRequestManager(uint256,address,address)": {
        "notice": "Add a request manager. In order to be able to send messages to the :sol:contract:`RequestManager`, the resolver contract needs to know the address of the request manager on the source chain, as well as the address of the messenger contract responsible for transferring messages to the L2 chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "chainId": "The source L2 chain ID.",
          "messenger": "The messenger contract responsible for chain ``chainId``.                  Must implement :sol:interface:`IMessenger`.",
          "requestManager": "The request manager."
        }
      },
      "callers(uint256,uint256)": {
        "notice": "Maps caller chain IDs to tuples [caller, messenger]. For same-chain calls, the messenger address is 0x0."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resolve(bytes32,bytes32,uint256,uint256,address)": {
        "notice": "Resolve the specified request. This marks the request identified by ``requestId`` as filled by ``filler``. If the ``filler`` is zero, the fill will be marked invalid. Information about the fill will be sent to the source chain's :sol:contract:`RequestManager`, using the messenger responsible for the source chain. .. note::     This function is callable only by the native L1 messenger contract,     which simply delivers the message sent from the target chain by the     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.",
        "params": {
          "fillChainId": "The fill (target) chain ID.",
          "fillId": "The fill ID.",
          "filler": "The address that filled the request, or zero to invalidate the fill.",
          "requestId": "The request ID.",
          "sourceChainId": "The source chain ID."
        }
      },
      "sourceChainInfos(uint256)": {
        "notice": "Maps source chain IDs to source chain infos."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "The resolver. This contract resides on the L1 chain and is tasked with receiving the fill or non-fill proofs from the target L2 chain and forwarding them to the :sol:contract:`RequestManager` on the source L2 chain.",
    "version": 1
  },
  "offset": [
    478,
    4053
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7203AE3B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x747293FB EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA56E3C38 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE19A1C6 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x308634A5 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x44596F9B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x224 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAB JUMP JUMPDEST PUSH2 0x12F PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP4 KECCAK256 SWAP1 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x22C PUSH2 0x711 JUMP JUMPDEST PUSH2 0x236 PUSH1 0x0 PUSH2 0x76B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x240 PUSH2 0x711 JUMP JUMPDEST PUSH2 0x24B DUP4 DUP4 DUP4 PUSH2 0x7BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x258 PUSH2 0x711 JUMP JUMPDEST PUSH2 0x264 CHAINID DUP3 PUSH1 0x0 PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0x2EA JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DC JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072657175657374206D616E6167657220617661696C61626C6520666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1039B7BAB931B29031B430B4B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x329031B430B4B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3FC4C37 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 POP PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE CHAINID PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2D9D3779 PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xBB5DDB0F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0xBB5DDB0F SWAP2 PUSH2 0x605 SWAP2 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP13 SWAP1 MSTORE PUSH32 0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB SWAP3 POP PUSH1 0xA0 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6A3 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x8CB SWAP2 PUSH1 0x2 PUSH2 0x8D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x919 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x919 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x8E4 JUMP JUMPDEST POP PUSH2 0x925 SWAP3 SWAP2 POP PUSH2 0x929 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x92A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x9BA PUSH1 0x20 DUP6 ADD PUSH2 0x979 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C8 PUSH1 0x40 DUP6 ADD PUSH2 0x979 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9EC DUP3 PUSH2 0x979 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0xA30 PUSH1 0x80 DUP8 ADD PUSH2 0x979 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA9A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0xA7E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xBD DUP15 0xD9 COINBASE PUSH20 0xDE87EAD036D9108DBE7415B199865CDC6CE1BAD4 SHR CODESIZE 0xC7 0xDC 0xC7 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7203AE3B"
    },
    "38": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7203AE3B"
    },
    "49": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x139"
    },
    "53": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x747293FB"
    },
    "60": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14C"
    },
    "64": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA56E3C38"
    },
    "82": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x170"
    },
    "86": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x183"
    },
    "97": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "101": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "REVERT",
      "path": "12"
    },
    "102": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "104": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE19A1C6"
    },
    "109": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "114": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "115": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x308634A5"
    },
    "120": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "121": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC8"
    },
    "124": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x44596F9B"
    },
    "131": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C"
    },
    "135": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "142": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "EQ",
      "path": "12"
    },
    "143": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x131"
    },
    "146": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "DUP1",
      "path": "12"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        478,
        4053
      ],
      "op": "REVERT",
      "path": "12"
    },
    "152": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "153": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB"
    },
    "156": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA6"
    },
    "159": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "160": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "162": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x93E"
    },
    "165": {
      "fn": null,
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "13"
    },
    "166": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "167": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x196"
    },
    "170": {
      "fn": null,
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "13"
    },
    "171": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "172": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "174": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "181": {
      "op": "SHL"
    },
    "182": {
      "op": "SUB"
    },
    "183": {
      "op": "SWAP1"
    },
    "184": {
      "op": "SWAP2"
    },
    "185": {
      "op": "AND"
    },
    "186": {
      "op": "DUP2"
    },
    "187": {
      "op": "MSTORE"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "190": {
      "op": "ADD"
    },
    "191": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "192": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "194": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "195": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "13"
    },
    "196": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "197": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "SUB",
      "path": "13"
    },
    "198": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "199": {
      "fn": null,
      "offset": [
        576,
        621
      ],
      "op": "RETURN",
      "path": "13"
    },
    "200": {
      "offset": [
        1019,
        1078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFC"
    },
    "204": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD6"
    },
    "207": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "208": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "210": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x960"
    },
    "213": {
      "fn": null,
      "jump": "i",
      "offset": [
        1019,
        1078
      ],
      "op": "JUMP",
      "path": "12"
    },
    "214": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "215": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "217": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "219": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "220": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "222": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "223": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "224": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "225": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "227": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "228": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "229": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "230": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "231": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "233": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "234": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "235": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "ADD",
      "path": "12"
    },
    "236": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "243": {
      "op": "SHL"
    },
    "244": {
      "op": "SUB"
    },
    "245": {
      "offset": [
        1019,
        1078
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "246": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "DUP3",
      "path": "12"
    },
    "247": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "AND",
      "path": "12"
    },
    "248": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "249": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "AND",
      "path": "12"
    },
    "250": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "DUP3",
      "path": "12"
    },
    "251": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "JUMP",
      "path": "12"
    },
    "252": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "253": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "255": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "256": {
      "fn": null,
      "offset": [
        1019,
        1078
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "op": "SUB"
    },
    "265": {
      "op": "SWAP4"
    },
    "266": {
      "op": "DUP5"
    },
    "267": {
      "op": "AND"
    },
    "268": {
      "op": "DUP2"
    },
    "269": {
      "op": "MSTORE"
    },
    "270": {
      "op": "SWAP3"
    },
    "271": {
      "op": "SWAP1"
    },
    "272": {
      "op": "SWAP2"
    },
    "273": {
      "op": "AND"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "276": {
      "op": "DUP4"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "op": "MSTORE"
    },
    "279": {
      "op": "ADD"
    },
    "280": {
      "offset": [
        1019,
        1078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBF"
    },
    "283": {
      "op": "JUMP"
    },
    "284": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "285": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F"
    },
    "288": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A"
    },
    "291": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "292": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "294": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x995"
    },
    "297": {
      "fn": "Resolver.addRequestManager",
      "jump": "i",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "298": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "299": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C4"
    },
    "302": {
      "fn": "Resolver.addRequestManager",
      "jump": "i",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "303": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "304": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "STOP",
      "path": "12"
    },
    "305": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "309": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "312": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "313": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "314": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12F"
    },
    "317": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "320": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "321": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "323": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x995"
    },
    "326": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "13"
    },
    "327": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "328": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x238"
    },
    "331": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "13"
    },
    "332": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "333": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12F"
    },
    "336": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A"
    },
    "339": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "340": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "342": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D1"
    },
    "345": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "13"
    },
    "346": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "347": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x250"
    },
    "350": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "13"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "364": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "369": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F"
    },
    "372": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17E"
    },
    "375": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "376": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "378": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F3"
    },
    "381": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2004,
        3139
      ],
      "op": "JUMP",
      "path": "12"
    },
    "382": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "383": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x267"
    },
    "386": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2004,
        3139
      ],
      "op": "JUMP",
      "path": "12"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "397": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D1"
    },
    "400": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69B"
    },
    "405": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "406": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "13"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "13"
    },
    "422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "13"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "LT",
      "path": "13"
    },
    "426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B2"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "13"
    },
    "433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "13"
    },
    "434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "ADD",
      "path": "13"
    },
    "436": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "offset": [
        576,
        621
      ],
      "op": "AND",
      "path": "13"
    },
    "446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "offset": [
        576,
        621
      ],
      "op": "DUP3",
      "path": "13"
    },
    "449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "jump": "o",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "13"
    },
    "452": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "453": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "456": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "459": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 1,
      "value": "0x40"
    },
    "463": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "464": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "465": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "466": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "467": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "ADD",
      "path": "12"
    },
    "468": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "469": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "479": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP5",
      "path": "12"
    },
    "480": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "481": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "482": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "483": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "484": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP4",
      "path": "12"
    },
    "485": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "486": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "488": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "489": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP5",
      "path": "12"
    },
    "490": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "ADD",
      "path": "12"
    },
    "491": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "492": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "493": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        4002,
        4044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "496": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "497": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "DUP7",
      "path": "12"
    },
    "498": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "499": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3990
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "501": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "502": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "503": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "504": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        3999
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "505": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "506": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "507": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "508": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "515": {
      "op": "SHL"
    },
    "516": {
      "op": "SUB"
    },
    "517": {
      "op": "NOT"
    },
    "518": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "519": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "520": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "521": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "522": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "DUP5",
      "path": "12"
    },
    "523": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "524": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "525": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "526": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "527": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "OR",
      "path": "12"
    },
    "528": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "529": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "530": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "531": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "535": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "536": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "ADD",
      "path": "12"
    },
    "537": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "538": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "539": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "540": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "541": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "542": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "543": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "544": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "OR",
      "path": "12"
    },
    "545": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "546": {
      "fn": "Resolver.addRequestManager",
      "offset": [
        3974,
        4044
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "547": {
      "fn": "Resolver.addRequestManager",
      "jump": "o",
      "offset": [
        3828,
        4051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "548": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "549": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C"
    },
    "552": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "555": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x236"
    },
    "560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "565": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "567": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "568": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "569": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "572": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "575": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "576": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "577": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 3,
      "value": "0x24B"
    },
    "580": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1578,
        1591
      ],
      "op": "DUP4",
      "path": "13"
    },
    "581": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1593,
        1599
      ],
      "op": "DUP4",
      "path": "13"
    },
    "582": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1601,
        1610
      ],
      "op": "DUP4",
      "path": "13"
    },
    "583": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1577
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7BB"
    },
    "586": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMP",
      "path": "13"
    },
    "587": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "588": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "13"
    },
    "589": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "13"
    },
    "590": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "13"
    },
    "591": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "13"
    },
    "592": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "593": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x258"
    },
    "596": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "599": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "600": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "601": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 4,
      "value": "0x264"
    },
    "604": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1196,
        1209
      ],
      "op": "CHAINID",
      "path": "13"
    },
    "605": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1211,
        1217
      ],
      "op": "DUP3",
      "path": "13"
    },
    "606": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1227,
        1228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "608": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1195
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7BB"
    },
    "611": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMP",
      "path": "13"
    },
    "612": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "613": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "POP",
      "path": "13"
    },
    "614": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "13"
    },
    "615": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "616": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "618": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP4",
      "path": "13"
    },
    "619": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "13"
    },
    "620": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "621": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "623": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "625": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "626": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "628": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "629": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "630": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "631": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP4",
      "path": "13"
    },
    "632": {
      "fn": "Resolver.resolve",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "SUB"
    },
    "641": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "13"
    },
    "642": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "13"
    },
    "643": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "13"
    },
    "644": {
      "branch": 24,
      "fn": "Resolver.resolve",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "13"
    },
    "645": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2EA"
    },
    "648": {
      "branch": 24,
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "649": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "13"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "13"
    },
    "659": {
      "fn": "Resolver.resolve",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "13"
    },
    "660": {
      "branch": 25,
      "fn": "Resolver.resolve",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "13"
    },
    "661": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E5"
    },
    "664": {
      "branch": 25,
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "665": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "667": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "13"
    },
    "676": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "679": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "681": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "DUP3",
      "path": "13"
    },
    "682": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "13"
    },
    "683": {
      "op": "DUP2"
    },
    "684": {
      "op": "SWAP1"
    },
    "685": {
      "op": "MSTORE"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "688": {
      "op": "DUP3"
    },
    "689": {
      "op": "ADD"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "726": {
      "op": "DUP3"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "733": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "735": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "736": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "DUP1",
      "path": "13"
    },
    "737": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "738": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "SUB",
      "path": "13"
    },
    "739": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "740": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "13"
    },
    "741": {
      "fn": "Resolver.resolve",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "742": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x41C"
    },
    "745": {
      "fn": "Resolver.resolve",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "13"
    },
    "746": {
      "fn": "Resolver.resolve",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "747": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "749": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "13"
    },
    "750": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "751": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "752": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "754": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "756": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "757": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "758": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "759": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "761": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "762": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "763": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "764": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "13"
    },
    "765": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "13"
    },
    "775": {
      "fn": "Resolver.resolve",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "13"
    },
    "776": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35E"
    },
    "779": {
      "fn": "Resolver.resolve",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "780": {
      "fn": "Resolver.resolve",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "782": {
      "fn": "Resolver.resolve",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "789": {
      "op": "SHL"
    },
    "790": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "13"
    },
    "791": {
      "fn": "Resolver.resolve",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "794": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "796": {
      "fn": "Resolver.resolve",
      "offset": [
        2330,
        2446
      ],
      "op": "DUP3",
      "path": "13"
    },
    "797": {
      "fn": "Resolver.resolve",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "13"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "803": {
      "op": "DUP3"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "MSTORE"
    },
    "806": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "841": {
      "op": "DUP3"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "852": {
      "op": "DUP3"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "op": "MSTORE"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DC"
    },
    "861": {
      "op": "JUMP"
    },
    "862": {
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "863": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "865": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "866": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "13"
    },
    "875": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "op": "DUP4"
    },
    "885": {
      "op": "DUP2"
    },
    "886": {
      "op": "AND"
    },
    "887": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "889": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "13"
    },
    "890": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "13"
    },
    "891": {
      "op": "MSTORE"
    },
    "892": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "13"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "895": {
      "op": "DUP4"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "13"
    },
    "899": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "13"
    },
    "900": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "901": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x845C5443"
    },
    "906": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "912": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "914": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "915": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "13"
    },
    "916": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "13"
    },
    "917": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "13"
    },
    "918": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "13"
    },
    "919": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "13"
    },
    "920": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "13"
    },
    "921": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "922": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "923": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "13"
    },
    "924": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "925": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3AA"
    },
    "928": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "929": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "930": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "932": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "13"
    },
    "933": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "934": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "935": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "937": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "13"
    },
    "938": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "939": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "13"
    },
    "940": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "13"
    },
    "941": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "13"
    },
    "942": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "13"
    },
    "943": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "945": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "946": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "947": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "949": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "13"
    },
    "950": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "952": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "13"
    },
    "953": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "13"
    },
    "954": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "13"
    },
    "955": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "13"
    },
    "956": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "13"
    },
    "957": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "13"
    },
    "958": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "960": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "961": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "13"
    },
    "962": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "13"
    },
    "963": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "13"
    },
    "964": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "965": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3CE"
    },
    "968": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "969": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "970": {
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA3C"
    },
    "973": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "13"
    },
    "974": {
      "branch": 26,
      "fn": "Resolver.resolve",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "975": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x41A"
    },
    "978": {
      "branch": 26,
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "979": {
      "fn": "Resolver.resolve",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "981": {
      "fn": "Resolver.resolve",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "13"
    },
    "990": {
      "fn": "Resolver.resolve",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "993": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "995": {
      "fn": "Resolver.resolve",
      "offset": [
        2460,
        2604
      ],
      "op": "DUP3",
      "path": "13"
    },
    "996": {
      "fn": "Resolver.resolve",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "13"
    },
    "997": {
      "op": "DUP2"
    },
    "998": {
      "op": "SWAP1"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1002": {
      "op": "DUP3"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1040": {
      "op": "DUP3"
    },
    "1041": {
      "op": "ADD"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DC"
    },
    "1049": {
      "op": "JUMP"
    },
    "1050": {
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1051": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "13"
    },
    "1052": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1053": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1055": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1056": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1057": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1058": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2251
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1060": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1062": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1063": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1064": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1065": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1067": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1068": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1069": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1070": {
      "fn": "Resolver.resolve",
      "offset": [
        2235,
        2266
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1071": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1072": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1073": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1074": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1075": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "ADD",
      "path": "12"
    },
    "1076": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1077": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1078": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1079": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1080": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1090": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1091": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "AND",
      "path": "12"
    },
    "1092": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1093": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1094": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1095": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1097": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1098": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1099": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "ADD",
      "path": "12"
    },
    "1100": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1101": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "AND",
      "path": "12"
    },
    "1102": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1103": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1104": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "ADD",
      "path": "12"
    },
    "1105": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1106": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1107": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1108": {
      "fn": "Resolver.resolve",
      "offset": [
        2205,
        2266
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1109": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 5,
      "value": "0x4B6"
    },
    "1112": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1113": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1115": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1124": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1127": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1129": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1130": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "ADD",
      "path": "12"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1136": {
      "op": "DUP3"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "MSTORE"
    },
    "1139": {
      "op": "PUSH32",
      "value": "0x4E6F2072657175657374206D616E6167657220617661696C61626C6520666F72"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH13",
      "value": "0x1039B7BAB931B29031B430B4B7"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1196": {
      "op": "DUP3"
    },
    "1197": {
      "op": "ADD"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1201": {
      "op": "ADD"
    },
    "1202": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DC"
    },
    "1205": {
      "op": "JUMP"
    },
    "1206": {
      "fn": "Resolver.resolve",
      "offset": [
        2276,
        2401
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1207": {
      "fn": "Resolver.resolve",
      "offset": [
        2432,
        2446
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x20"
    },
    "1209": {
      "fn": "Resolver.resolve",
      "offset": [
        2432,
        2446
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1210": {
      "fn": "Resolver.resolve",
      "offset": [
        2432,
        2446
      ],
      "op": "ADD",
      "path": "12"
    },
    "1211": {
      "fn": "Resolver.resolve",
      "offset": [
        2432,
        2446
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "branch": 20,
      "fn": "Resolver.resolve",
      "offset": [
        2432,
        2460
      ],
      "op": "AND",
      "path": "12"
    },
    "1221": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x520"
    },
    "1224": {
      "branch": 20,
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1225": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1227": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1236": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1239": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1241": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1242": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "ADD",
      "path": "12"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1248": {
      "op": "DUP3"
    },
    "1249": {
      "op": "ADD"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH32",
      "value": "0x4E6F206D657373656E67657220617661696C61626C6520666F7220736F757263"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1286": {
      "op": "DUP3"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "op": "PUSH7",
      "value": "0x329031B430B4B7"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1302": {
      "op": "DUP3"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "op": "MSTORE"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DC"
    },
    "1311": {
      "op": "JUMP"
    },
    "1312": {
      "fn": "Resolver.resolve",
      "offset": [
        2411,
        2525
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1313": {
      "fn": "Resolver.resolve",
      "offset": [
        2536,
        2556
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "fn": "Resolver.resolve",
      "offset": [
        2571,
        2591
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1324": {
      "branch": 21,
      "fn": "Resolver.resolve",
      "offset": [
        2571,
        2591
      ],
      "op": "AND",
      "path": "12"
    },
    "1325": {
      "fn": "Resolver.resolve",
      "offset": [
        2567,
        2931
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x57B"
    },
    "1328": {
      "branch": 21,
      "fn": "Resolver.resolve",
      "offset": [
        2567,
        2931
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1329": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x40"
    },
    "1331": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1332": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1334": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1335": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "ADD",
      "path": "12"
    },
    "1336": {
      "op": "DUP11"
    },
    "1337": {
      "op": "SWAP1"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1341": {
      "op": "DUP2"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "DUP10"
    },
    "1344": {
      "op": "SWAP1"
    },
    "1345": {
      "op": "MSTORE"
    },
    "1346": {
      "fn": "Resolver.resolve",
      "offset": [
        2716,
        2729
      ],
      "op": "CHAINID",
      "path": "12"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1349": {
      "op": "DUP3"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1357": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1358": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1361": {
      "op": "NOT"
    },
    "1362": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1363": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1364": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "SUB",
      "path": "12"
    },
    "1365": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "ADD",
      "path": "12"
    },
    "1366": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1367": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1368": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1369": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1370": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1371": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1373": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1374": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "ADD",
      "path": "12"
    },
    "1375": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1376": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "op": "SUB"
    },
    "1385": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "AND",
      "path": "12"
    },
    "1386": {
      "op": "PUSH4",
      "value": "0x3FC4C37"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "OR",
      "path": "12"
    },
    "1395": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1396": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1397": {
      "fn": "Resolver.resolve",
      "offset": [
        2617,
        2744
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "fn": "Resolver.resolve",
      "offset": [
        2567,
        2931
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5D1"
    },
    "1402": {
      "fn": "Resolver.resolve",
      "offset": [
        2567,
        2931
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1403": {
      "fn": "Resolver.resolve",
      "offset": [
        2567,
        2931
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1404": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x40"
    },
    "1406": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1407": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1409": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1410": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "ADD",
      "path": "12"
    },
    "1411": {
      "op": "DUP11"
    },
    "1412": {
      "op": "SWAP1"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1416": {
      "op": "DUP2"
    },
    "1417": {
      "op": "ADD"
    },
    "1418": {
      "op": "DUP10"
    },
    "1419": {
      "op": "SWAP1"
    },
    "1420": {
      "op": "MSTORE"
    },
    "1421": {
      "fn": "Resolver.resolve",
      "offset": [
        2884,
        2897
      ],
      "op": "CHAINID",
      "path": "12"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "op": "SUB"
    },
    "1435": {
      "op": "DUP7"
    },
    "1436": {
      "op": "AND"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1439": {
      "op": "DUP3"
    },
    "1440": {
      "op": "ADD"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1447": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1448": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1451": {
      "op": "NOT"
    },
    "1452": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1453": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1454": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "SUB",
      "path": "12"
    },
    "1455": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "ADD",
      "path": "12"
    },
    "1456": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1457": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1458": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1459": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1460": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1461": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1463": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1464": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "ADD",
      "path": "12"
    },
    "1465": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1466": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "AND",
      "path": "12"
    },
    "1476": {
      "op": "PUSH4",
      "value": "0x2D9D3779"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "OR",
      "path": "12"
    },
    "1485": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1486": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1487": {
      "fn": "Resolver.resolve",
      "offset": [
        2785,
        2920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "fn": "Resolver.resolve",
      "offset": [
        2567,
        2931
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1490": {
      "fn": "Resolver.resolve",
      "offset": [
        2975,
        2989
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1492": {
      "fn": "Resolver.resolve",
      "offset": [
        2975,
        2989
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1493": {
      "fn": "Resolver.resolve",
      "offset": [
        2975,
        2989
      ],
      "op": "ADD",
      "path": "12"
    },
    "1494": {
      "fn": "Resolver.resolve",
      "offset": [
        2975,
        2989
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1495": {
      "fn": "Resolver.resolve",
      "offset": [
        3022,
        3041
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 9
    },
    "1496": {
      "fn": "Resolver.resolve",
      "offset": [
        3022,
        3041
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1497": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1499": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1500": {
      "op": "PUSH4",
      "value": "0xBB5DDB0F"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1509": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3021
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1519": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3021
      ],
      "op": "AND",
      "path": "12"
    },
    "1520": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3021
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1521": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3021
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xBB5DDB0F"
    },
    "1526": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3021
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1527": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x605"
    },
    "1530": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1531": {
      "fn": "Resolver.resolve",
      "offset": [
        3022,
        3041
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1532": {
      "fn": "Resolver.resolve",
      "offset": [
        3043,
        3050
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1533": {
      "fn": "Resolver.resolve",
      "offset": [
        3043,
        3050
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1534": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1536": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "ADD",
      "path": "12"
    },
    "1537": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5E"
    },
    "1540": {
      "fn": "Resolver.resolve",
      "jump": "i",
      "offset": [
        3000,
        3051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1541": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1542": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1544": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1546": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1547": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1548": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1549": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "SUB",
      "path": "12"
    },
    "1550": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1551": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1553": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1554": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1555": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1556": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1557": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1558": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1559": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61F"
    },
    "1562": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1563": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1565": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1566": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1567": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1568": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "POP",
      "path": "12"
    },
    "1569": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "GAS",
      "path": "12"
    },
    "1570": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "CALL",
      "path": "12"
    },
    "1571": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1572": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1573": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1574": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x633"
    },
    "1577": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1578": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1579": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1581": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1582": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1583": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1584": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1586": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1587": {
      "fn": "Resolver.resolve",
      "offset": [
        3000,
        3051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x40"
    },
    "1592": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1593": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1594": {
      "op": "DUP11"
    },
    "1595": {
      "op": "DUP2"
    },
    "1596": {
      "op": "MSTORE"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1599": {
      "op": "DUP2"
    },
    "1600": {
      "op": "ADD"
    },
    "1601": {
      "op": "DUP13"
    },
    "1602": {
      "op": "SWAP1"
    },
    "1603": {
      "op": "MSTORE"
    },
    "1604": {
      "op": "SWAP1"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "DUP14"
    },
    "1608": {
      "op": "SWAP1"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "op": "SUB"
    },
    "1618": {
      "op": "DUP10"
    },
    "1619": {
      "op": "AND"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1622": {
      "op": "DUP3"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1627": {
      "op": "DUP2"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "DUP13"
    },
    "1630": {
      "op": "SWAP1"
    },
    "1631": {
      "op": "MSTORE"
    },
    "1632": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x44702E0D5959CC77A7F68B33530B86546D1B157D0D74B27010D5F519ADAE07CB"
    },
    "1665": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "op": "SWAP1"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1674": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1675": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1676": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1677": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "SUB",
      "path": "12"
    },
    "1678": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1679": {
      "fn": "Resolver.resolve",
      "offset": [
        3067,
        3132
      ],
      "op": "LOG1",
      "path": "12"
    },
    "1680": {
      "fn": "Resolver.resolve",
      "offset": [
        2195,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1681": {
      "fn": "Resolver.resolve",
      "offset": [
        2195,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1682": {
      "fn": "Resolver.resolve",
      "offset": [
        2195,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1683": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "13"
    },
    "1684": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1685": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1686": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1687": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1688": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1689": {
      "fn": "Resolver.resolve",
      "offset": [
        2004,
        3139
      ],
      "op": "POP",
      "path": "12"
    },
    "1690": {
      "fn": "Resolver.resolve",
      "jump": "o",
      "offset": [
        2004,
        3139
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A3"
    },
    "1695": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "1698": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "op": "SUB"
    },
    "1708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 11
    },
    "1709": {
      "branch": 22,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "1710": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "1713": {
      "branch": 22,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1716": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1728": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "1732": {
      "op": "MSTORE"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1737": {
      "op": "DUP3"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1775": {
      "op": "DUP3"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "MSTORE"
    },
    "1778": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "1799": {
      "op": "JUMP"
    },
    "1800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x264"
    },
    "1804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1808": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1809": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1810": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1812": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "op": "SUB"
    },
    "1821": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1822": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 13
    },
    "1823": {
      "branch": 23,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 14
    },
    "1824": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236"
    },
    "1827": {
      "branch": 23,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1828": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1830": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1837": {
      "op": "SHL"
    },
    "1838": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1839": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1842": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1844": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1845": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1846": {
      "op": "DUP2"
    },
    "1847": {
      "op": "SWAP1"
    },
    "1848": {
      "op": "MSTORE"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "MSTORE"
    },
    "1854": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1889": {
      "op": "DUP3"
    },
    "1890": {
      "op": "ADD"
    },
    "1891": {
      "op": "MSTORE"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "1898": {
      "op": "JUMP"
    },
    "1899": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1902": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1903": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 15
    },
    "1913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "op": "SUB"
    },
    "1923": {
      "op": "NOT"
    },
    "1924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1925": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x40"
    },
    "1932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1934": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1973": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1974": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1975": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1976": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1977": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1978": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1979": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "op": "SUB"
    },
    "1988": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 17
    },
    "1989": {
      "branch": 27,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "AND",
      "path": "13"
    },
    "1990": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x81D"
    },
    "1993": {
      "branch": 27,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1994": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1996": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2005": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2010": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2011": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "ADD",
      "path": "13"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2017": {
      "op": "DUP3"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "MSTORE"
    },
    "2020": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2055": {
      "op": "DUP3"
    },
    "2056": {
      "op": "ADD"
    },
    "2057": {
      "op": "MSTORE"
    },
    "2058": {
      "op": "PUSH3",
      "value": "0x65203"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2067": {
      "op": "DUP3"
    },
    "2068": {
      "op": "ADD"
    },
    "2069": {
      "op": "MSTORE"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2072": {
      "op": "ADD"
    },
    "2073": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DC"
    },
    "2076": {
      "op": "JUMP"
    },
    "2077": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2078": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        891,
        892
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x0"
    },
    "2080": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2081": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2082": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2083": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        861
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2085": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2087": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2088": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2090": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2091": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2092": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "op": "SUB"
    },
    "2101": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "AND",
      "path": "13"
    },
    "2102": {
      "branch": 28,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        893
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2103": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x891"
    },
    "2106": {
      "branch": 28,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2107": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2109": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2118": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2121": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2123": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2124": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "ADD",
      "path": "13"
    },
    "2125": {
      "op": "MSTORE"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2130": {
      "op": "DUP3"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "MSTORE"
    },
    "2133": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2168": {
      "op": "DUP3"
    },
    "2169": {
      "op": "ADD"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "op": "PUSH6",
      "value": "0x657869737473"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "ADD"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DC"
    },
    "2192": {
      "op": "JUMP"
    },
    "2193": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2194": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 19,
      "value": "0x40"
    },
    "2196": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2197": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2198": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2199": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2200": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "13"
    },
    "2201": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2202": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "op": "SUB"
    },
    "2211": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2212": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2213": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "13"
    },
    "2214": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2215": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2216": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2217": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "13"
    },
    "2218": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2220": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2221": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2222": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "13"
    },
    "2223": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2224": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2225": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2226": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2229": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2230": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2231": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2232": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        974
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2234": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2235": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2236": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2237": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2238": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2239": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2240": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2241": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8CB"
    },
    "2244": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2245": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2247": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8D1"
    },
    "2250": {
      "fn": "RestrictedCalls._addCaller",
      "jump": "i",
      "offset": [
        967,
        1011
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2251": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2252": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "POP",
      "path": "13"
    },
    "2253": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "POP",
      "path": "13"
    },
    "2254": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "POP",
      "path": "13"
    },
    "2255": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "POP",
      "path": "13"
    },
    "2256": {
      "fn": "RestrictedCalls._addCaller",
      "jump": "o",
      "offset": [
        628,
        1018
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2257": {
      "op": "JUMPDEST"
    },
    "2258": {
      "op": "DUP3"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2261": {
      "op": "DUP2"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "SWAP3"
    },
    "2264": {
      "op": "DUP3"
    },
    "2265": {
      "op": "ISZERO"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x919"
    },
    "2269": {
      "op": "JUMPI"
    },
    "2270": {
      "op": "SWAP2"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2273": {
      "op": "MUL"
    },
    "2274": {
      "op": "DUP3"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "JUMPDEST"
    },
    "2277": {
      "op": "DUP3"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "GT"
    },
    "2280": {
      "op": "ISZERO"
    },
    "2281": {
      "op": "PUSH2",
      "value": "0x919"
    },
    "2284": {
      "op": "JUMPI"
    },
    "2285": {
      "op": "DUP3"
    },
    "2286": {
      "op": "MLOAD"
    },
    "2287": {
      "op": "DUP3"
    },
    "2288": {
      "op": "SLOAD"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "op": "NOT"
    },
    "2298": {
      "op": "AND"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "op": "SWAP1"
    },
    "2308": {
      "op": "SWAP2"
    },
    "2309": {
      "op": "AND"
    },
    "2310": {
      "op": "OR"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "SSTORE"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2315": {
      "op": "SWAP1"
    },
    "2316": {
      "op": "SWAP3"
    },
    "2317": {
      "op": "ADD"
    },
    "2318": {
      "op": "SWAP2"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "SWAP1"
    },
    "2322": {
      "op": "SWAP2"
    },
    "2323": {
      "op": "ADD"
    },
    "2324": {
      "op": "SWAP1"
    },
    "2325": {
      "op": "PUSH2",
      "value": "0x8E4"
    },
    "2328": {
      "op": "JUMP"
    },
    "2329": {
      "op": "JUMPDEST"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "PUSH2",
      "value": "0x925"
    },
    "2334": {
      "op": "SWAP3"
    },
    "2335": {
      "op": "SWAP2"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2340": {
      "jump": "i",
      "op": "JUMP"
    },
    "2341": {
      "op": "JUMPDEST"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "SWAP1"
    },
    "2344": {
      "jump": "o",
      "op": "JUMP"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "op": "DUP1"
    },
    "2348": {
      "op": "DUP3"
    },
    "2349": {
      "op": "GT"
    },
    "2350": {
      "op": "ISZERO"
    },
    "2351": {
      "op": "PUSH2",
      "value": "0x925"
    },
    "2354": {
      "op": "JUMPI"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "op": "DUP2"
    },
    "2358": {
      "op": "SSTORE"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "2365": {
      "op": "JUMP"
    },
    "2366": {
      "op": "JUMPDEST"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2369": {
      "op": "DUP1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2372": {
      "op": "DUP4"
    },
    "2373": {
      "op": "DUP6"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "op": "SLT"
    },
    "2376": {
      "op": "ISZERO"
    },
    "2377": {
      "op": "PUSH2",
      "value": "0x951"
    },
    "2380": {
      "op": "JUMPI"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2383": {
      "op": "DUP1"
    },
    "2384": {
      "op": "REVERT"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "op": "DUP1"
    },
    "2389": {
      "op": "CALLDATALOAD"
    },
    "2390": {
      "op": "SWAP3"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2393": {
      "op": "SWAP1"
    },
    "2394": {
      "op": "SWAP2"
    },
    "2395": {
      "op": "ADD"
    },
    "2396": {
      "op": "CALLDATALOAD"
    },
    "2397": {
      "op": "SWAP2"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "jump": "o",
      "op": "JUMP"
    },
    "2400": {
      "op": "JUMPDEST"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "DUP5"
    },
    "2407": {
      "op": "SUB"
    },
    "2408": {
      "op": "SLT"
    },
    "2409": {
      "op": "ISZERO"
    },
    "2410": {
      "op": "PUSH2",
      "value": "0x972"
    },
    "2413": {
      "op": "JUMPI"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2416": {
      "op": "DUP1"
    },
    "2417": {
      "op": "REVERT"
    },
    "2418": {
      "op": "JUMPDEST"
    },
    "2419": {
      "op": "POP"
    },
    "2420": {
      "op": "CALLDATALOAD"
    },
    "2421": {
      "op": "SWAP2"
    },
    "2422": {
      "op": "SWAP1"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "jump": "o",
      "op": "JUMP"
    },
    "2425": {
      "op": "JUMPDEST"
    },
    "2426": {
      "op": "DUP1"
    },
    "2427": {
      "op": "CALLDATALOAD"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "op": "SUB"
    },
    "2436": {
      "op": "DUP2"
    },
    "2437": {
      "op": "AND"
    },
    "2438": {
      "op": "DUP2"
    },
    "2439": {
      "op": "EQ"
    },
    "2440": {
      "op": "PUSH2",
      "value": "0x990"
    },
    "2443": {
      "op": "JUMPI"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2446": {
      "op": "DUP1"
    },
    "2447": {
      "op": "REVERT"
    },
    "2448": {
      "op": "JUMPDEST"
    },
    "2449": {
      "op": "SWAP2"
    },
    "2450": {
      "op": "SWAP1"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "jump": "o",
      "op": "JUMP"
    },
    "2453": {
      "op": "JUMPDEST"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2456": {
      "op": "DUP1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2461": {
      "op": "DUP5"
    },
    "2462": {
      "op": "DUP7"
    },
    "2463": {
      "op": "SUB"
    },
    "2464": {
      "op": "SLT"
    },
    "2465": {
      "op": "ISZERO"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9AA"
    },
    "2469": {
      "op": "JUMPI"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2472": {
      "op": "DUP1"
    },
    "2473": {
      "op": "REVERT"
    },
    "2474": {
      "op": "JUMPDEST"
    },
    "2475": {
      "op": "DUP4"
    },
    "2476": {
      "op": "CALLDATALOAD"
    },
    "2477": {
      "op": "SWAP3"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "PUSH2",
      "value": "0x9BA"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2484": {
      "op": "DUP6"
    },
    "2485": {
      "op": "ADD"
    },
    "2486": {
      "op": "PUSH2",
      "value": "0x979"
    },
    "2489": {
      "jump": "i",
      "op": "JUMP"
    },
    "2490": {
      "op": "JUMPDEST"
    },
    "2491": {
      "op": "SWAP2"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "op": "PUSH2",
      "value": "0x9C8"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2498": {
      "op": "DUP6"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0x979"
    },
    "2503": {
      "jump": "i",
      "op": "JUMP"
    },
    "2504": {
      "op": "JUMPDEST"
    },
    "2505": {
      "op": "SWAP1"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "SWAP3"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "SWAP3"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "op": "SWAP3"
    },
    "2512": {
      "jump": "o",
      "op": "JUMP"
    },
    "2513": {
      "op": "JUMPDEST"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2518": {
      "op": "DUP3"
    },
    "2519": {
      "op": "DUP5"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "op": "SLT"
    },
    "2522": {
      "op": "ISZERO"
    },
    "2523": {
      "op": "PUSH2",
      "value": "0x9E3"
    },
    "2526": {
      "op": "JUMPI"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2529": {
      "op": "DUP1"
    },
    "2530": {
      "op": "REVERT"
    },
    "2531": {
      "op": "JUMPDEST"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9EC"
    },
    "2535": {
      "op": "DUP3"
    },
    "2536": {
      "op": "PUSH2",
      "value": "0x979"
    },
    "2539": {
      "jump": "i",
      "op": "JUMP"
    },
    "2540": {
      "op": "JUMPDEST"
    },
    "2541": {
      "op": "SWAP4"
    },
    "2542": {
      "op": "SWAP3"
    },
    "2543": {
      "op": "POP"
    },
    "2544": {
      "op": "POP"
    },
    "2545": {
      "op": "POP"
    },
    "2546": {
      "jump": "o",
      "op": "JUMP"
    },
    "2547": {
      "op": "JUMPDEST"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2550": {
      "op": "DUP1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2553": {
      "op": "DUP1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2558": {
      "op": "DUP7"
    },
    "2559": {
      "op": "DUP9"
    },
    "2560": {
      "op": "SUB"
    },
    "2561": {
      "op": "SLT"
    },
    "2562": {
      "op": "ISZERO"
    },
    "2563": {
      "op": "PUSH2",
      "value": "0xA0B"
    },
    "2566": {
      "op": "JUMPI"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2569": {
      "op": "DUP1"
    },
    "2570": {
      "op": "REVERT"
    },
    "2571": {
      "op": "JUMPDEST"
    },
    "2572": {
      "op": "DUP6"
    },
    "2573": {
      "op": "CALLDATALOAD"
    },
    "2574": {
      "op": "SWAP5"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2578": {
      "op": "DUP7"
    },
    "2579": {
      "op": "ADD"
    },
    "2580": {
      "op": "CALLDATALOAD"
    },
    "2581": {
      "op": "SWAP4"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2585": {
      "op": "DUP7"
    },
    "2586": {
      "op": "ADD"
    },
    "2587": {
      "op": "CALLDATALOAD"
    },
    "2588": {
      "op": "SWAP3"
    },
    "2589": {
      "op": "POP"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2592": {
      "op": "DUP7"
    },
    "2593": {
      "op": "ADD"
    },
    "2594": {
      "op": "CALLDATALOAD"
    },
    "2595": {
      "op": "SWAP2"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "op": "PUSH2",
      "value": "0xA30"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2602": {
      "op": "DUP8"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "PUSH2",
      "value": "0x979"
    },
    "2607": {
      "jump": "i",
      "op": "JUMP"
    },
    "2608": {
      "op": "JUMPDEST"
    },
    "2609": {
      "op": "SWAP1"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "op": "SWAP3"
    },
    "2612": {
      "op": "SWAP6"
    },
    "2613": {
      "op": "POP"
    },
    "2614": {
      "op": "SWAP3"
    },
    "2615": {
      "op": "SWAP6"
    },
    "2616": {
      "op": "SWAP1"
    },
    "2617": {
      "op": "SWAP4"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "jump": "o",
      "op": "JUMP"
    },
    "2620": {
      "op": "JUMPDEST"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2625": {
      "op": "DUP3"
    },
    "2626": {
      "op": "DUP5"
    },
    "2627": {
      "op": "SUB"
    },
    "2628": {
      "op": "SLT"
    },
    "2629": {
      "op": "ISZERO"
    },
    "2630": {
      "op": "PUSH2",
      "value": "0xA4E"
    },
    "2633": {
      "op": "JUMPI"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2636": {
      "op": "DUP1"
    },
    "2637": {
      "op": "REVERT"
    },
    "2638": {
      "op": "JUMPDEST"
    },
    "2639": {
      "op": "DUP2"
    },
    "2640": {
      "op": "MLOAD"
    },
    "2641": {
      "op": "DUP1"
    },
    "2642": {
      "op": "ISZERO"
    },
    "2643": {
      "op": "ISZERO"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "EQ"
    },
    "2646": {
      "op": "PUSH2",
      "value": "0x9EC"
    },
    "2649": {
      "op": "JUMPI"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2652": {
      "op": "DUP1"
    },
    "2653": {
      "op": "REVERT"
    },
    "2654": {
      "op": "JUMPDEST"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "DUP1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2660": {
      "op": "SHL"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "op": "DUP4"
    },
    "2663": {
      "op": "AND"
    },
    "2664": {
      "op": "DUP2"
    },
    "2665": {
      "op": "MSTORE"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2672": {
      "op": "DUP2"
    },
    "2673": {
      "op": "DUP5"
    },
    "2674": {
      "op": "ADD"
    },
    "2675": {
      "op": "MSTORE"
    },
    "2676": {
      "op": "DUP4"
    },
    "2677": {
      "op": "MLOAD"
    },
    "2678": {
      "op": "DUP1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2681": {
      "op": "DUP6"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2686": {
      "op": "JUMPDEST"
    },
    "2687": {
      "op": "DUP2"
    },
    "2688": {
      "op": "DUP2"
    },
    "2689": {
      "op": "LT"
    },
    "2690": {
      "op": "ISZERO"
    },
    "2691": {
      "op": "PUSH2",
      "value": "0xA9A"
    },
    "2694": {
      "op": "JUMPI"
    },
    "2695": {
      "op": "DUP6"
    },
    "2696": {
      "op": "DUP2"
    },
    "2697": {
      "op": "ADD"
    },
    "2698": {
      "op": "DUP4"
    },
    "2699": {
      "op": "ADD"
    },
    "2700": {
      "op": "MLOAD"
    },
    "2701": {
      "op": "DUP6"
    },
    "2702": {
      "op": "DUP3"
    },
    "2703": {
      "op": "ADD"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2706": {
      "op": "ADD"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "DUP3"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "op": "PUSH2",
      "value": "0xA7E"
    },
    "2713": {
      "op": "JUMP"
    },
    "2714": {
      "op": "JUMPDEST"
    },
    "2715": {
      "op": "DUP2"
    },
    "2716": {
      "op": "DUP2"
    },
    "2717": {
      "op": "GT"
    },
    "2718": {
      "op": "ISZERO"
    },
    "2719": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2722": {
      "op": "JUMPI"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2727": {
      "op": "DUP4"
    },
    "2728": {
      "op": "DUP8"
    },
    "2729": {
      "op": "ADD"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "op": "MSTORE"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "POP"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2739": {
      "op": "NOT"
    },
    "2740": {
      "op": "AND"
    },
    "2741": {
      "op": "SWAP3"
    },
    "2742": {
      "op": "SWAP1"
    },
    "2743": {
      "op": "SWAP3"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "op": "SWAP5"
    },
    "2749": {
      "op": "SWAP4"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1cf13becf5728a9c6ed6ca67e4b20d8163b916e2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol\";\nimport \"../interfaces/IMessenger.sol\";\nimport \"./RequestManager.sol\";\nimport \"./RestrictedCalls.sol\";\n\n/// The resolver.\n///\n/// This contract resides on the L1 chain and is tasked with receiving the\n/// fill or non-fill proofs from the target L2 chain and forwarding them to\n/// the :sol:contract:`RequestManager` on the source L2 chain.\ncontract Resolver is Ownable, RestrictedCalls {\n    struct SourceChainInfo {\n        address requestManager;\n        address messenger;\n    }\n\n    /// Emitted when a fill or a non-fill proof is received and sent to the request manager.\n    ///\n    /// .. note:: In case of a non-fill proof, the ``filler`` will be zero.\n    event Resolution(\n        uint256 sourceChainId,\n        uint256 fillChainId,\n        bytes32 requestId,\n        address filler,\n        bytes32 fillId\n    );\n\n    /// Maps source chain IDs to source chain infos.\n    mapping(uint256 => SourceChainInfo) public sourceChainInfos;\n\n    /// Resolve the specified request.\n    ///\n    /// This marks the request identified by ``requestId`` as filled by ``filler``.\n    /// If the ``filler`` is zero, the fill will be marked invalid.\n    ///\n    /// Information about the fill will be sent to the source chain's :sol:contract:`RequestManager`,\n    /// using the messenger responsible for the source chain.\n    ///\n    /// .. note::\n    ///\n    ///     This function is callable only by the native L1 messenger contract,\n    ///     which simply delivers the message sent from the target chain by the\n    ///     Beamer's L2 :sol:interface:`messenger <IMessenger>` contract.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param fillChainId The fill (target) chain ID.\n    /// @param sourceChainId The source chain ID.\n    /// @param filler The address that filled the request, or zero to invalidate the fill.\n    function resolve(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 fillChainId,\n        uint256 sourceChainId,\n        address filler\n    ) external restricted(fillChainId) {\n        SourceChainInfo memory info = sourceChainInfos[sourceChainId];\n        require(\n            info.requestManager != address(0),\n            \"No request manager available for source chain\"\n        );\n        require(\n            info.messenger != address(0),\n            \"No messenger available for source chain\"\n        );\n\n        bytes memory message;\n\n        if (filler == address(0)) {\n            message = abi.encodeCall(\n                RequestManager.invalidateFill,\n                (requestId, fillId, block.chainid)\n            );\n        } else {\n            message = abi.encodeCall(\n                RequestManager.resolveRequest,\n                (requestId, fillId, block.chainid, filler)\n            );\n        }\n\n        IMessenger messenger = IMessenger(info.messenger);\n        messenger.sendMessage(info.requestManager, message);\n\n        emit Resolution(sourceChainId, fillChainId, requestId, filler, fillId);\n    }\n\n    /// Add a request manager.\n    ///\n    /// In order to be able to send messages to the :sol:contract:`RequestManager`,\n    /// the resolver contract needs to know the address of the request manager on the source\n    /// chain, as well as the address of the messenger contract responsible for\n    /// transferring messages to the L2 chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param chainId The source L2 chain ID.\n    /// @param requestManager The request manager.\n    /// @param messenger The messenger contract responsible for chain ``chainId``.\n    ///                  Must implement :sol:interface:`IMessenger`.\n    function addRequestManager(\n        uint256 chainId,\n        address requestManager,\n        address messenger\n    ) external onlyOwner {\n        sourceChainInfos[chainId] = SourceChainInfo(requestManager, messenger);\n    }\n}\n",
  "sourceMap": "478:3575:12:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:6;936:18:0;:32::i;:::-;478:3575:12;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;478:3575:12:-;;;;;;;",
  "sourcePath": "contracts/contracts/Resolver.sol",
  "type": "contract"
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimRequestExtension",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriodExtension",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "ClaimMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimReceiver",
          "type": "address"
        }
      ],
      "name": "ClaimStakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "FillInvalidatedResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "FinalityPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LpAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LpRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "validUntil",
          "type": "uint32"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "RequestResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLp",
          "type": "address"
        }
      ],
      "name": "addAllowedLp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callerChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedLps",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        }
      ],
      "name": "challengeClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriodExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRequestExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "challengerStakeTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collectedProtocolFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validityPeriod",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentNonce",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "finalityPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        }
      ],
      "name": "invalidateFill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "isInvalidFill",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "isWithdrawn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePPM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLp",
          "type": "address"
        }
      ],
      "name": "removeAllowedLp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "validUntil",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "lpFee",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "protocolFee",
          "type": "uint96"
        },
        {
          "internalType": "uint32",
          "name": "activeClaims",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "withdrawClaimId",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolveRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "setFinalityPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProtocolFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newLpFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newMinLpFee",
          "type": "uint256"
        }
      ],
      "name": "updateFeeData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTransferLimit",
          "type": "uint256"
        }
      ],
      "name": "updateTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "withdrawExpiredRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "1": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol",
    "16": "contracts/contracts/BeamerUtils.sol",
    "18": "contracts/contracts/LpWhitelist.sol",
    "20": "contracts/contracts/RequestManager.sol",
    "22": "contracts/contracts/RestrictedCalls.sol",
    "3": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "6": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
    "8": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "9": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/RequestManager.sol",
    "exportedSymbols": {
      "Address": [
        6091
      ],
      "BeamerUtils": [
        32
      ],
      "Context": [
        5725
      ],
      "IERC20": [
        3070
      ],
      "IERC20Permit": [
        5761
      ],
      "IMessenger": [
        3373
      ],
      "LpWhitelist": [
        390
      ],
      "Math": [
        4933
      ],
      "Ownable": [
        2992
      ],
      "Pausable": [
        4068
      ],
      "RequestManager": [
        2101
      ],
      "RestrictedCalls": [
        2424
      ],
      "SafeERC20": [
        3351
      ]
    },
    "id": 2102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 427,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:20"
      },
      {
        "absolutePath": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "id": 428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 3071,
        "src": "58:84:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 3352,
        "src": "143:93:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
        "id": 430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 4934,
        "src": "237:81:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "id": 431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 2993,
        "src": "319:80:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol",
        "id": 432,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 4069,
        "src": "400:83:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 433,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 33,
        "src": "485:27:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RestrictedCalls.sol",
        "file": "./RestrictedCalls.sol",
        "id": 434,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 2425,
        "src": "513:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/LpWhitelist.sol",
        "file": "./LpWhitelist.sol",
        "id": 435,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2102,
        "sourceUnit": 391,
        "src": "545:27:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 437,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2992,
              "src": "1168:7:20"
            },
            "id": 438,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:7:20"
          },
          {
            "baseName": {
              "id": 439,
              "name": "LpWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 390,
              "src": "1177:11:20"
            },
            "id": 440,
            "nodeType": "InheritanceSpecifier",
            "src": "1177:11:20"
          },
          {
            "baseName": {
              "id": 441,
              "name": "RestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2424,
              "src": "1190:15:20"
            },
            "id": 442,
            "nodeType": "InheritanceSpecifier",
            "src": "1190:15:20"
          },
          {
            "baseName": {
              "id": 443,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4068,
              "src": "1207:8:20"
            },
            "id": 444,
            "nodeType": "InheritanceSpecifier",
            "src": "1207:8:20"
          }
        ],
        "canonicalName": "RequestManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 436,
          "nodeType": "StructuredDocumentation",
          "src": "574:567:20",
          "text": "The request manager.\n This contract is responsible for keeping track of transfer requests,\n implementing the rules of the challenge game and holding deposited\n tokens until they are withdrawn.\n The information passed by L1 resolution will be stored with the respective requests.\n It is the only contract that agents need to interact with on the source chain.\n .. note::\n   The functions resolveRequest and invalidateFill can only be called by\n   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract."
        },
        "fullyImplemented": true,
        "id": 2101,
        "linearizedBaseContracts": [
          2101,
          4068,
          2424,
          390,
          2992,
          5725
        ],
        "name": "RequestManager",
        "nameLocation": "1150:14:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 447,
            "libraryName": {
              "id": 445,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4933,
              "src": "1228:4:20"
            },
            "nodeType": "UsingForDirective",
            "src": "1222:23:20",
            "typeName": {
              "id": 446,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1237:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 451,
            "libraryName": {
              "id": 448,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3351,
              "src": "1256:9:20"
            },
            "nodeType": "UsingForDirective",
            "src": "1250:27:20",
            "typeName": {
              "id": 450,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 449,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3070,
                "src": "1270:6:20"
              },
              "referencedDeclaration": 3070,
              "src": "1270:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3070",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RequestManager.Request",
            "id": 478,
            "members": [
              {
                "constant": false,
                "id": 453,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1462:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1454:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 452,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1454:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 455,
                "mutability": "mutable",
                "name": "sourceTokenAddress",
                "nameLocation": "1486:18:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1478:26:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 454,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 457,
                "mutability": "mutable",
                "name": "targetChainId",
                "nameLocation": "1522:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1514:21:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 456,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1514:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 459,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1553:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1545:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 458,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1545:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 461,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "1576:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1569:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 460,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1569:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 463,
                "mutability": "mutable",
                "name": "lpFee",
                "nameLocation": "1603:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1596:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 462,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1596:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 465,
                "mutability": "mutable",
                "name": "protocolFee",
                "nameLocation": "1625:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1618:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 464,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 467,
                "mutability": "mutable",
                "name": "activeClaims",
                "nameLocation": "1653:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1646:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 466,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1646:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 469,
                "mutability": "mutable",
                "name": "withdrawClaimId",
                "nameLocation": "1682:15:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1675:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 468,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1675:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 471,
                "mutability": "mutable",
                "name": "filler",
                "nameLocation": "1715:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1707:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 470,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1707:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 473,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "1739:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1731:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 472,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1731:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 477,
                "mutability": "mutable",
                "name": "invalidFillIds",
                "nameLocation": "1780:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 478,
                "src": "1755:39:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 476,
                  "keyType": {
                    "id": 474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1755:24:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nameLocation": "1436:7:20",
            "nodeType": "StructDefinition",
            "scope": 2101,
            "src": "1429:372:20",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Claim",
            "id": 499,
            "members": [
              {
                "constant": false,
                "id": 480,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "1838:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "1830:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 479,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1830:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 482,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "1865:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "1857:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 481,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1857:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 484,
                "mutability": "mutable",
                "name": "claimerStake",
                "nameLocation": "1890:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "1882:20:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 483,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 488,
                "mutability": "mutable",
                "name": "challengersStakes",
                "nameLocation": "1940:17:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "1912:45:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 487,
                  "keyType": {
                    "id": 485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1912:27:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 490,
                "mutability": "mutable",
                "name": "lastChallenger",
                "nameLocation": "1975:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "1967:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 489,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 492,
                "mutability": "mutable",
                "name": "challengerStakeTotal",
                "nameLocation": "2007:20:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "1999:28:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 491,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1999:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 494,
                "mutability": "mutable",
                "name": "withdrawnAmount",
                "nameLocation": "2045:15:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "2037:23:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 493,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2037:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 496,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "2078:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "2070:19:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 495,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2070:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 498,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "2107:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 499,
                "src": "2099:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 497,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2099:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1814:5:20",
            "nodeType": "StructDefinition",
            "scope": 2101,
            "src": "1807:313:20",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 500,
              "nodeType": "StructuredDocumentation",
              "src": "2141:103:20",
              "text": "Emitted when a new request has been created.\n .. seealso:: :sol:func:`createRequest`"
            },
            "eventSelector": "5cb181de12515eac47130902b874f42ca463496f8f42ad3b13431e7a223740fe",
            "id": 518,
            "name": "RequestCreated",
            "nameLocation": "2255:14:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2295:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2279:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "2322:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2314:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "2353:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2345:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "2389:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2381:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2381:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "2425:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2417:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2456:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2448:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2448:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2479:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2472:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2501:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2494:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2269:248:20"
            },
            "src": "2249:269:20"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 519,
              "nodeType": "StructuredDocumentation",
              "src": "2524:445:20",
              "text": "Emitted when the token deposit for request ``requestId`` has been\n transferred to the ``receiver``.\n This can happen in two cases:\n  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n  * a claim related to the request has been resolved successfully in favor of the claimer\n .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
            },
            "eventSelector": "ab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565",
            "id": 525,
            "name": "DepositWithdrawn",
            "nameLocation": "2980:16:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3005:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "2997:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3024:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3016:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:37:20"
            },
            "src": "2974:60:20"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 526,
              "nodeType": "StructuredDocumentation",
              "src": "3040:151:20",
              "text": "Emitted when a claim or a counter-claim (challenge) has been made.\n .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
            },
            "eventSelector": "0763b6170df0264962938e705b5cbb0e18fd60107c02b64e3261fa233458ce7a",
            "id": 544,
            "name": "ClaimMade",
            "nameLocation": "3202:9:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3237:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3221:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3263:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3256:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 532,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "3288:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3280:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimerStake",
                  "nameLocation": "3313:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3305:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastChallenger",
                  "nameLocation": "3343:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3335:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challengerStakeTotal",
                  "nameLocation": "3375:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3367:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 540,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "termination",
                  "nameLocation": "3413:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3405:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "3442:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "3434:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3211:243:20"
            },
            "src": "3196:259:20"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 545,
              "nodeType": "StructuredDocumentation",
              "src": "3461:277:20",
              "text": "Emitted when staked native tokens tied to a claim have been withdrawn.\n This can only happen when the claim has been resolved and the caller\n of :sol:func:`withdraw` is allowed to withdraw their stake.\n .. seealso:: :sol:func:`withdraw`"
            },
            "eventSelector": "c9e74e0700d0c6488af9c81d70fdd4158aea77687137ff85499509c41a10612b",
            "id": 553,
            "name": "ClaimStakeWithdrawn",
            "nameLocation": "3749:19:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3785:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "3778:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3778:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3818:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "3802:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3802:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimReceiver",
                  "nameLocation": "3845:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "3837:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3768:96:20"
            },
            "src": "3743:122:20"
          },
          {
            "anonymous": false,
            "eventSelector": "aba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65",
            "id": 559,
            "name": "FinalityPeriodUpdated",
            "nameLocation": "3877:21:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "3907:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "3899:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3899:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "3930:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "3922:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3922:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3898:47:20"
            },
            "src": "3871:75:20"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "3952:119:20",
              "text": "Emitted when a request has been resolved via L1 resolution.\n .. seealso:: :sol:func:`resolveRequest`"
            },
            "eventSelector": "b32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b9956736",
            "id": 568,
            "name": "RequestResolved",
            "nameLocation": "4082:15:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4106:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "4098:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "4125:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "4117:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4117:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "4141:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "4133:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4133:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4097:51:20"
            },
            "src": "4076:73:20"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "4155:111:20",
              "text": "Emitted when an invalidated fill has been resolved.\n .. seealso:: :sol:func:`invalidateFill`"
            },
            "eventSelector": "5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad045",
            "id": 575,
            "name": "FillInvalidatedResolved",
            "nameLocation": "4277:23:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4309:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "4301:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "4328:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "4320:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4320:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4300:35:20"
            },
            "src": "4271:65:20"
          },
          {
            "constant": false,
            "documentation": {
              "id": 576,
              "nodeType": "StructuredDocumentation",
              "src": "4360:161:20",
              "text": "The minimum amount of source chain's native token that the claimer needs to\n provide when making a claim, as well in each round of the challenge game."
            },
            "functionSelector": "eb321173",
            "id": 578,
            "mutability": "immutable",
            "name": "claimStake",
            "nameLocation": "4551:10:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "4526:35:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 577,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4526:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "4568:114:20",
              "text": "The additional time given to claim a request. This value is added to the\n validity period of a request."
            },
            "functionSelector": "83d208c3",
            "id": 581,
            "mutability": "immutable",
            "name": "claimRequestExtension",
            "nameLocation": "4712:21:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "4687:46:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 580,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4687:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "4740:44:20",
              "text": "The period for which the claim is valid."
            },
            "functionSelector": "7dc2cd98",
            "id": 584,
            "mutability": "immutable",
            "name": "claimPeriod",
            "nameLocation": "4814:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "4789:36:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 583,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4789:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "4832:598:20",
              "text": "The period by which the termination time of a claim is extended after each\n round of the challenge game. This period should allow enough time for the\n other parties to counter-challenge.\n .. note::\n    The claim's termination time is extended only if it is less than the\n    extension time.\n Note that in the first challenge round, i.e. the round initiated by the first\n challenger, the termination time is extended additionally by the finality\n period of the target chain. This is done to allow for L1 resolution."
            },
            "functionSelector": "1d18adc5",
            "id": 587,
            "mutability": "immutable",
            "name": "challengePeriodExtension",
            "nameLocation": "5460:24:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "5435:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 586,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5435:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "5491:45:20",
              "text": "The minimum validity period of a request."
            },
            "functionSelector": "1489f8d2",
            "id": 591,
            "mutability": "constant",
            "name": "MIN_VALIDITY_PERIOD",
            "nameLocation": "5565:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "5541:56:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 589,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5541:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 590,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5587:10:20",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1800_by_1",
                "typeString": "int_const 1800"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "5604:45:20",
              "text": "The maximum validity period of a request."
            },
            "functionSelector": "96171d05",
            "id": 595,
            "mutability": "constant",
            "name": "MAX_VALIDITY_PERIOD",
            "nameLocation": "5678:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "5654:54:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 593,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5654:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3438",
              "id": 594,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5700:8:20",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_172800_by_1",
                "typeString": "int_const 172800"
              },
              "value": "48"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 596,
              "nodeType": "StructuredDocumentation",
              "src": "5715:93:20",
              "text": "withdrawClaimId is set to this value when an expired request gets withdrawn by the sender"
            },
            "functionSelector": "ea628898",
            "id": 603,
            "mutability": "constant",
            "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
            "nameLocation": "5836:26:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "5813:68:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 597,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "5813:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "5870:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint96_$",
                      "typeString": "type(uint96)"
                    },
                    "typeName": {
                      "id": 599,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "5870:6:20",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint96_$",
                      "typeString": "type(uint96)"
                    }
                  ],
                  "id": 598,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "5865:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 601,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "5865:12:20",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint96",
                  "typeString": "type(uint96)"
                }
              },
              "id": 602,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "5865:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 604,
              "nodeType": "StructuredDocumentation",
              "src": "5906:163:20",
              "text": "A counter used to generate request and claim IDs.\n The variable holds the most recently used nonce and must\n be incremented to get the next nonce"
            },
            "functionSelector": "adb610a3",
            "id": 606,
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "6088:12:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6074:26:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 605,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "6074:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 607,
              "nodeType": "StructuredDocumentation",
              "src": "6107:94:20",
              "text": "Maps target rollup chain IDs to finality periods.\n Finality periods are in seconds."
            },
            "functionSelector": "2f92f009",
            "id": 611,
            "mutability": "mutable",
            "name": "finalityPeriods",
            "nameLocation": "6241:15:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6206:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 610,
              "keyType": {
                "id": 608,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6214:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "6206:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 609,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6225:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 612,
              "nodeType": "StructuredDocumentation",
              "src": "6263:33:20",
              "text": "Maps request IDs to requests."
            },
            "functionSelector": "9d866985",
            "id": 617,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "6336:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6301:43:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
              "typeString": "mapping(bytes32 => struct RequestManager.Request)"
            },
            "typeName": {
              "id": 616,
              "keyType": {
                "id": 613,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "6309:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "6301:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                "typeString": "mapping(bytes32 => struct RequestManager.Request)"
              },
              "valueType": {
                "id": 615,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 614,
                  "name": "Request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 478,
                  "src": "6320:7:20"
                },
                "referencedDeclaration": 478,
                "src": "6320:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                  "typeString": "struct RequestManager.Request"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "6351:29:20",
              "text": "Maps claim IDs to claims."
            },
            "functionSelector": "3b046f09",
            "id": 623,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "6417:6:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6385:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
              "typeString": "mapping(uint96 => struct RequestManager.Claim)"
            },
            "typeName": {
              "id": 622,
              "keyType": {
                "id": 619,
                "name": "uint96",
                "nodeType": "ElementaryTypeName",
                "src": "6393:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                }
              },
              "nodeType": "Mapping",
              "src": "6385:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                "typeString": "mapping(uint96 => struct RequestManager.Claim)"
              },
              "valueType": {
                "id": 621,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 620,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 499,
                  "src": "6403:5:20"
                },
                "referencedDeclaration": 499,
                "src": "6403:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                  "typeString": "struct RequestManager.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "6430:83:20",
              "text": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
            },
            "functionSelector": "5d5aa11b",
            "id": 627,
            "mutability": "mutable",
            "name": "minLpFee",
            "nameLocation": "6533:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6518:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 625,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6518:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 626,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6544:7:20",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 628,
              "nodeType": "StructuredDocumentation",
              "src": "6566:76:20",
              "text": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e2653eeb",
            "id": 631,
            "mutability": "mutable",
            "name": "lpFeePPM",
            "nameLocation": "6662:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6647:31:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 629,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6647:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f303030",
              "id": 630,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6673:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1_000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 632,
              "nodeType": "StructuredDocumentation",
              "src": "6731:66:20",
              "text": "Protocol fee percentage, expressed in ppm (parts per million)."
            },
            "functionSelector": "e7aad5c4",
            "id": 635,
            "mutability": "mutable",
            "name": "protocolFeePPM",
            "nameLocation": "6817:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6802:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 633,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6802:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6834:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "6886:77:20",
              "text": "The maximum amount of tokens that can be transferred in a single request."
            },
            "functionSelector": "f9432517",
            "id": 639,
            "mutability": "mutable",
            "name": "transferLimit",
            "nameLocation": "6983:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "6968:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 637,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6968:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 638,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6999:11:20",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 640,
              "nodeType": "StructuredDocumentation",
              "src": "7029:84:20",
              "text": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
            },
            "functionSelector": "6bc6c8d1",
            "id": 644,
            "mutability": "mutable",
            "name": "collectedProtocolFees",
            "nameLocation": "7153:21:20",
            "nodeType": "VariableDeclaration",
            "scope": 2101,
            "src": "7118:56:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 643,
              "keyType": {
                "id": 641,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7126:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7118:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 642,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7137:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "7334:75:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 654,
                        "name": "minLpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "7360:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 655,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 647,
                                "src": "7371:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 656,
                                "name": "lpFeePPM",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "7380:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7371:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 658,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7370:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "315f3030305f303030",
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7392:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1_000_000"
                        },
                        "src": "7370:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 652,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4933,
                        "src": "7351:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$4933_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4093,
                      "src": "7351:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7351:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 651,
                  "id": 662,
                  "nodeType": "Return",
                  "src": "7344:58:20"
                }
              ]
            },
            "documentation": {
              "id": 645,
              "nodeType": "StructuredDocumentation",
              "src": "7181:87:20",
              "text": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "f7d64cec",
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lpFee",
            "nameLocation": "7282:5:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7296:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "7288:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7288:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7287:16:20"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "7325:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7325:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7324:9:20"
            },
            "scope": 2101,
            "src": "7273:136:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 679,
              "nodeType": "Block",
              "src": "7566:61:20",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 672,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "7584:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 673,
                            "name": "protocolFeePPM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "7593:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7584:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 675,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7583:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7611:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "src": "7583:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 678,
                  "nodeType": "Return",
                  "src": "7576:44:20"
                }
              ]
            },
            "documentation": {
              "id": 665,
              "nodeType": "StructuredDocumentation",
              "src": "7415:79:20",
              "text": "Compute the protocol fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "a032b5f4",
            "id": 680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "protocolFee",
            "nameLocation": "7508:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7528:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "7520:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7519:16:20"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "7557:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7557:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7556:9:20"
            },
            "scope": 2101,
            "src": "7499:128:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "7863:59:20",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 689,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 683,
                          "src": "7886:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 688,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "7880:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7880:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 692,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 683,
                          "src": "7908:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 691,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "7896:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7896:19:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7880:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 687,
                  "id": 695,
                  "nodeType": "Return",
                  "src": "7873:42:20"
                }
              ]
            },
            "documentation": {
              "id": 681,
              "nodeType": "StructuredDocumentation",
              "src": "7633:161:20",
              "text": "Compute the total fee that needs to be paid for a given transfer amount.\n The total fee is the sum of the liquidity provider fee and the protocol fee."
            },
            "functionSelector": "cea74edf",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFee",
            "nameLocation": "7808:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7825:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "7817:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7817:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7816:16:20"
            },
            "returnParameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "7854:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7854:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7853:9:20"
            },
            "scope": 2101,
            "src": "7799:123:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "8040:134:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 703,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "8071:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                                "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                              }
                            },
                            "id": 705,
                            "indexExpression": {
                              "id": 704,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "8080:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8071:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage",
                              "typeString": "struct RequestManager.Request storage ref"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 453,
                          "src": "8071:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8109:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8101:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 707,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8101:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8101:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8071:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726571756573744964206e6f742076616c6964",
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8125:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        },
                        "value": "requestId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8050:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8050:106:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "8050:106:20"
                },
                {
                  "id": 715,
                  "nodeType": "PlaceholderStatement",
                  "src": "8166:1:20"
                }
              ]
            },
            "documentation": {
              "id": 698,
              "nodeType": "StructuredDocumentation",
              "src": "7946:46:20",
              "text": "Check whether a given request ID is valid."
            },
            "id": 717,
            "name": "validRequestId",
            "nameLocation": "8006:14:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "8029:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 717,
                  "src": "8021:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8021:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8020:19:20"
            },
            "src": "7997:177:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "8267:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 723,
                              "name": "claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "8285:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                                "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                              }
                            },
                            "id": 725,
                            "indexExpression": {
                              "id": 724,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "8292:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8285:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$499_storage",
                              "typeString": "struct RequestManager.Claim storage ref"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 482,
                          "src": "8285:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8320:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8312:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 727,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8312:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8312:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8285:37:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d4964206e6f742076616c6964",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8324:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        },
                        "value": "claimId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        }
                      ],
                      "id": 722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8277:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8277:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "8277:67:20"
                },
                {
                  "id": 735,
                  "nodeType": "PlaceholderStatement",
                  "src": "8354:1:20"
                }
              ]
            },
            "documentation": {
              "id": 718,
              "nodeType": "StructuredDocumentation",
              "src": "8180:44:20",
              "text": "Check whether a given claim ID is valid."
            },
            "id": 737,
            "name": "validClaimId",
            "nameLocation": "8238:12:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "8258:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "8251:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8251:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8250:16:20"
            },
            "src": "8229:133:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 765,
              "nodeType": "Block",
              "src": "8834:195:20",
              "statements": [
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 749,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "8844:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 750,
                      "name": "_claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "8857:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8844:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "8844:24:20"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 753,
                      "name": "claimRequestExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "8878:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 754,
                      "name": "_claimRequestExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "8902:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8878:46:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8878:46:20"
                },
                {
                  "expression": {
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 757,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "8934:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 758,
                      "name": "_claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "8948:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8934:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "8934:26:20"
                },
                {
                  "expression": {
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "8970:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 762,
                      "name": "_challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "8997:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8970:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "8970:52:20"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "8368:301:20",
              "text": "Constructor.\n @param _claimStake Claim stake amount.\n @param _claimRequestExtension Extension to claim a request after validity period ends.\n @param _claimPeriod Claim period, in seconds.\n @param _challengePeriodExtension Challenge period extension, in seconds."
            },
            "id": 766,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "_claimStake",
                  "nameLocation": "8703:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "8695:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8695:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "_claimRequestExtension",
                  "nameLocation": "8732:22:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "8724:30:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "_claimPeriod",
                  "nameLocation": "8772:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "8764:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8764:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_challengePeriodExtension",
                  "nameLocation": "8802:25:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "8794:33:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8794:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8685:148:20"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8834:0:20"
            },
            "scope": 2101,
            "src": "8674:355:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "10137:1983:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 787,
                            "name": "finalityPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "10168:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 789,
                          "indexExpression": {
                            "id": 788,
                            "name": "targetChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "10184:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10168:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10202:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10168:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420726f6c6c7570206e6f7420737570706f72746564",
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10217:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        },
                        "value": "Target rollup not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        }
                      ],
                      "id": 786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10147:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10147:109:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "10147:109:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 796,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "10287:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 797,
                          "name": "MIN_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "10305:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10287:37:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f2073686f7274",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10338:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        },
                        "value": "Validity period too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        }
                      ],
                      "id": 795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10266:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10266:109:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "10266:109:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 803,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 779,
                          "src": "10406:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 804,
                          "name": "MAX_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "10424:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10406:37:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f206c6f6e67",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10457:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        },
                        "value": "Validity period too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10385:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10385:108:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "10385:108:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 810,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "10511:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 811,
                          "name": "transferLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "10521:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10511:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473207472616e73666572206c696d6974",
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10536:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        },
                        "value": "Amount exceeds transfer limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10503:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10503:65:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "10503:65:20"
                },
                {
                  "assignments": [
                    818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 818,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "10586:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "10579:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3070",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 817,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 816,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3070,
                          "src": "10579:6:20"
                        },
                        "referencedDeclaration": 3070,
                        "src": "10579:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 822,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 820,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 771,
                        "src": "10601:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 819,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3070,
                      "src": "10594:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3070_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10594:26:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3070",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10579:41:20"
                },
                {
                  "assignments": [
                    824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 824,
                      "mutability": "mutable",
                      "name": "lpFeeTokenAmount",
                      "nameLocation": "10639:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "10631:24:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10631:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 828,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 826,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "10664:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 825,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "10658:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10658:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10631:40:20"
                },
                {
                  "assignments": [
                    830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 830,
                      "mutability": "mutable",
                      "name": "protocolFeeTokenAmount",
                      "nameLocation": "10689:22:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "10681:30:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10681:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 834,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "10726:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 831,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "10714:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10714:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10681:52:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 838,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10781:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10781:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 842,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10801:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RequestManager_$2101",
                                    "typeString": "contract RequestManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RequestManager_$2101",
                                    "typeString": "contract RequestManager"
                                  }
                                ],
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10793:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 840,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10793:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10793:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 836,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "10765:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3070",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3047,
                            "src": "10765:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10765:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 845,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 777,
                              "src": "10827:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 846,
                              "name": "lpFeeTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "10836:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10827:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 848,
                            "name": "protocolFeeTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "10855:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10827:50:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10765:112:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10891:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10744:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10744:181:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "10744:181:20"
                },
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "10943:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "10936:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 854,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "10936:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 859,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 856,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "10951:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10966:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10951:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10936:31:20"
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 860,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "10977:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 861,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "10992:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "10977:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "10977:20:20"
                },
                {
                  "assignments": [
                    865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "11016:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "11008:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 864,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11008:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 876,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 868,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11069:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "11069:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 870,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "11096:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 871,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "11123:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 872,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "11155:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 873,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "11182:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 874,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "11202:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "id": 866,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "11028:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$32_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "11028:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint96_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,address,address,uint256,uint96) pure returns (bytes32)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11028:189:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11008:209:20"
                },
                {
                  "assignments": [
                    879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "11244:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "11228:26:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 878,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 877,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "11228:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "11228:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "baseExpression": {
                      "id": 880,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "11257:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 882,
                    "indexExpression": {
                      "id": 881,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "11266:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11257:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11228:48:20"
                },
                {
                  "expression": {
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 884,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11286:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "11286:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 887,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11306:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11306:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11286:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "11286:30:20"
                },
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 891,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11326:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sourceTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "11326:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 894,
                      "name": "sourceTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "11358:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11326:50:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "11326:50:20"
                },
                {
                  "expression": {
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 897,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11386:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetChainId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 457,
                      "src": "11386:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 900,
                      "name": "targetChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "11413:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11386:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "11386:40:20"
                },
                {
                  "expression": {
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 903,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11436:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "11436:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 906,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "11456:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11436:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "11436:26:20"
                },
                {
                  "expression": {
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 909,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11472:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "validUntil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 461,
                      "src": "11472:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 914,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11503:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11503:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 916,
                            "name": "validityPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "11521:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11503:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11496:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11496:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11496:40:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11472:64:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "11472:64:20"
                },
                {
                  "expression": {
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 921,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11546:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 463,
                      "src": "11546:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 926,
                          "name": "lpFeeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "11572:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11565:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "11565:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11565:24:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "11546:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "11546:43:20"
                },
                {
                  "expression": {
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 930,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "11599:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 932,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "11599:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 935,
                          "name": "protocolFeeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 830,
                          "src": "11631:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11624:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "11624:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11624:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "11599:55:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "11599:55:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 940,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "11698:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 941,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "11721:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 942,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 771,
                        "src": "11748:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 943,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "11780:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 944,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "11812:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 945,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "11839:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 946,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "11859:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 949,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11885:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11885:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 951,
                              "name": "validityPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "11903:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11885:32:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11878:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 947,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11878:6:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11878:40:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 939,
                      "name": "RequestCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "11670:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint96_$_t_uint32_$returns$__$",
                        "typeString": "function (bytes32,uint256,address,address,address,uint256,uint96,uint32)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11670:258:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "EmitStatement",
                  "src": "11665:263:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11975:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11975:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 963,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12007:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestManager_$2101",
                              "typeString": "contract RequestManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RequestManager_$2101",
                              "typeString": "contract RequestManager"
                            }
                          ],
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11999:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 961,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11999:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11999:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 965,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "12026:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 966,
                            "name": "lpFeeTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 824,
                            "src": "12035:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12026:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 968,
                          "name": "protocolFeeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 830,
                          "src": "12054:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12026:50:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 956,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "11939:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3128,
                      "src": "11939:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3070_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3070_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11939:147:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "11939:147:20"
                },
                {
                  "expression": {
                    "id": 972,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 865,
                    "src": "12104:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 785,
                  "id": 973,
                  "nodeType": "Return",
                  "src": "12097:16:20"
                }
              ]
            },
            "documentation": {
              "id": 767,
              "nodeType": "StructuredDocumentation",
              "src": "9035:837:20",
              "text": "Create a new transfer request.\n @param targetChainId ID of the target chain.\n @param sourceTokenAddress Address of the token contract on the source chain.\n @param targetTokenAddress Address of the token contract on the target chain.\n @param targetAddress Recipient address on the target chain.\n @param amount Amount of tokens to transfer. Does not include fees.\n @param validityPeriod The number of seconds the request is to be considered valid.\n                       Once its validity period has elapsed, the request cannot be claimed\n                       anymore and will eventually expire, allowing the request submitter\n                       to withdraw the deposited tokens if there are no active claims.\n @return ID of the newly created request."
            },
            "functionSelector": "2f4212b8",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 782,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 781,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3995,
                  "src": "10105:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "10105:13:20"
              }
            ],
            "name": "createRequest",
            "nameLocation": "9886:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "9917:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "9909:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9909:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "9948:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "9940:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9940:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "9984:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "9976:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9976:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "10020:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10012:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10051:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10043:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10043:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "validityPeriod",
                  "nameLocation": "10075:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10067:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10067:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9899:196:20"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10128:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10128:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10127:9:20"
            },
            "scope": 2101,
            "src": "9877:2243:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1051,
              "nodeType": "Block",
              "src": "12408:639:20",
              "statements": [
                {
                  "assignments": [
                    986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 986,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "12434:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1051,
                      "src": "12418:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 985,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 984,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "12418:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "12418:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "initialValue": {
                    "baseExpression": {
                      "id": 987,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "12444:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 989,
                    "indexExpression": {
                      "id": 988,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "12453:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12444:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12418:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 992,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "12482:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 469,
                          "src": "12482:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12509:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12482:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12512:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12474:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12474:66:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "12474:66:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1000,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12571:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12571:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1002,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "12590:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 461,
                          "src": "12590:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "12571:37:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374206e6f74206578706972656420796574",
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12622:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        },
                        "value": "Request not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        }
                      ],
                      "id": 999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12550:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12550:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "12550:107:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1009,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "12675:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeClaims",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 467,
                          "src": "12675:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12699:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12675:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41637469766520636c61696d732072756e6e696e67",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12702:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        },
                        "value": "Active claims running"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        }
                      ],
                      "id": 1008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12667:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12667:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "12667:59:20"
                },
                {
                  "expression": {
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1016,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "12737:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1018,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "12737:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1019,
                      "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "12763:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "12737:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "12737:52:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1023,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "12822:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1024,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 986,
                          "src": "12833:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 453,
                        "src": "12833:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1022,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "12805:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12805:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "EmitStatement",
                  "src": "12800:48:20"
                },
                {
                  "assignments": [
                    1030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1030,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "12866:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1051,
                      "src": "12859:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3070",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1029,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1028,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3070,
                          "src": "12859:6:20"
                        },
                        "referencedDeclaration": 3070,
                        "src": "12859:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1035,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1032,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 986,
                          "src": "12881:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "12881:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1031,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3070,
                      "src": "12874:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3070_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12874:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3070",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12859:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1039,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 986,
                          "src": "12950:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 453,
                        "src": "12950:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1041,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "12978:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 459,
                            "src": "12978:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1043,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "12995:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 463,
                            "src": "12995:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "12978:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1046,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "13011:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "protocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "13011:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "12978:52:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1036,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "12918:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3102,
                      "src": "12918:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3070_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3070_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12918:122:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "12918:122:20"
                }
              ]
            },
            "documentation": {
              "id": 976,
              "nodeType": "StructuredDocumentation",
              "src": "12126:171:20",
              "text": "Withdraw funds deposited with an expired request.\n No claims must be active for the request.\n @param requestId ID of the expired request."
            },
            "functionSelector": "79650559",
            "id": 1052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 981,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 978,
                    "src": "12393:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 982,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 980,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 717,
                  "src": "12378:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "12378:25:20"
              }
            ],
            "name": "withdrawExpiredRequest",
            "nameLocation": "12311:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "12342:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1052,
                  "src": "12334:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12334:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12333:19:20"
            },
            "returnParameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12408:0:20"
            },
            "scope": 2101,
            "src": "12302:745:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1191,
              "nodeType": "Block",
              "src": "13561:1051:20",
              "statements": [
                {
                  "assignments": [
                    1069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1069,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "13587:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "13571:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1068,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1067,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "13571:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "13571:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1073,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1070,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "13597:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1072,
                    "indexExpression": {
                      "id": 1071,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "13606:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13597:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13571:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1075,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13648:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13648:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1077,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "13666:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "validUntil",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 461,
                            "src": "13666:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1079,
                            "name": "claimRequestExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "13687:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13666:42:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13648:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571756573742063616e6e6f7420626520636c61696d656420616e796d6f7265",
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13722:35:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfe1866924a090c953658487b5079255d7ae70dccbf04474adb58caef75ac4ed",
                          "typeString": "literal_string \"Request cannot be claimed anymore\""
                        },
                        "value": "Request cannot be claimed anymore"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfe1866924a090c953658487b5079255d7ae70dccbf04474adb58caef75ac4ed",
                          "typeString": "literal_string \"Request cannot be claimed anymore\""
                        }
                      ],
                      "id": 1074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13627:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13627:140:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "13627:140:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1086,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "13785:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 469,
                          "src": "13785:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13812:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13785:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13815:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13777:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13777:66:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "13777:66:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1094,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13861:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "13861:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1096,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "13874:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13861:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520616d6f756e74",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13886:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        },
                        "value": "Invalid stake amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        }
                      ],
                      "id": 1093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13853:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13853:56:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "13853:56:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1102,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "13927:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13945:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13937:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1103,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13937:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13937:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "13927:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c4964206d757374206e6f7420626520307830",
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13949:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        },
                        "value": "FillId must not be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        }
                      ],
                      "id": 1101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13919:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13919:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "13919:55:20"
                },
                {
                  "expression": {
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1111,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "13985:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeClaims",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 467,
                      "src": "13985:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14009:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13985:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "13985:25:20"
                },
                {
                  "assignments": [
                    1118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "14028:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "14021:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "14021:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1122,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1119,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "14036:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14051:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14036:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14021:31:20"
                },
                {
                  "expression": {
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1123,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "14062:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1124,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "14077:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "14062:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "14062:20:20"
                },
                {
                  "assignments": [
                    1128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1128,
                      "mutability": "mutable",
                      "name": "termination",
                      "nameLocation": "14100:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "14092:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14092:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1133,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1129,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "14114:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "14114:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1131,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "14132:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14114:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14092:51:20"
                },
                {
                  "assignments": [
                    1136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1136,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "14168:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "14154:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1135,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1134,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 499,
                          "src": "14154:5:20"
                        },
                        "referencedDeclaration": 499,
                        "src": "14154:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1140,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1137,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "14176:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1139,
                    "indexExpression": {
                      "id": 1138,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "14183:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14176:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$499_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14154:35:20"
                },
                {
                  "expression": {
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1141,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "14199:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "14199:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1144,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "14217:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14199:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "14199:27:20"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1147,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "14236:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 482,
                      "src": "14236:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "14252:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "14252:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14236:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "14236:26:20"
                },
                {
                  "expression": {
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1154,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "14272:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 484,
                      "src": "14272:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "14293:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "14293:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14272:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "14272:30:20"
                },
                {
                  "expression": {
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1161,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "14312:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 496,
                      "src": "14312:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1164,
                      "name": "termination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "14332:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14312:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "14312:31:20"
                },
                {
                  "expression": {
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1167,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "14353:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "14353:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1170,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "14368:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14353:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "14353:21:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1174,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "14413:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1175,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "14436:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 1176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14455:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14455:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14479:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "14479:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14510:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14502:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14502:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14502:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14526:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1185,
                        "name": "termination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "14541:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1186,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "14566:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1173,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "14390:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint96_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint96,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14390:192:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1188,
                  "nodeType": "EmitStatement",
                  "src": "14385:197:20"
                },
                {
                  "expression": {
                    "id": 1189,
                    "name": "nonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1118,
                    "src": "14600:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 1066,
                  "id": 1190,
                  "nodeType": "Return",
                  "src": "14593:12:20"
                }
              ]
            },
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "13053:328:20",
              "text": "Claim that a request was filled by the caller.\n The request must still be valid at call time.\n The caller must provide the ``claimStake`` amount of source rollup's native\n token.\n @param requestId ID of the request.\n @param fillId The fill ID.\n @return The claim ID."
            },
            "functionSelector": "743c151a",
            "id": 1192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1060,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1055,
                    "src": "13499:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1059,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 717,
                  "src": "13484:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "13484:25:20"
              },
              {
                "id": 1063,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1062,
                  "name": "onlyWhitelist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 352,
                  "src": "13518:13:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "13518:13:20"
              }
            ],
            "name": "claimRequest",
            "nameLocation": "13395:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "13416:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "13408:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13408:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "13435:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "13427:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13427:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13407:35:20"
            },
            "returnParameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "13549:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "13549:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13548:8:20"
            },
            "scope": 2101,
            "src": "13386:1226:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1411,
              "nodeType": "Block",
              "src": "15917:2142:20",
              "statements": [
                {
                  "assignments": [
                    1203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1203,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "15941:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "15927:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1202,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1201,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 499,
                          "src": "15927:5:20"
                        },
                        "referencedDeclaration": 499,
                        "src": "15927:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1207,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1204,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "15949:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1206,
                    "indexExpression": {
                      "id": 1205,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "15956:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15949:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$499_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15927:37:20"
                },
                {
                  "assignments": [
                    1209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1209,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "15982:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "15974:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1208,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15974:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1212,
                  "initialValue": {
                    "expression": {
                      "id": 1210,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "15994:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "requestId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 480,
                    "src": "15994:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15974:35:20"
                },
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "termination",
                      "nameLocation": "16027:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "16019:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16019:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1217,
                  "initialValue": {
                    "expression": {
                      "id": 1215,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "16041:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "termination",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 496,
                    "src": "16041:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16019:39:20"
                },
                {
                  "assignments": [
                    1220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1220,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "16084:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "16068:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1219,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1218,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "16068:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "16068:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1224,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1221,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "16094:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1223,
                    "indexExpression": {
                      "id": 1222,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1209,
                      "src": "16103:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16094:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16068:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1226,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16131:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16131:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1228,
                          "name": "termination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "16149:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16131:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2065787069726564",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16162:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        },
                        "value": "Claim expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        }
                      ],
                      "id": 1225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16123:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16123:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "16123:55:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1234,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "16196:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 471,
                          "src": "16196:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16222:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16214:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16214:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16214:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16196:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265717565737420616c7265616479207265736f6c766564",
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16226:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3526c2b4809a8f35cd282edb7833ea9202ea44b37236862f00d8e3beacb26fb",
                          "typeString": "literal_string \"Request already resolved\""
                        },
                        "value": "Request already resolved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3526c2b4809a8f35cd282edb7833ea9202ea44b37236862f00d8e3beacb26fb",
                          "typeString": "literal_string \"Request already resolved\""
                        }
                      ],
                      "id": 1233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16188:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16188:65:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1243,
                  "nodeType": "ExpressionStatement",
                  "src": "16188:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16284:37:20",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 1245,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "16285:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "invalidFillIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 477,
                            "src": "16285:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1249,
                          "indexExpression": {
                            "expression": {
                              "id": 1247,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "16308:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fillId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 498,
                            "src": "16308:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16285:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20616c726561647920696e76616c696461746564",
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16335:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        },
                        "value": "Fill already invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        }
                      ],
                      "id": 1244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16263:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16263:108:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "16263:108:20"
                },
                {
                  "assignments": [
                    1255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1255,
                      "mutability": "mutable",
                      "name": "periodExtension",
                      "nameLocation": "16390:15:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "16382:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1254,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16382:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1257,
                  "initialValue": {
                    "id": 1256,
                    "name": "challengePeriodExtension",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "16408:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16382:50:20"
                },
                {
                  "assignments": [
                    1259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1259,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "16450:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "16442:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1258,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16442:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1262,
                  "initialValue": {
                    "expression": {
                      "id": 1260,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "16460:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 482,
                    "src": "16460:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16442:31:20"
                },
                {
                  "assignments": [
                    1264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "16491:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "16483:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16483:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1267,
                  "initialValue": {
                    "expression": {
                      "id": 1265,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "16506:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 484,
                    "src": "16506:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16483:41:20"
                },
                {
                  "assignments": [
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1269,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "16542:20:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "16534:28:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16534:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1272,
                  "initialValue": {
                    "expression": {
                      "id": 1270,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "16565:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 492,
                    "src": "16565:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16534:57:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1273,
                      "name": "claimerStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "16606:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1274,
                      "name": "challengerStakeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "16621:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16606:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1329,
                    "nodeType": "Block",
                    "src": "17018:240:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1310,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17040:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17040:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1312,
                                "name": "claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "17054:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17040:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656c696769626c6520746f206f7574626964",
                              "id": 1314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17063:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                                "typeString": "literal_string \"Not eligible to outbid\""
                              },
                              "value": "Not eligible to outbid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                                "typeString": "literal_string \"Not eligible to outbid\""
                              }
                            ],
                            "id": 1309,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17032:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17032:56:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "17032:56:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1318,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17127:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "17127:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1320,
                                    "name": "challengerStakeTotal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1269,
                                    "src": "17140:20:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1321,
                                    "name": "claimerStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1264,
                                    "src": "17163:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17140:35:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1323,
                                  "name": "claimStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "17178:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17140:48:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17127:61:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17206:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              },
                              "value": "Not enough stake provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              }
                            ],
                            "id": 1317,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17102:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17102:145:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1328,
                        "nodeType": "ExpressionStatement",
                        "src": "17102:145:20"
                      }
                    ]
                  },
                  "id": 1330,
                  "nodeType": "IfStatement",
                  "src": "16602:656:20",
                  "trueBody": {
                    "id": 1308,
                    "nodeType": "Block",
                    "src": "16643:369:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1276,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "16661:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16685:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16661:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1287,
                        "nodeType": "IfStatement",
                        "src": "16657:121:20",
                        "trueBody": {
                          "id": 1286,
                          "nodeType": "Block",
                          "src": "16688:90:20",
                          "statements": [
                            {
                              "expression": {
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1279,
                                  "name": "periodExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1255,
                                  "src": "16706:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1280,
                                    "name": "finalityPeriods",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 611,
                                    "src": "16725:15:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1283,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1281,
                                      "name": "request",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1220,
                                      "src": "16741:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                        "typeString": "struct RequestManager.Request storage pointer"
                                      }
                                    },
                                    "id": 1282,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "targetChainId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 457,
                                    "src": "16741:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16725:38:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16706:57:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1285,
                              "nodeType": "ExpressionStatement",
                              "src": "16706:57:20"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1289,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "16799:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "16799:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1291,
                                "name": "claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1259,
                                "src": "16813:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "16799:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616c6c656e6765206f776e20636c61696d",
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16822:28:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              },
                              "value": "Cannot challenge own claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              }
                            ],
                            "id": 1288,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16791:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16791:60:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1295,
                        "nodeType": "ExpressionStatement",
                        "src": "16791:60:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1297,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "16890:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "16890:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1299,
                                    "name": "claimerStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1264,
                                    "src": "16903:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1300,
                                    "name": "challengerStakeTotal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1269,
                                    "src": "16918:20:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16903:35:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16941:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16903:39:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16890:52:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16960:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              },
                              "value": "Not enough stake provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              }
                            ],
                            "id": 1296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16865:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16865:136:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "16865:136:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1331,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "17272:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "17272:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1333,
                      "name": "claimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1259,
                      "src": "17286:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17272:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1375,
                    "nodeType": "Block",
                    "src": "17398:230:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1347,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "17412:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastChallenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 490,
                            "src": "17412:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1350,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17435:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17435:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17412:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1353,
                        "nodeType": "ExpressionStatement",
                        "src": "17412:33:20"
                      },
                      {
                        "expression": {
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1354,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "17459:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1358,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 488,
                              "src": "17459:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1359,
                            "indexExpression": {
                              "expression": {
                                "id": 1356,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17483:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17483:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17459:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1360,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17498:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "17498:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17459:48:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1363,
                        "nodeType": "ExpressionStatement",
                        "src": "17459:48:20"
                      },
                      {
                        "expression": {
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1364,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "17521:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17545:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "17545:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17521:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1368,
                        "nodeType": "ExpressionStatement",
                        "src": "17521:33:20"
                      },
                      {
                        "expression": {
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1369,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "17568:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 492,
                            "src": "17568:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1372,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "17597:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17568:49:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1374,
                        "nodeType": "ExpressionStatement",
                        "src": "17568:49:20"
                      }
                    ]
                  },
                  "id": 1376,
                  "nodeType": "IfStatement",
                  "src": "17268:360:20",
                  "trueBody": {
                    "id": 1346,
                    "nodeType": "Block",
                    "src": "17295:97:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1335,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "17309:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1336,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17325:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "17325:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17309:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1339,
                        "nodeType": "ExpressionStatement",
                        "src": "17309:25:20"
                      },
                      {
                        "expression": {
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1340,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "17348:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1342,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 484,
                            "src": "17348:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1343,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "17369:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17348:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1345,
                        "nodeType": "ExpressionStatement",
                        "src": "17348:33:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1377,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "17642:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "17642:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1379,
                        "name": "periodExtension",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "17660:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17642:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1381,
                      "name": "termination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "17678:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17642:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1397,
                  "nodeType": "IfStatement",
                  "src": "17638:170:20",
                  "trueBody": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "17691:117:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1383,
                            "name": "termination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "17705:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1384,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "17719:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "17719:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1386,
                              "name": "periodExtension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "17737:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17719:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17705:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1389,
                        "nodeType": "ExpressionStatement",
                        "src": "17705:47:20"
                      },
                      {
                        "expression": {
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1390,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "17766:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "termination",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 496,
                            "src": "17766:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1393,
                            "name": "termination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "17786:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17766:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1395,
                        "nodeType": "ExpressionStatement",
                        "src": "17766:31:20"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1399,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "17846:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1400,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "17869:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 1401,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1259,
                        "src": "17890:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1402,
                        "name": "claimerStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "17911:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1403,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "17937:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 490,
                        "src": "17937:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1405,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "17971:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1406,
                        "name": "termination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "18005:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1407,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "18030:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 498,
                        "src": "18030:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1398,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "17823:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint96_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint96,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17823:229:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1410,
                  "nodeType": "EmitStatement",
                  "src": "17818:234:20"
                }
              ]
            },
            "documentation": {
              "id": 1193,
              "nodeType": "StructuredDocumentation",
              "src": "14618:1187:20",
              "text": "Challenge an existing claim.\n The claim must still be valid at call time.\n This function implements one round of the challenge game.\n The original claimer is allowed to call this function only\n after someone else made a challenge, i.e. every second round.\n However, once the original claimer counter-challenges, anyone\n can join the game and make another challenge.\n The caller must provide enough native tokens as their stake.\n For the original claimer, the minimum stake is\n ``challengerStakeTotal - claimerStake + claimStake``.\n For challengers, the minimum stake is\n ``claimerStake - challengerStakeTotal + 1``.\n An example (time flows downwards, claimStake = 10)::\n   claimRequest() by Max [stakes 10]\n   challengeClaim() by Alice [stakes 11]\n   challengeClaim() by Max [stakes 11]\n   challengeClaim() by Bob [stakes 16]\n In this example, if Max didn't want to lose the challenge game to\n Alice and Bob, he would have to challenge with a stake of at least 16.\n @param claimId The claim ID."
            },
            "functionSelector": "b4d1d27a",
            "id": 1412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1198,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1195,
                    "src": "15904:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  }
                ],
                "id": 1199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1197,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 737,
                  "src": "15891:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "15891:21:20"
              }
            ],
            "name": "challengeClaim",
            "nameLocation": "15819:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "15841:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "15834:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "15834:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15833:16:20"
            },
            "returnParameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15917:0:20"
            },
            "scope": 2101,
            "src": "15810:2249:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1541,
              "nodeType": "Block",
              "src": "18727:1210:20",
              "statements": [
                {
                  "assignments": [
                    1425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1425,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "18751:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "18737:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1424,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1423,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 499,
                          "src": "18737:5:20"
                        },
                        "referencedDeclaration": 499,
                        "src": "18737:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1429,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1426,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "18759:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1428,
                    "indexExpression": {
                      "id": 1427,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "18766:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18759:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$499_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18737:37:20"
                },
                {
                  "assignments": [
                    1431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1431,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "18792:9:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "18784:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1430,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18784:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1434,
                  "initialValue": {
                    "expression": {
                      "id": 1432,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "18804:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "requestId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 480,
                    "src": "18804:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18784:35:20"
                },
                {
                  "assignments": [
                    1437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1437,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "18845:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "18829:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1436,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1435,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "18829:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "18829:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1441,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1438,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "18855:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1440,
                    "indexExpression": {
                      "id": 1439,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "18864:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18855:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18829:45:20"
                },
                {
                  "assignments": [
                    1443,
                    1445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1443,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "18894:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "18886:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1442,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18886:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1445,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "18917:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "18909:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1444,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18909:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1449,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1447,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "18947:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 1446,
                      "name": "resolveClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "18934:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint96_$returns$_t_address_$_t_uint256_$",
                        "typeString": "function (uint96) view returns (address,uint256)"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18934:21:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18885:70:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1450,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1425,
                          "src": "18970:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1451,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengersStakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 488,
                        "src": "18970:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1453,
                      "indexExpression": {
                        "id": 1452,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "18994:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18970:38:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19011:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18970:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1465,
                  "nodeType": "IfStatement",
                  "src": "18966:152:20",
                  "trueBody": {
                    "id": 1464,
                    "nodeType": "Block",
                    "src": "19014:104:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1456,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1425,
                                "src": "19065:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 488,
                              "src": "19065:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1460,
                            "indexExpression": {
                              "id": 1458,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "19089:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19065:38:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19106:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19065:42:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "19065:42:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1467,
                      "mutability": "mutable",
                      "name": "withdrawnAmount",
                      "nameLocation": "19136:15:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "19128:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1466,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19128:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1470,
                  "initialValue": {
                    "expression": {
                      "id": 1468,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "19154:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawnAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 494,
                    "src": "19154:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19128:47:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1471,
                      "name": "withdrawnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "19261:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19280:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19261:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1481,
                  "nodeType": "IfStatement",
                  "src": "19257:76:20",
                  "trueBody": {
                    "id": 1480,
                    "nodeType": "Block",
                    "src": "19283:50:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1474,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "19297:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activeClaims",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 467,
                            "src": "19297:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19321:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "19297:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1479,
                        "nodeType": "ExpressionStatement",
                        "src": "19297:25:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1482,
                      "name": "withdrawnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "19342:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1483,
                      "name": "ethToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "19361:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19342:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "19342:32:20"
                },
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1486,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "19384:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 494,
                      "src": "19384:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1489,
                      "name": "withdrawnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "19408:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19384:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "19384:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1493,
                          "name": "withdrawnAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1467,
                          "src": "19455:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1494,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "19474:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1495,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 484,
                            "src": "19474:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1496,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "19495:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1497,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 492,
                            "src": "19495:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19474:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19455:66:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f20776974686472617720746f6f206c61726765",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19535:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        },
                        "value": "Amount to withdraw too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        }
                      ],
                      "id": 1492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19434:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19434:141:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "19434:141:20"
                },
                {
                  "assignments": [
                    1504,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1504,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "19592:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1541,
                      "src": "19587:9:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1503,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19587:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1511,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19643:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1505,
                          "name": "claimReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1443,
                          "src": "19602:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "19602:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1507,
                          "name": "ethToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1445,
                          "src": "19628:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "19602:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19602:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19586:60:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1513,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "19664:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19670:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19656:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19656:37:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "19656:37:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1518,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "19729:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 1519,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "19738:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1520,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "19749:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1517,
                      "name": "ClaimStakeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "19709:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (uint96,bytes32,address)"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19709:54:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "EmitStatement",
                  "src": "19704:59:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1523,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "19778:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawClaimId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 469,
                        "src": "19778:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19805:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19778:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1527,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "19810:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1528,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1425,
                          "src": "19827:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 482,
                        "src": "19827:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "19810:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19778:62:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1538,
                  "nodeType": "IfStatement",
                  "src": "19774:126:20",
                  "trueBody": {
                    "id": 1537,
                    "nodeType": "Block",
                    "src": "19842:58:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1533,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "19872:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            {
                              "id": 1534,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1415,
                              "src": "19881:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1532,
                            "name": "withdrawDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "19856:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Request_$478_storage_ptr_$_t_uint96_$returns$__$",
                              "typeString": "function (struct RequestManager.Request storage pointer,uint96)"
                            }
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19856:33:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "19856:33:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1539,
                    "name": "claimReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1443,
                    "src": "19917:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1422,
                  "id": 1540,
                  "nodeType": "Return",
                  "src": "19910:20:20"
                }
              ]
            },
            "documentation": {
              "id": 1413,
              "nodeType": "StructuredDocumentation",
              "src": "18065:546:20",
              "text": "Withdraw the deposit that the request submitter left with the contract,\n as well as the staked native tokens associated with the claim.\n In case the caller of this function is a challenger that won the game,\n they will only get their staked native tokens plus the reward in the form\n of full (sole challenger) or partial (multiple challengers) amount\n of native tokens staked by the dishonest claimer.\n @param claimId The claim ID.\n @return The address of the deposit receiver."
            },
            "functionSelector": "dee4dea0",
            "id": 1542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1418,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1415,
                    "src": "18688:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  }
                ],
                "id": 1419,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1417,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 737,
                  "src": "18675:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "18675:21:20"
              }
            ],
            "name": "withdraw",
            "nameLocation": "18625:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "18641:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "18634:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1414,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "18634:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18633:16:20"
            },
            "returnParameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "18714:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18714:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18713:9:20"
            },
            "scope": 2101,
            "src": "18616:1321:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1767,
              "nodeType": "Block",
              "src": "20049:3332:20",
              "statements": [
                {
                  "assignments": [
                    1553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1553,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "20073:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20059:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1552,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1551,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 499,
                          "src": "20059:5:20"
                        },
                        "referencedDeclaration": 499,
                        "src": "20059:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1557,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1554,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "20081:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1556,
                    "indexExpression": {
                      "id": 1555,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "20088:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20081:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$499_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20059:37:20"
                },
                {
                  "assignments": [
                    1560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1560,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "20122:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20106:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1559,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1558,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "20106:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "20106:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1565,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1561,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "20132:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1564,
                    "indexExpression": {
                      "expression": {
                        "id": 1562,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "20141:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "20141:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20132:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20106:51:20"
                },
                {
                  "assignments": [
                    1567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1567,
                      "mutability": "mutable",
                      "name": "withdrawClaimId",
                      "nameLocation": "20174:15:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20167:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 1566,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "20167:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1570,
                  "initialValue": {
                    "expression": {
                      "id": 1568,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1560,
                      "src": "20192:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawClaimId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 469,
                    "src": "20192:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20167:48:20"
                },
                {
                  "assignments": [
                    1572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1572,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "20233:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20225:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1571,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20225:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1575,
                  "initialValue": {
                    "expression": {
                      "id": 1573,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1553,
                      "src": "20243:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 482,
                    "src": "20243:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20225:31:20"
                },
                {
                  "assignments": [
                    1577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1577,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "20274:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20266:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20266:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1580,
                  "initialValue": {
                    "expression": {
                      "id": 1578,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1553,
                      "src": "20289:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 484,
                    "src": "20289:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20266:41:20"
                },
                {
                  "assignments": [
                    1582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1582,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "20325:20:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20317:28:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20317:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1585,
                  "initialValue": {
                    "expression": {
                      "id": 1583,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1553,
                      "src": "20348:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 492,
                    "src": "20348:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20317:57:20"
                },
                {
                  "assignments": [
                    1587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1587,
                      "mutability": "mutable",
                      "name": "claimFillId",
                      "nameLocation": "20392:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20384:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1586,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20384:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1590,
                  "initialValue": {
                    "expression": {
                      "id": 1588,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1553,
                      "src": "20406:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fillId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 498,
                    "src": "20406:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20384:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1592,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1553,
                            "src": "20449:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 494,
                          "src": "20449:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1594,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1577,
                            "src": "20473:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1595,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1582,
                            "src": "20488:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20473:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20449:59:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20616c72656164792077697468647261776e",
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20522:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        },
                        "value": "Claim already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        }
                      ],
                      "id": 1591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20428:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20428:129:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "20428:129:20"
                },
                {
                  "assignments": [
                    1602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1602,
                      "mutability": "mutable",
                      "name": "claimValid",
                      "nameLocation": "20573:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "20568:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1601,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20568:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1604,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20586:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20568:23:20"
                },
                {
                  "assignments": [
                    1606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1606,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "21029:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "21021:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1605,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21021:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1609,
                  "initialValue": {
                    "expression": {
                      "id": 1607,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1560,
                      "src": "21038:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "filler",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 471,
                    "src": "21038:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21021:31:20"
                },
                {
                  "assignments": [
                    1611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1611,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "21070:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "21062:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1610,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "21062:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1614,
                  "initialValue": {
                    "expression": {
                      "id": 1612,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1560,
                      "src": "21079:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fillId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 473,
                    "src": "21079:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21062:31:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1615,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1606,
                      "src": "21108:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21126:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "21118:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1616,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21118:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21118:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21108:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "expression": {
                          "id": 1632,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1560,
                          "src": "21259:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 477,
                        "src": "21259:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1635,
                      "indexExpression": {
                        "id": 1634,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "21282:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21259:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1641,
                          "name": "withdrawClaimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1567,
                          "src": "21383:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21402:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "21383:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1676,
                        "nodeType": "Block",
                        "src": "21611:246:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1662,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "21689:5:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "21689:15:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1664,
                                      "name": "claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1553,
                                      "src": "21708:5:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                        "typeString": "struct RequestManager.Claim storage pointer"
                                      }
                                    },
                                    "id": 1665,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "termination",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 496,
                                    "src": "21708:17:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "21689:36:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "436c61696d20706572696f64206e6f742066696e6973686564",
                                  "id": 1667,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21743:27:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                    "typeString": "literal_string \"Claim period not finished\""
                                  },
                                  "value": "Claim period not finished"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                    "typeString": "literal_string \"Claim period not finished\""
                                  }
                                ],
                                "id": 1661,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "21664:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21664:120:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1669,
                            "nodeType": "ExpressionStatement",
                            "src": "21664:120:20"
                          },
                          {
                            "expression": {
                              "id": 1674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1670,
                                "name": "claimValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1602,
                                "src": "21798:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1671,
                                  "name": "claimerStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1577,
                                  "src": "21811:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 1672,
                                  "name": "challengerStakeTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1582,
                                  "src": "21826:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21811:35:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "21798:48:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1675,
                            "nodeType": "ExpressionStatement",
                            "src": "21798:48:20"
                          }
                        ]
                      },
                      "id": 1677,
                      "nodeType": "IfStatement",
                      "src": "21379:478:20",
                      "trueBody": {
                        "id": 1660,
                        "nodeType": "Block",
                        "src": "21405:200:20",
                        "statements": [
                          {
                            "expression": {
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1644,
                                "name": "claimValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1602,
                                "src": "21458:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1645,
                                    "name": "claimer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1572,
                                    "src": "21487:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1646,
                                        "name": "claims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 623,
                                        "src": "21498:6:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                                          "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                                        }
                                      },
                                      "id": 1648,
                                      "indexExpression": {
                                        "id": 1647,
                                        "name": "withdrawClaimId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1567,
                                        "src": "21505:15:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "21498:23:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$499_storage",
                                        "typeString": "struct RequestManager.Claim storage ref"
                                      }
                                    },
                                    "id": 1649,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "claimer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 482,
                                    "src": "21498:31:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "21487:42:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 1656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1651,
                                    "name": "claimFillId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1587,
                                    "src": "21549:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1652,
                                        "name": "claims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 623,
                                        "src": "21564:6:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                                          "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                                        }
                                      },
                                      "id": 1654,
                                      "indexExpression": {
                                        "id": 1653,
                                        "name": "withdrawClaimId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1567,
                                        "src": "21571:15:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "21564:23:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$499_storage",
                                        "typeString": "struct RequestManager.Claim storage ref"
                                      }
                                    },
                                    "id": 1655,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fillId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 498,
                                    "src": "21564:30:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "src": "21549:45:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "21487:107:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "21458:136:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1659,
                            "nodeType": "ExpressionStatement",
                            "src": "21458:136:20"
                          }
                        ]
                      }
                    },
                    "id": 1678,
                    "nodeType": "IfStatement",
                    "src": "21255:602:20",
                    "trueBody": {
                      "id": 1640,
                      "nodeType": "Block",
                      "src": "21291:82:20",
                      "statements": [
                        {
                          "expression": {
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1636,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1602,
                              "src": "21344:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 1637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21357:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "21344:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1639,
                          "nodeType": "ExpressionStatement",
                          "src": "21344:18:20"
                        }
                      ]
                    }
                  },
                  "id": 1679,
                  "nodeType": "IfStatement",
                  "src": "21104:753:20",
                  "trueBody": {
                    "id": 1631,
                    "nodeType": "Block",
                    "src": "21130:119:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1621,
                            "name": "claimValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1602,
                            "src": "21183:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1622,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1606,
                                "src": "21196:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1623,
                                "name": "claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1572,
                                "src": "21206:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "21196:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1625,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1611,
                                "src": "21217:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1626,
                                "name": "claimFillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1587,
                                "src": "21227:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "21217:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "21196:42:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21183:55:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1630,
                        "nodeType": "ExpressionStatement",
                        "src": "21183:55:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1681
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1681,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "21929:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "21921:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1680,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21921:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1682,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21921:21:20"
                },
                {
                  "assignments": [
                    1684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "claimReceiver",
                      "nameLocation": "21960:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1767,
                      "src": "21952:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1683,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21952:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1685,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21952:21:20"
                },
                {
                  "condition": {
                    "id": 1686,
                    "name": "claimValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1602,
                    "src": "21988:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1698,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1582,
                        "src": "22186:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22209:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "22186:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1733,
                      "nodeType": "Block",
                      "src": "22486:269:20",
                      "statements": [
                        {
                          "expression": {
                            "id": 1726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1724,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1681,
                              "src": "22679:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1725,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "22695:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22679:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1727,
                          "nodeType": "ExpressionStatement",
                          "src": "22679:28:20"
                        },
                        {
                          "expression": {
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1728,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "22721:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1729,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2920,
                                "src": "22737:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22737:7:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "22721:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1732,
                          "nodeType": "ExpressionStatement",
                          "src": "22721:23:20"
                        }
                      ]
                    },
                    "id": 1734,
                    "nodeType": "IfStatement",
                    "src": "22182:573:20",
                    "trueBody": {
                      "id": 1723,
                      "nodeType": "Block",
                      "src": "22212:268:20",
                      "statements": [
                        {
                          "expression": {
                            "id": 1709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1701,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1681,
                              "src": "22295:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22311:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1703,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1553,
                                    "src": "22315:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1704,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challengersStakes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 488,
                                  "src": "22315:23:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1707,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1705,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "22339:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "22339:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22315:35:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22311:39:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22295:55:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1710,
                          "nodeType": "ExpressionStatement",
                          "src": "22295:55:20"
                        },
                        {
                          "expression": {
                            "id": 1714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1711,
                              "name": "claimReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "22364:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 1712,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "22380:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "22380:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "22364:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1715,
                          "nodeType": "ExpressionStatement",
                          "src": "22364:26:20"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1717,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1681,
                                  "src": "22413:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22429:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22413:17:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4368616c6c656e67657220686173206e6f7468696e6720746f207769746864726177",
                                "id": 1720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22432:36:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                },
                                "value": "Challenger has nothing to withdraw"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                }
                              ],
                              "id": 1716,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "22405:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22405:64:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1722,
                          "nodeType": "ExpressionStatement",
                          "src": "22405:64:20"
                        }
                      ]
                    }
                  },
                  "id": 1735,
                  "nodeType": "IfStatement",
                  "src": "21984:771:20",
                  "trueBody": {
                    "id": 1697,
                    "nodeType": "Block",
                    "src": "22000:176:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1687,
                            "name": "ethToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "22077:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1688,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "22093:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1689,
                              "name": "challengerStakeTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "22108:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22093:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22077:51:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1692,
                        "nodeType": "ExpressionStatement",
                        "src": "22077:51:20"
                      },
                      {
                        "expression": {
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1693,
                            "name": "claimReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "22142:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1694,
                            "name": "claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1572,
                            "src": "22158:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22142:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1696,
                        "nodeType": "ExpressionStatement",
                        "src": "22142:23:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1736,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "23046:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "23046:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1738,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "23060:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1739,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 490,
                      "src": "23060:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23046:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1762,
                  "nodeType": "IfStatement",
                  "src": "23042:285:20",
                  "trueBody": {
                    "id": 1761,
                    "nodeType": "Block",
                    "src": "23082:245:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1741,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1577,
                            "src": "23100:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1742,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1582,
                            "src": "23115:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23100:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1759,
                          "nodeType": "Block",
                          "src": "23230:87:20",
                          "statements": [
                            {
                              "expression": {
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1752,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1681,
                                  "src": "23248:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1755,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1753,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1582,
                                        "src": "23266:20:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1754,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1577,
                                        "src": "23289:12:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "23266:35:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1756,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "23265:37:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23248:54:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1758,
                              "nodeType": "ExpressionStatement",
                              "src": "23248:54:20"
                            }
                          ]
                        },
                        "id": 1760,
                        "nodeType": "IfStatement",
                        "src": "23096:221:20",
                        "trueBody": {
                          "id": 1751,
                          "nodeType": "Block",
                          "src": "23137:87:20",
                          "statements": [
                            {
                              "expression": {
                                "id": 1749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1744,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1681,
                                  "src": "23155:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1747,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1745,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1577,
                                        "src": "23173:12:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1746,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1582,
                                        "src": "23188:20:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "23173:35:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1748,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "23172:37:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23155:54:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1750,
                              "nodeType": "ExpressionStatement",
                              "src": "23155:54:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1763,
                        "name": "claimReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "23345:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1764,
                        "name": "ethToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "23360:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1765,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "23344:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 1550,
                  "id": 1766,
                  "nodeType": "Return",
                  "src": "23337:37:20"
                }
              ]
            },
            "id": 1768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveClaim",
            "nameLocation": "19952:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "19972:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "19965:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "19965:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19964:16:20"
            },
            "returnParameters": {
              "id": 1550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20027:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20027:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20036:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20036:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20026:18:20"
            },
            "scope": 2101,
            "src": "19943:3438:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "23461:421:20",
              "statements": [
                {
                  "assignments": [
                    1778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1778,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "23485:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1827,
                      "src": "23471:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1777,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1776,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 499,
                          "src": "23471:5:20"
                        },
                        "referencedDeclaration": 499,
                        "src": "23471:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1782,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1779,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "23493:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$499_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1781,
                    "indexExpression": {
                      "id": 1780,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "23500:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23493:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$499_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23471:37:20"
                },
                {
                  "assignments": [
                    1784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1784,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "23526:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1827,
                      "src": "23518:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23518:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1787,
                  "initialValue": {
                    "expression": {
                      "id": 1785,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1778,
                      "src": "23536:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 482,
                    "src": "23536:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23518:31:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1789,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "23581:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$499_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1790,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 480,
                        "src": "23581:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1791,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "23598:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1788,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "23564:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23564:42:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1793,
                  "nodeType": "EmitStatement",
                  "src": "23559:47:20"
                },
                {
                  "expression": {
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1794,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "23617:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1796,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "23617:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1797,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "23643:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "23617:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "23617:33:20"
                },
                {
                  "expression": {
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1800,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "23661:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1803,
                      "indexExpression": {
                        "expression": {
                          "id": 1801,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1771,
                          "src": "23683:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "23683:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23661:49:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1804,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "23714:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1805,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "23714:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "23661:85:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "23661:85:20"
                },
                {
                  "assignments": [
                    1810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1810,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "23764:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1827,
                      "src": "23757:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3070",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1809,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1808,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3070,
                          "src": "23757:6:20"
                        },
                        "referencedDeclaration": 3070,
                        "src": "23757:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1815,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1812,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1771,
                          "src": "23779:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "23779:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1811,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3070,
                      "src": "23772:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3070_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23772:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3070",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23757:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1819,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "23835:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1820,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "23844:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 459,
                          "src": "23844:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1822,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "23861:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lpFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 463,
                          "src": "23861:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "23844:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1816,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "23816:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3102,
                      "src": "23816:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3070_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3070_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23816:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1826,
                  "nodeType": "ExpressionStatement",
                  "src": "23816:59:20"
                }
              ]
            },
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDeposit",
            "nameLocation": "23396:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "23428:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "23412:23:20",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                    "typeString": "struct RequestManager.Request"
                  },
                  "typeName": {
                    "id": 1770,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1769,
                      "name": "Request",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 478,
                      "src": "23412:7:20"
                    },
                    "referencedDeclaration": 478,
                    "src": "23412:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                      "typeString": "struct RequestManager.Request"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "23444:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "23437:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "23437:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23411:41:20"
            },
            "returnParameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23461:0:20"
            },
            "scope": 2101,
            "src": "23387:495:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1846,
              "nodeType": "Block",
              "src": "24516:64:20",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1839,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "24533:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                            "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                          }
                        },
                        "id": 1841,
                        "indexExpression": {
                          "id": 1840,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "24542:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24533:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage",
                          "typeString": "struct RequestManager.Request storage ref"
                        }
                      },
                      "id": 1842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "24533:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24572:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24533:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1838,
                  "id": 1845,
                  "nodeType": "Return",
                  "src": "24526:47:20"
                }
              ]
            },
            "documentation": {
              "id": 1829,
              "nodeType": "StructuredDocumentation",
              "src": "23888:494:20",
              "text": "Returns whether a request's deposit was withdrawn or not\n This can be true in two cases:\n 1. The deposit was withdrawn after the request was claimed and filled.\n 2. The submitter withdrew the deposit after the request's expiry.\n .. seealso:: :sol:func:`withdraw`\n .. seealso:: :sol:func:`withdrawExpiredRequest`\n @param requestId The request ID\n @return Whether the deposit corresponding to the given request ID was withdrawn"
            },
            "functionSelector": "0e3a918c",
            "id": 1847,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1834,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1831,
                    "src": "24478:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1835,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1833,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 717,
                  "src": "24463:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "24463:25:20"
              }
            ],
            "name": "isWithdrawn",
            "nameLocation": "24396:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "24416:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "24408:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24408:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24407:19:20"
            },
            "returnParameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "24506:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1836,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24506:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24505:6:20"
            },
            "scope": 2101,
            "src": "24387:193:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1890,
              "nodeType": "Block",
              "src": "25033:264:20",
              "statements": [
                {
                  "assignments": [
                    1858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1858,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "25051:6:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1890,
                      "src": "25043:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25043:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1862,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1859,
                      "name": "collectedProtocolFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "25060:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1861,
                    "indexExpression": {
                      "id": 1860,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1850,
                      "src": "25082:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25060:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25043:52:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1864,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1858,
                          "src": "25113:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25122:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25113:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f746f636f6c20666565206973207a65726f",
                        "id": 1867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25125:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        },
                        "value": "Protocol fee is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        }
                      ],
                      "id": 1863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25105:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25105:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1869,
                  "nodeType": "ExpressionStatement",
                  "src": "25105:43:20"
                },
                {
                  "expression": {
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1870,
                        "name": "collectedProtocolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "25158:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1872,
                      "indexExpression": {
                        "id": 1871,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "25180:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25158:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25196:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25158:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1875,
                  "nodeType": "ExpressionStatement",
                  "src": "25158:39:20"
                },
                {
                  "assignments": [
                    1878
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1878,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "25215:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 1890,
                      "src": "25208:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3070",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1877,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1876,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3070,
                          "src": "25208:6:20"
                        },
                        "referencedDeclaration": 3070,
                        "src": "25208:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1880,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "25230:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1879,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3070,
                      "src": "25223:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3070_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25223:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3070",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25208:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1886,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1852,
                        "src": "25272:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1887,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "25283:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1883,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1878,
                        "src": "25253:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3070",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3102,
                      "src": "25253:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3070_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3070_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25253:37:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1889,
                  "nodeType": "ExpressionStatement",
                  "src": "25253:37:20"
                }
              ]
            },
            "documentation": {
              "id": 1848,
              "nodeType": "StructuredDocumentation",
              "src": "24586:332:20",
              "text": "Withdraw protocol fees collected by the contract.\n Protocol fees are paid in token transferred.\n .. note:: This function can only be called by the contract owner.\n @param tokenAddress The address of the token contract.\n @param recipient The address the fees should be sent to."
            },
            "functionSelector": "cf7b287f",
            "id": 1891,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1855,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1854,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "25019:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "25019:9:20"
              }
            ],
            "name": "withdrawProtocolFees",
            "nameLocation": "24932:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "24961:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1891,
                  "src": "24953:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24953:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "24983:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1891,
                  "src": "24975:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24975:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24952:41:20"
            },
            "returnParameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25033:0:20"
            },
            "scope": 2101,
            "src": "24923:374:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1915,
              "nodeType": "Block",
              "src": "25754:115:20",
              "statements": [
                {
                  "expression": {
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1903,
                      "name": "protocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "25764:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1904,
                      "name": "newProtocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1894,
                      "src": "25781:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25764:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "25764:34:20"
                },
                {
                  "expression": {
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1907,
                      "name": "lpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "25808:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1908,
                      "name": "newLpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1896,
                      "src": "25819:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25808:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "25808:22:20"
                },
                {
                  "expression": {
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1911,
                      "name": "minLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "25840:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1912,
                      "name": "newMinLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1898,
                      "src": "25851:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25840:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1914,
                  "nodeType": "ExpressionStatement",
                  "src": "25840:22:20"
                }
              ]
            },
            "documentation": {
              "id": 1892,
              "nodeType": "StructuredDocumentation",
              "src": "25303:305:20",
              "text": "Update fee parameters.\n .. note:: This function can only be called by the contract owner.\n @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n @param newLpFeePPM The new value for ``lpFeePPM``.\n @param newMinLpFee The new value for ``minLpFee``."
            },
            "functionSelector": "78da194b",
            "id": 1916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1900,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "25744:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "25744:9:20"
              }
            ],
            "name": "updateFeeData",
            "nameLocation": "25622:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "newProtocolFeePPM",
                  "nameLocation": "25653:17:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "25645:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25645:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "newLpFeePPM",
                  "nameLocation": "25688:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "25680:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25680:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1898,
                  "mutability": "mutable",
                  "name": "newMinLpFee",
                  "nameLocation": "25717:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "25709:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25709:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25635:99:20"
            },
            "returnParameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25754:0:20"
            },
            "scope": 2101,
            "src": "25613:256:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "26150:49:20",
              "statements": [
                {
                  "expression": {
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1924,
                      "name": "transferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "26160:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1925,
                      "name": "newTransferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "26176:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26160:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "26160:32:20"
                }
              ]
            },
            "documentation": {
              "id": 1917,
              "nodeType": "StructuredDocumentation",
              "src": "25875:196:20",
              "text": "Update the transfer amount limit.\n .. note:: This function can only be called by the contract owner.\n @param newTransferLimit The new value for ``transferLimit``."
            },
            "functionSelector": "d762a37b",
            "id": 1929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1922,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1921,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "26140:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "26140:9:20"
              }
            ],
            "name": "updateTransferLimit",
            "nameLocation": "26085:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "newTransferLimit",
                  "nameLocation": "26113:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "26105:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26105:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26104:26:20"
            },
            "returnParameters": {
              "id": 1923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26150:0:20"
            },
            "scope": 2101,
            "src": "26076:123:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "26576:211:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1940,
                          "name": "finalityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1934,
                          "src": "26594:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26611:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26594:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696e616c69747920706572696f64206d7573742062652067726561746572207468616e2030",
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26614:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        },
                        "value": "Finality period must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        }
                      ],
                      "id": 1939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26586:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26586:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "26586:69:20"
                },
                {
                  "expression": {
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1946,
                        "name": "finalityPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "26665:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1948,
                      "indexExpression": {
                        "id": 1947,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "26681:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26665:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1949,
                      "name": "finalityPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "26698:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26665:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "26665:47:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1953,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "26750:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1954,
                        "name": "finalityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "26765:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1952,
                      "name": "FinalityPeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "26728:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26728:52:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1956,
                  "nodeType": "EmitStatement",
                  "src": "26723:57:20"
                }
              ]
            },
            "documentation": {
              "id": 1930,
              "nodeType": "StructuredDocumentation",
              "src": "26205:253:20",
              "text": "Set the finality period for the given target chain.\n .. note:: This function can only be called by the contract owner.\n @param targetChainId The target chain ID.\n @param finalityPeriod Finality period in seconds."
            },
            "functionSelector": "d137920b",
            "id": 1958,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1937,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1936,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "26562:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "26562:9:20"
              }
            ],
            "name": "setFinalityPeriod",
            "nameLocation": "26472:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "26498:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "26490:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26490:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "26521:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "26513:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26513:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26489:47:20"
            },
            "returnParameters": {
              "id": 1938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26576:0:20"
            },
            "scope": 2101,
            "src": "26463:324:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1975,
              "nodeType": "Block",
              "src": "27492:66:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1968,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "27509:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                            "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                          }
                        },
                        "id": 1970,
                        "indexExpression": {
                          "id": 1969,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "27518:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "27509:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage",
                          "typeString": "struct RequestManager.Request storage ref"
                        }
                      },
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidFillIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "27509:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 1973,
                    "indexExpression": {
                      "id": 1972,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1963,
                      "src": "27544:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27509:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1967,
                  "id": 1974,
                  "nodeType": "Return",
                  "src": "27502:49:20"
                }
              ]
            },
            "documentation": {
              "id": 1959,
              "nodeType": "StructuredDocumentation",
              "src": "26793:581:20",
              "text": "Returns whether a fill is invalidated or not\n Calling invalidateFill() will set this boolean to true,\n marking that the ``fillId`` for the corresponding ``requestId`` was\n invalidated.\n Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId]\n to false.\n .. seealso:: :sol:func:`invalidateFill`\n .. seealso:: :sol:func:`resolveRequest`\n @param requestId The request ID\n @param fillId The fill ID\n @return Whether the fill ID is invalid for the given request ID"
            },
            "functionSelector": "30a08cbc",
            "id": 1976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInvalidFill",
            "nameLocation": "27388:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "27410:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1976,
                  "src": "27402:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27402:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "27429:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1976,
                  "src": "27421:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27421:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27401:35:20"
            },
            "returnParameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1976,
                  "src": "27482:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27482:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27481:6:20"
            },
            "scope": 2101,
            "src": "27379:179:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2024,
              "nodeType": "Block",
              "src": "28153:235:20",
              "statements": [
                {
                  "assignments": [
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "28179:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2024,
                      "src": "28163:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1992,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1991,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "28163:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "28163:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1997,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1994,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "28189:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1996,
                    "indexExpression": {
                      "id": 1995,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1979,
                      "src": "28198:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28189:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28163:45:20"
                },
                {
                  "expression": {
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1998,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "28218:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "28218:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2001,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "28235:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28218:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2003,
                  "nodeType": "ExpressionStatement",
                  "src": "28218:23:20"
                },
                {
                  "expression": {
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2004,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "28251:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 2006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 473,
                      "src": "28251:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2007,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "28268:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "28251:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2009,
                  "nodeType": "ExpressionStatement",
                  "src": "28251:23:20"
                },
                {
                  "expression": {
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 2010,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1993,
                          "src": "28285:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 477,
                        "src": "28285:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2014,
                      "indexExpression": {
                        "id": 2012,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1981,
                        "src": "28308:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28285:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28318:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "28285:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2017,
                  "nodeType": "ExpressionStatement",
                  "src": "28285:38:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2019,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "28355:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2020,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "28366:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2021,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1981,
                        "src": "28374:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2018,
                      "name": "RequestResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "28339:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32)"
                      }
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28339:42:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2023,
                  "nodeType": "EmitStatement",
                  "src": "28334:47:20"
                }
              ]
            },
            "documentation": {
              "id": 1977,
              "nodeType": "StructuredDocumentation",
              "src": "27564:405:20",
              "text": "Mark the request identified by ``requestId`` as filled by ``filler``.\n .. note::\n     This function is a restricted call function. Only callable by the added caller.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID.\n @param filler The address that filled the request."
            },
            "functionSelector": "5b3a6ef2",
            "id": 2025,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1988,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1983,
                    "src": "28134:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1989,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1987,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2423,
                  "src": "28123:10:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "28123:29:20"
              }
            ],
            "name": "resolveRequest",
            "nameLocation": "27983:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "28015:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "28007:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28007:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1981,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "28042:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "28034:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1980,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28034:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "28066:17:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "28058:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28058:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "28101:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "28093:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28093:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27997:116:20"
            },
            "returnParameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28153:0:20"
            },
            "scope": 2101,
            "src": "27974:414:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2079,
              "nodeType": "Block",
              "src": "28899:405:20",
              "statements": [
                {
                  "assignments": [
                    2040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2040,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "28925:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2079,
                      "src": "28909:23:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 2039,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2038,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 478,
                          "src": "28909:7:20"
                        },
                        "referencedDeclaration": 478,
                        "src": "28909:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2044,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2041,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "28935:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$478_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 2043,
                    "indexExpression": {
                      "id": 2042,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2028,
                      "src": "28944:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28935:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$478_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28909:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2046,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2040,
                            "src": "28985:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 471,
                          "src": "28985:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29011:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "29003:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "29003:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29003:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "28985:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c73",
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29027:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c76b1b933590b1d78f647fc6d1d56cd7bfc7e7706ad90fdd0c3a26eadf9d14ae",
                          "typeString": "literal_string \"Cannot invalidate resolved fills\""
                        },
                        "value": "Cannot invalidate resolved fills"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c76b1b933590b1d78f647fc6d1d56cd7bfc7e7706ad90fdd0c3a26eadf9d14ae",
                          "typeString": "literal_string \"Cannot invalidate resolved fills\""
                        }
                      ],
                      "id": 2045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28964:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28964:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "28964:107:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2057,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "29102:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 2058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "invalidFillIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 477,
                            "src": "29102:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 2060,
                          "indexExpression": {
                            "id": 2059,
                            "name": "fillId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "29125:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29102:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29136:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "29102:39:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20616c726561647920696e76616c696461746564",
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29155:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        },
                        "value": "Fill already invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        }
                      ],
                      "id": 2056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29081:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29081:110:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "29081:110:20"
                },
                {
                  "expression": {
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 2066,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2040,
                          "src": "29202:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$478_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 477,
                        "src": "29202:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2070,
                      "indexExpression": {
                        "id": 2068,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "29225:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29202:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29235:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "29202:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2073,
                  "nodeType": "ExpressionStatement",
                  "src": "29202:37:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2075,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "29279:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2076,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "29290:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2074,
                      "name": "FillInvalidatedResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "29255:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29255:42:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2078,
                  "nodeType": "EmitStatement",
                  "src": "29250:47:20"
                }
              ]
            },
            "documentation": {
              "id": 2026,
              "nodeType": "StructuredDocumentation",
              "src": "28394:345:20",
              "text": "Mark the fill identified by ``requestId`` and ``fillId`` as invalid.\n .. note::\n     This function is a restricted call function. Only callable by the added caller.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID."
            },
            "functionSelector": "03fc4c37",
            "id": 2080,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2035,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2032,
                    "src": "28880:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2034,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2423,
                  "src": "28869:10:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "28869:29:20"
              }
            ],
            "name": "invalidateFill",
            "nameLocation": "28753:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "28785:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "28777:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28777:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2030,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "28812:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "28804:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2029,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28804:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "28836:17:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "28828:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28828:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28767:92:20"
            },
            "returnParameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28899:0:20"
            },
            "scope": 2101,
            "src": "28744:560:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "29718:25:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2086,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4051,
                      "src": "29728:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29728:8:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "29728:8:20"
                }
              ]
            },
            "documentation": {
              "id": 2081,
              "nodeType": "StructuredDocumentation",
              "src": "29310:367:20",
              "text": "Pauses the contract.\n Once the contract is paused, it cannot be used to create new\n requests anymore. Withdrawing deposited funds and claim stakes\n still works, though.\n .. note:: This function can only be called when the contract is not paused.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "8456cb59",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2084,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2083,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "29708:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "29708:9:20"
              }
            ],
            "name": "pause",
            "nameLocation": "29691:5:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29696:2:20"
            },
            "returnParameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29718:0:20"
            },
            "scope": 2101,
            "src": "29682:61:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2099,
              "nodeType": "Block",
              "src": "30052:27:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2096,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4067,
                      "src": "30062:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30062:10:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2098,
                  "nodeType": "ExpressionStatement",
                  "src": "30062:10:20"
                }
              ]
            },
            "documentation": {
              "id": 2091,
              "nodeType": "StructuredDocumentation",
              "src": "29749:260:20",
              "text": "Unpauses the contract.\n Once the contract is unpaused, it can be used normally.\n .. note:: This function can only be called when the contract is paused.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "3f4ba83a",
            "id": 2100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2094,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2093,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "30042:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "30042:9:20"
              }
            ],
            "name": "unpause",
            "nameLocation": "30023:7:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30030:2:20"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30052:0:20"
            },
            "scope": 2101,
            "src": "30014:65:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2102,
        "src": "1141:28940:20",
        "usedErrors": []
      }
    ],
    "src": "32:30050:20"
  },
  "bytecode": "610100604052674563918244f400006007556103e8600855600060095569021e19e0c9bab2400000600a553480156200003757600080fd5b5060405162003411380380620034118339810160408190526200005a91620000d7565b620000653362000087565b6003805460ff1916905560809390935260a09190915260c05260e0526200010e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060808587031215620000ee57600080fd5b505082516020840151604085015160609095015191969095509092509050565b60805160a05160c05160e0516132a66200016b600039600081816103310152611bdf01526000818161063301526116cd01526000818161066701526114bd01526000818161096f015281816115990152611d4b01526132a66000f3fe6080604052600436106102675760003560e01c80637dc2cd9811610144578063cf7b287f116100b6578063e7aad5c41161007a578063e7aad5c41461092c578063ea62889814610942578063eb3211731461095d578063f2fde38b14610991578063f7d64cec146109b1578063f9432517146109d157600080fd5b8063cf7b287f14610896578063d137920b146108b6578063d762a37b146108d6578063dee4dea0146108f6578063e2653eeb1461091657600080fd5b80639d866985116101085780639d866985146106d35780639e375226146107ee578063a032b5f41461081e578063adb610a31461083e578063b4d1d27a14610863578063cea74edf1461087657600080fd5b80637dc2cd981461062157806383d208c3146106555780638456cb59146106895780638da5cb5b1461069e57806396171d05146106bc57600080fd5b80633f4ba83a116101dd578063715018a6116101a1578063715018a6146105615780637203ae3b14610576578063743c151a14610596578063747293fb146105c157806378da194b146105e1578063796505591461060157600080fd5b80633f4ba83a146104d15780635b3a6ef2146104e65780635c975abb146105065780635d5aa11b1461051e5780636bc6c8d11461053457600080fd5b80632f4212b81161022f5780632f4212b8146103535780632f92f0091461037357806330a08cbc146103a057806331e08f7a146103df5780633993b6ed146103ff5780633b046f091461041f57600080fd5b806303fc4c371461026c5780630e19a1c61461028e5780630e3a918c146102cb5780631489f8d2146102fb5780631d18adc51461031f575b600080fd5b34801561027857600080fd5b5061028c610287366004612e03565b6109e7565b005b34801561029a57600080fd5b506102ae6102a9366004612e2f565b610c38565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102d757600080fd5b506102eb6102e6366004612e51565b610c66565b60405190151581526020016102c2565b34801561030757600080fd5b5061031161070881565b6040519081526020016102c2565b34801561032b57600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561035f57600080fd5b5061031161036e366004612e86565b610cbf565b34801561037f57600080fd5b5061031161038e366004612e51565b60046020526000908152604090205481565b3480156103ac57600080fd5b506102eb6103bb366004612e2f565b60009182526005602090815260408084209284526007909201905290205460ff1690565b3480156103eb57600080fd5b5061028c6103fa366004612ee5565b61116c565b34801561040b57600080fd5b5061028c61041a366004612ee5565b6111d0565b34801561042b57600080fd5b5061048b61043a366004612f00565b60066020819052600091825260409091208054600182015460028301546004840154600585015495850154600786015460089096015494966001600160a01b03948516969395929094169392909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e0820152610100016102c2565b3480156104dd57600080fd5b5061028c611229565b3480156104f257600080fd5b5061028c610501366004612f29565b61123b565b34801561051257600080fd5b5060035460ff166102eb565b34801561052a57600080fd5b5061031160075481565b34801561054057600080fd5b5061031161054f366004612ee5565b600b6020526000908152604090205481565b34801561056d57600080fd5b5061028c6113ec565b34801561058257600080fd5b5061028c610591366004612f68565b6113fe565b6105a96105a4366004612e2f565b611416565b6040516001600160601b0390911681526020016102c2565b3480156105cd57600080fd5b5061028c6105dc366004612ee5565b6117bb565b3480156105ed57600080fd5b5061028c6105fc366004612e03565b6117d2565b34801561060d57600080fd5b5061028c61061c366004612e51565b6117e8565b34801561062d57600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561066157600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561069557600080fd5b5061028c611a00565b3480156106aa57600080fd5b506000546001600160a01b03166102ae565b3480156106c857600080fd5b506103116202a30081565b3480156106df57600080fd5b506107786106ee366004612e51565b600560208190526000918252604090912080546001820154600283015460038401546004850154958501546006909501546001600160a01b0394851696938516959294919363ffffffff808216946001600160601b036401000000008404811695600160801b8504821695600160e01b9095049093169390821692600160601b909204909116908b565b604080516001600160a01b039c8d1681529a8c1660208c01528a0198909852606089019690965263ffffffff94851660808901526001600160601b0393841660a089015291831660c088015290921660e086015216610100840152909216610120820152610140810191909152610160016102c2565b3480156107fa57600080fd5b506102eb610809366004612ee5565b60016020526000908152604090205460ff1681565b34801561082a57600080fd5b50610311610839366004612e51565b611a10565b34801561084a57600080fd5b506003546105a99061010090046001600160601b031681565b61028c610871366004612f00565b611a34565b34801561088257600080fd5b50610311610891366004612e51565b611ecb565b3480156108a257600080fd5b5061028c6108b1366004612fa4565b611ee9565b3480156108c257600080fd5b5061028c6108d1366004612e2f565b611f74565b3480156108e257600080fd5b5061028c6108f1366004612e51565b61202a565b34801561090257600080fd5b506102ae610911366004612f00565b612037565b34801561092257600080fd5b5061031160085481565b34801561093857600080fd5b5061031160095481565b34801561094e57600080fd5b506105a96001600160601b0381565b34801561096957600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561099d57600080fd5b5061028c6109ac366004612ee5565b612307565b3480156109bd57600080fd5b506103116109cc366004612e51565b61237d565b3480156109dd57600080fd5b50610311600a5481565b60008181526002602052604090205481906001600160a01b0316468203610a3e57336001600160a01b03821614610a395760405162461bcd60e51b8152600401610a3090612fd7565b60405180910390fd5b610b04565b6000828152600260205260409020600101546001600160a01b031680610a765760405162461bcd60e51b8152600401610a309061300c565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa158015610ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae6919061304e565b610b025760405162461bcd60e51b8152600401610a3090612fd7565b505b600085815260056020819052604090912090810154600160601b90046001600160a01b031615610b765760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c736044820152606401610a30565b600085815260078201602052604090205460ff1615610bd25760405162461bcd60e51b8152602060048201526018602482015277119a5b1b08185b1c9958591e481a5b9d985b1a59185d195960421b6044820152606401610a30565b600085815260078201602052604090819020805460ff19166001179055517f5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad04590610c289088908890918252602082015260400190565b60405180910390a1505050505050565b60026020528160005260406000208160028110610c5457600080fd5b01546001600160a01b03169150829050565b60008181526005602052604081205482906001600160a01b0316610c9c5760405162461bcd60e51b8152600401610a3090613070565b5050600090815260056020819052604090912001546001600160601b0316151590565b6000610cc96123a6565b6000878152600460205260408120549003610d265760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f7274656400000000006044820152606401610a30565b610708821015610d785760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f7274000000000000006044820152606401610a30565b6202a300821115610dcb5760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e6700000000000000006044820152606401610a30565b600a54831115610e1d5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d69740000006044820152606401610a30565b856000610e298561237d565b90506000610e3686611a10565b905080610e4383886130b3565b610e4d91906130b3565b604051636eb1769f60e11b81523360048201523060248201526001600160a01b0385169063dd62ed3e90604401602060405180830381865afa158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb91906130cb565b1015610f025760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610a30565b600354600090610f219061010090046001600160601b031660016130e4565b600380546001600160601b038316610100026cffffffffffffffffffffffff001990911617905560408051466020808301919091528183018f90526001600160601b031960608e811b8216818501528d901b166074830152608882018b90526001600160a01b031960a085901b1660a88301528251808303609401815260b490920190925280519101209091506000600560008381526020019081526020016000209050338160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508c8160020181905550888160030181905550874261103591906130b3565b8160040160006101000a81548163ffffffff021916908363ffffffff160217905550848160040160046101000a8154816001600160601b0302191690836001600160601b03160217905550838160040160106101000a8154816001600160601b0302191690836001600160601b03160217905550817f5cb181de12515eac47130902b874f42ca463496f8f42ad3b13431e7a223740fe8e8e8e8e8e898f426110dd91906130b3565b604080519788526001600160a01b0396871660208901529486168786015292909416606086015260808501526001600160601b0390921660a084015263ffffffff90911660c0830152519081900360e00190a261115c333086611140898e6130b3565b61114a91906130b3565b6001600160a01b038a169291906123ec565b509b9a5050505050505050505050565b611174612457565b6001600160a01b038116600081815260016020818152604092839020805460ff191690921790915590519182527f371fc559c30f70424413fed6bf7e57dc939651331abad5c970a8ea0921c80b2e91015b60405180910390a150565b6111d8612457565b6001600160a01b038116600081815260016020908152604091829020805460ff1916905590519182527f4e774c97f73f4bea034579e4224498d7d9b3a4109eaa70ed3d85c97a5855f19891016111c5565b611231612457565b6112396124b1565b565b60008281526002602052604090205482906001600160a01b031646820361128957336001600160a01b038216146112845760405162461bcd60e51b8152600401610a3090612fd7565b61134f565b6000828152600260205260409020600101546001600160a01b0316806112c15760405162461bcd60e51b8152600401610a309061300c565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa15801561130d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611331919061304e565b61134d5760405162461bcd60e51b8152600401610a3090612fd7565b505b600086815260056020818152604080842092830180546001600160601b0316600160601b6001600160a01b038a1690810291909117909155600684018a905589855260078401835293819020805460ff1916905580518a815291820193909352918201879052907fb32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b99567369060600160405180910390a150505050505050565b6113f4612457565b6112396000612503565b611406612457565b611411838383612553565b505050565b60008281526005602052604081205483906001600160a01b031661144c5760405162461bcd60e51b8152600401610a3090613070565b3360009081526001602052604090205460ff166114a45760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610a30565b600084815260056020526040902060048101546114e8907f00000000000000000000000000000000000000000000000000000000000000009063ffffffff166130b3565b42106115405760405162461bcd60e51b815260206004820152602160248201527f526571756573742063616e6e6f7420626520636c61696d656420616e796d6f726044820152606560f81b6064820152608401610a30565b60058101546001600160601b0316156115975760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b6044820152606401610a30565b7f000000000000000000000000000000000000000000000000000000000000000034146115fd5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b6044820152606401610a30565b836116435760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b6044820152606401610a30565b600181600401601c8282829054906101000a900463ffffffff16611667919061310f565b825463ffffffff91821661010093840a90810292021916179091556003546000925061169f916001600160601b0391041660016130e4565b600380546cffffffffffffffffffffffff0019166101006001600160601b03841602179055905060006116f27f0000000000000000000000000000000000000000000000000000000000000000426130b3565b9050600060066000846001600160601b03166001600160601b031681526020019081526020016000209050878160000181905550338160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550348160020181905550818160070181905550868160080181905550877f0763b6170df0264962938e705b5cbb0e18fd60107c02b64e3261fa233458ce7a843334600080888e6040516117a7979695949392919061312e565b60405180910390a250909695505050505050565b6117c3612457565b6117cf46826000612553565b50565b6117da612457565b600992909255600855600755565b60008181526005602052604090205481906001600160a01b031661181e5760405162461bcd60e51b8152600401610a3090613070565b6000828152600560208190526040909120908101546001600160601b0316156118855760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b6044820152606401610a30565b600481015463ffffffff164210156118df5760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f742065787069726564207965740000000000000000006044820152606401610a30565b6004810154600160e01b900463ffffffff16156119365760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b6044820152606401610a30565b6005810180546001600160601b0319166001600160601b031790558054604080518581526001600160a01b0390921660208301527fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a160018101548154600483015460038401546001600160a01b03938416936119fa9316916001600160601b03600160801b82048116926119df926401000000009004909116906130b3565b6119e991906130b3565b6001600160a01b0384169190612665565b50505050565b611a08612457565b611239612695565b6000620f424060095483611a249190613178565b611a2e9190613197565b92915050565b6001600160601b03811660009081526006602052604090206001015481906001600160a01b0316611a9b5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b6044820152606401610a30565b6001600160601b038216600090815260066020908152604080832080546007820154818652600590945291909320909190428211611b0b5760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b6044820152606401610a30565b6005810154600160601b90046001600160a01b031615611b6d5760405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c7265616479207265736f6c76656400000000000000006044820152606401610a30565b6008840154600090815260078201602052604090205460ff1615611bce5760405162461bcd60e51b8152602060048201526018602482015277119a5b1b08185b1c9958591e481a5b9d985b1a59185d195960421b6044820152606401610a30565b6001840154600285015460058601547f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b0316919080821115611cf85780600003611c3b576002850154600090815260046020526040902054611c3890856130b3565b93505b6001600160a01b0383163303611c935760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d0000000000006044820152606401610a30565b611c9d81836131b9565b611ca89060016130b3565b341015611cf35760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da081cdd185ad9481c1c9bdd9a591959603a1b6044820152606401610a30565b611dc9565b336001600160a01b03841614611d495760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b6044820152606401610a30565b7f0000000000000000000000000000000000000000000000000000000000000000611d7483836131b9565b611d7e91906130b3565b341015611dc95760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da081cdd185ad9481c1c9bdd9a591959603a1b6044820152606401610a30565b6001600160a01b0383163303611df157611de334836130b3565b600289018190559150611e42565b6004880180546001600160a01b03191633908117909155600090815260038901602052604081208054349290611e289084906130b3565b90915550611e38905034826130b3565b6005890181905590505b85611e4d85426130b3565b1115611e6757611e5d84426130b3565b6007890181905595505b6004880154600889015460405189927f0763b6170df0264962938e705b5cbb0e18fd60107c02b64e3261fa233458ce7a92611eb7928f92899289926001600160a01b039092169189918f9161312e565b60405180910390a250505050505050505050565b6000611ed682611a10565b611edf8361237d565b611a2e91906130b3565b611ef1612457565b6001600160a01b0382166000908152600b602052604090205480611f4e5760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b6044820152606401610a30565b6001600160a01b0383166000818152600b602052604081205583906119fa908484612665565b611f7c612457565b60008111611fdb5760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610a30565b60008281526004602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b612032612457565b600a55565b6001600160601b03811660009081526006602052604081206001015482906001600160a01b031661209e5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b6044820152606401610a30565b6001600160601b0383166000908152600660209081526040808320805480855260059093529083209092806120d2886126d2565b6001600160a01b0382166000908152600388016020526040902054919350915015612113576001600160a01b03821660009081526003860160205260408120555b6006850154600081900361216457600184600401601c8282829054906101000a900463ffffffff1661214591906131d0565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b61216e82826130b3565b600687018190556005870154600288015491925061218b916130b3565b8111156121da5760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c61726765000000006044820152606401610a30565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612227576040519150601f19603f3d011682016040523d82523d6000602084013e61222c565b606091505b50509050806122745760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610a30565b604080516001600160601b038c1681526001600160a01b038616602082015287917fc9e74e0700d0c6488af9c81d70fdd4158aea77687137ff85499509c41a10612b910160405180910390a260058501546001600160601b03161580156122ea575060018701546001600160a01b038581169116145b156122f9576122f9858b6129c8565b509198975050505050505050565b61230f612457565b6001600160a01b0381166123745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a30565b6117cf81612503565b6000611a2e600754620f4240600854856123979190613178565b6123a19190613197565b612ad3565b60035460ff16156112395760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a30565b6040516001600160a01b03808516602483015283166044820152606481018290526119fa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612aeb565b6000546001600160a01b031633146112395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a30565b6124b9612bbd565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166125b55760405162461bcd60e51b815260206004820152602360248201527f5265737472696374656443616c6c733a2063616c6c65722063616e6e6f74206260448201526206520360ec1b6064820152608401610a30565b6000838152600260205260409020546001600160a01b0316156126295760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b6064820152608401610a30565b6040805180820182526001600160a01b03808516825283166020808301919091526000868152600291829052929092206119fa92909190612d96565b6040516001600160a01b03831660248201526044810182905261141190849063a9059cbb60e01b90606401612420565b61269d6123a6565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124e63390565b6001600160601b03808216600090815260066020908152604080832080548452600592839052908320808301546001830154600284015494840154600885015496978897959694959316936001600160a01b039092169261273382846130b3565b8760060154106127855760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e0000000000000000006044820152606401610a30565b60058601546006870154600091600160601b90046001600160a01b03169081156127d057866001600160a01b0316826001600160a01b03161480156127c957508381145b92506128b1565b600081815260078a01602052604090205460ff16156127f257600092506128b1565b6001600160601b03881615612857576001600160601b0388166000908152600660205260409020600101546001600160a01b0388811691161480156127c957506001600160601b038816600090815260066020526040902060080154841492506128b1565b89600701544210156128ab5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e6973686564000000000000006044820152606401610a30565b84861192505b60008084156128ce576128c487896130b3565b9150889050612967565b86156129565733600090815260038d0160205260409020546128f1906002613178565b9150339050600082116129515760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b6064820152608401610a30565b612967565b505060005486906001600160a01b03165b60048c01546001600160a01b031633036129b5578688111561299e5761298d87896131b9565b61299790836130b3565b91506129b5565b6129a888886131b9565b6129b290836131b9565b91505b9e909d509b505050505050505050505050565b6001600160601b0381166000908152600660209081526040918290206001810154815484519081526001600160a01b0390911692810183905290927fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a16005840180546001600160601b0319166001600160601b0385811691909117909155600485015460018601546001600160a01b03166000908152600b602052604081208054600160801b9093049093169291612a8b9084906130b3565b90915550506001840154600485015460038601546001600160a01b0390921691612acc9184916119e99164010000000090046001600160601b0316906130b3565b5050505050565b6000818311612ae25781612ae4565b825b9392505050565b6000612b40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c069092919063ffffffff16565b8051909150156114115780806020019051810190612b5e919061304e565b6114115760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a30565b60035460ff166112395760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a30565b6060612c158484600085612c1d565b949350505050565b606082471015612c7e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a30565b600080866001600160a01b03168587604051612c9a9190613221565b60006040518083038185875af1925050503d8060008114612cd7576040519150601f19603f3d011682016040523d82523d6000602084013e612cdc565b606091505b5091509150612ced87838387612cf8565b979650505050505050565b60608315612d67578251600003612d60576001600160a01b0385163b612d605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a30565b5081612c15565b612c158383815115612d7c5781518083602001fd5b8060405162461bcd60e51b8152600401610a30919061323d565b8260028101928215612dde579160200282015b82811115612dde57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612da9565b50612dea929150612dee565b5090565b5b80821115612dea5760008155600101612def565b600080600060608486031215612e1857600080fd5b505081359360208301359350604090920135919050565b60008060408385031215612e4257600080fd5b50508035926020909101359150565b600060208284031215612e6357600080fd5b5035919050565b80356001600160a01b0381168114612e8157600080fd5b919050565b60008060008060008060c08789031215612e9f57600080fd5b86359550612eaf60208801612e6a565b9450612ebd60408801612e6a565b9350612ecb60608801612e6a565b92506080870135915060a087013590509295509295509295565b600060208284031215612ef757600080fd5b612ae482612e6a565b600060208284031215612f1257600080fd5b81356001600160601b0381168114612ae457600080fd5b60008060008060808587031215612f3f57600080fd5b843593506020850135925060408501359150612f5d60608601612e6a565b905092959194509250565b600080600060608486031215612f7d57600080fd5b83359250612f8d60208501612e6a565b9150612f9b60408501612e6a565b90509250925092565b60008060408385031215612fb757600080fd5b612fc083612e6a565b9150612fce60208401612e6a565b90509250929050565b6020808252818101527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f776564604082015260600190565b60208082526022908201527f5265737472696374656443616c6c733a206d657373656e676572206e6f742073604082015261195d60f21b606082015260800190565b60006020828403121561306057600080fd5b81518015158114612ae457600080fd5b6020808252601390820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156130c6576130c661309d565b500190565b6000602082840312156130dd57600080fd5b5051919050565b60006001600160601b038083168185168083038211156131065761310661309d565b01949350505050565b600063ffffffff8083168185168083038211156131065761310661309d565b6001600160601b039790971687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60008160001904831182151516156131925761319261309d565b500290565b6000826131b457634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156131cb576131cb61309d565b500390565b600063ffffffff838116908316818110156131ed576131ed61309d565b039392505050565b60005b838110156132105781810151838201526020016131f8565b838111156119fa5750506000910152565b600082516132338184602087016131f5565b9190910192915050565b602081526000825180602084015261325c8160408501602087016131f5565b601f01601f1916919091016040019291505056fea26469706673582212205090e7dd9640277a98a8006cf83a67b18add3846c77ef6241f86c7bd74cc102e64736f6c634300080d0033",
  "bytecodeSha1": "4394d77492c19eb3d7f7d55e4938881417e0bc51",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "RequestManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "191": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "190": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {
        "Pausable._requireNotPaused": {
          "192": [
            1836,
            1845,
            true
          ]
        }
      },
      "16": {},
      "18": {
        "RequestManager.claimRequest": {
          "188": [
            972,
            994,
            true
          ]
        }
      },
      "20": {
        "RequestManager.challengeClaim": {
          "155": [
            16131,
            16160,
            true
          ],
          "156": [
            16196,
            16224,
            true
          ],
          "157": [
            16284,
            16321,
            true
          ],
          "158": [
            16606,
            16641,
            false
          ],
          "159": [
            16661,
            16686,
            false
          ],
          "160": [
            16799,
            16820,
            true
          ],
          "161": [
            16890,
            16942,
            true
          ],
          "162": [
            17040,
            17061,
            true
          ],
          "163": [
            17127,
            17188,
            true
          ],
          "164": [
            17272,
            17293,
            false
          ],
          "165": [
            17642,
            17689,
            false
          ]
        },
        "RequestManager.claimRequest": {
          "149": [
            13648,
            13708,
            true
          ],
          "150": [
            13785,
            13813,
            true
          ],
          "151": [
            13861,
            13884,
            true
          ]
        },
        "RequestManager.createRequest": {
          "144": [
            10168,
            10203,
            true
          ],
          "145": [
            10287,
            10324,
            true
          ],
          "146": [
            10406,
            10443,
            true
          ],
          "147": [
            10511,
            10534,
            true
          ],
          "148": [
            10765,
            10877,
            true
          ]
        },
        "RequestManager.invalidateFill": {
          "142": [
            28985,
            29013,
            true
          ],
          "143": [
            29102,
            29141,
            true
          ]
        },
        "RequestManager.resolveClaim": {
          "174": [
            20449,
            20508,
            true
          ],
          "175": [
            21108,
            21128,
            false
          ],
          "176": [
            21259,
            21289,
            false
          ],
          "177": [
            21383,
            21403,
            false
          ],
          "178": [
            21689,
            21725,
            true
          ],
          "179": [
            21988,
            21998,
            false
          ],
          "180": [
            22186,
            22210,
            false
          ],
          "181": [
            22413,
            22430,
            true
          ],
          "182": [
            23046,
            23080,
            false
          ],
          "183": [
            23100,
            23135,
            false
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "167": [
            26594,
            26612,
            true
          ]
        },
        "RequestManager.withdraw": {
          "168": [
            18970,
            19012,
            false
          ],
          "169": [
            19261,
            19281,
            false
          ],
          "170": [
            19455,
            19521,
            true
          ],
          "171": [
            19664,
            19668,
            true
          ],
          "172": [
            19778,
            19806,
            false
          ],
          "173": [
            19810,
            19840,
            false
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "152": [
            12482,
            12510,
            true
          ],
          "153": [
            12571,
            12608,
            true
          ],
          "154": [
            12675,
            12700,
            true
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "166": [
            25113,
            25123,
            true
          ]
        }
      },
      "22": {
        "RequestManager.resolveRequest": {
          "193": [
            2129,
            2159,
            false
          ],
          "194": [
            2183,
            2203,
            true
          ],
          "195": [
            2485,
            2538,
            true
          ]
        },
        "RestrictedCalls._addCaller": {
          "196": [
            763,
            783,
            true
          ],
          "197": [
            854,
            893,
            true
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "198": [
            4275,
            4296,
            false
          ],
          "199": [
            4359,
            4389,
            true
          ]
        }
      },
      "7": {
        "Address._revert": {
          "187": [
            8775,
            8796,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "184": [
            5157,
            5187,
            true
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "185": [
            7674,
            7681,
            false
          ],
          "186": [
            7701,
            7723,
            false
          ]
        }
      },
      "8": {},
      "9": {
        "Math.max": {
          "189": [
            497,
            502,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "101": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "104": [
            2541,
            2558
          ],
          "105": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "2": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "34": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "95": [
            2161,
            2234
          ],
          "96": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "110": [
            2245,
            2259
          ],
          "111": [
            2269,
            2294
          ]
        },
        "Pausable._requireNotPaused": {
          "98": [
            1828,
            1866
          ]
        },
        "Pausable._requirePaused": {
          "133": [
            2003,
            2044
          ]
        },
        "Pausable._unpause": {
          "102": [
            2491,
            2506
          ],
          "103": [
            2516,
            2543
          ]
        },
        "Pausable.paused": {
          "1": [
            1678,
            1692
          ]
        }
      },
      "16": {
        "BeamerUtils.createRequestId": {
          "14": [
            340,
            642
          ]
        }
      },
      "18": {
        "LpWhitelist.addAllowedLp": {
          "25": [
            1320,
            1344
          ],
          "26": [
            1355,
            1374
          ]
        },
        "LpWhitelist.removeAllowedLp": {
          "27": [
            1670,
            1694
          ],
          "28": [
            1705,
            1726
          ]
        }
      },
      "20": {
        "RequestManager.challengeClaim": {
          "61": [
            16123,
            16178
          ],
          "62": [
            16188,
            16253
          ],
          "63": [
            16263,
            16371
          ],
          "64": [
            16706,
            16763
          ],
          "65": [
            16791,
            16851
          ],
          "66": [
            16865,
            17001
          ],
          "67": [
            17032,
            17088
          ],
          "68": [
            17102,
            17247
          ],
          "69": [
            17309,
            17334
          ],
          "70": [
            17348,
            17381
          ],
          "71": [
            17412,
            17445
          ],
          "72": [
            17459,
            17507
          ],
          "73": [
            17521,
            17554
          ],
          "74": [
            17568,
            17617
          ],
          "75": [
            17705,
            17752
          ],
          "76": [
            17766,
            17797
          ],
          "77": [
            17818,
            18052
          ]
        },
        "RequestManager.claimRequest": {
          "36": [
            13627,
            13767
          ],
          "37": [
            13777,
            13843
          ],
          "38": [
            13853,
            13909
          ],
          "39": [
            13919,
            13974
          ],
          "40": [
            13985,
            14010
          ],
          "41": [
            14062,
            14082
          ],
          "42": [
            14199,
            14226
          ],
          "43": [
            14236,
            14262
          ],
          "44": [
            14272,
            14302
          ],
          "45": [
            14312,
            14343
          ],
          "46": [
            14353,
            14374
          ],
          "47": [
            14385,
            14582
          ],
          "48": [
            14593,
            14605
          ]
        },
        "RequestManager.createRequest": {
          "8": [
            10147,
            10256
          ],
          "9": [
            10266,
            10375
          ],
          "10": [
            10385,
            10493
          ],
          "11": [
            10503,
            10568
          ],
          "12": [
            10744,
            10925
          ],
          "13": [
            10977,
            10997
          ],
          "15": [
            11286,
            11316
          ],
          "16": [
            11326,
            11376
          ],
          "17": [
            11386,
            11426
          ],
          "18": [
            11436,
            11462
          ],
          "19": [
            11472,
            11536
          ],
          "20": [
            11546,
            11589
          ],
          "21": [
            11599,
            11654
          ],
          "22": [
            11665,
            11928
          ],
          "23": [
            11939,
            12086
          ],
          "24": [
            12097,
            12113
          ]
        },
        "RequestManager.invalidateFill": {
          "3": [
            28964,
            29071
          ],
          "4": [
            29081,
            29191
          ],
          "5": [
            29202,
            29239
          ],
          "6": [
            29250,
            29297
          ]
        },
        "RequestManager.isInvalidFill": {
          "0": [
            27502,
            27551
          ]
        },
        "RequestManager.isWithdrawn": {
          "7": [
            24526,
            24573
          ]
        },
        "RequestManager.lpFee": {
          "97": [
            7344,
            7402
          ]
        },
        "RequestManager.pause": {
          "59": [
            29728,
            29736
          ]
        },
        "RequestManager.protocolFee": {
          "60": [
            7576,
            7620
          ]
        },
        "RequestManager.resolveClaim": {
          "112": [
            20428,
            20557
          ],
          "113": [
            21183,
            21238
          ],
          "114": [
            21344,
            21362
          ],
          "115": [
            21458,
            21594
          ],
          "116": [
            21664,
            21784
          ],
          "117": [
            21798,
            21846
          ],
          "118": [
            22077,
            22128
          ],
          "119": [
            22142,
            22165
          ],
          "120": [
            22295,
            22350
          ],
          "121": [
            22364,
            22390
          ],
          "122": [
            22405,
            22469
          ],
          "123": [
            22679,
            22707
          ],
          "124": [
            23155,
            23209
          ],
          "125": [
            23248,
            23302
          ],
          "126": [
            23337,
            23374
          ]
        },
        "RequestManager.resolveRequest": {
          "30": [
            28218,
            28241
          ],
          "31": [
            28251,
            28274
          ],
          "32": [
            28285,
            28323
          ],
          "33": [
            28334,
            28381
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "82": [
            26586,
            26655
          ],
          "83": [
            26665,
            26712
          ],
          "84": [
            26723,
            26780
          ]
        },
        "RequestManager.totalFee": {
          "78": [
            7873,
            7915
          ]
        },
        "RequestManager.unpause": {
          "29": [
            30062,
            30072
          ]
        },
        "RequestManager.updateFeeData": {
          "50": [
            25764,
            25798
          ],
          "51": [
            25808,
            25830
          ],
          "52": [
            25840,
            25862
          ]
        },
        "RequestManager.updateTransferLimit": {
          "85": [
            26160,
            26192
          ]
        },
        "RequestManager.withdraw": {
          "86": [
            19065,
            19107
          ],
          "87": [
            19297,
            19322
          ],
          "88": [
            19342,
            19374
          ],
          "89": [
            19384,
            19423
          ],
          "90": [
            19434,
            19575
          ],
          "91": [
            19656,
            19693
          ],
          "92": [
            19704,
            19763
          ],
          "93": [
            19856,
            19889
          ],
          "94": [
            19910,
            19930
          ]
        },
        "RequestManager.withdrawDeposit": {
          "127": [
            23559,
            23606
          ],
          "128": [
            23617,
            23650
          ],
          "129": [
            23661,
            23746
          ],
          "130": [
            23816,
            23875
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "53": [
            12474,
            12540
          ],
          "54": [
            12550,
            12657
          ],
          "55": [
            12667,
            12726
          ],
          "56": [
            12737,
            12789
          ],
          "57": [
            12800,
            12848
          ],
          "58": [
            12918,
            13040
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "79": [
            25105,
            25148
          ],
          "80": [
            25158,
            25197
          ],
          "81": [
            25253,
            25290
          ]
        }
      },
      "22": {
        "RestrictedCalls._addCaller": {
          "106": [
            755,
            823
          ],
          "107": [
            833,
            957
          ],
          "108": [
            967,
            1011
          ]
        },
        "RestrictedCalls.addCaller": {
          "35": [
            1567,
            1611
          ],
          "49": [
            1185,
            1230
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {
        "SafeERC20._callOptionalReturn": {
          "132": [
            4351,
            4436
          ]
        },
        "SafeERC20.safeTransfer": {
          "109": [
            875,
            961
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "99": [
            1112,
            1208
          ]
        }
      },
      "7": {
        "Address._revert": {
          "141": [
            9119,
            9139
          ]
        },
        "Address.functionCall": {
          "134": [
            4030,
            4089
          ]
        },
        "Address.functionCallWithValue": {
          "135": [
            5149,
            5230
          ],
          "136": [
            5323,
            5399
          ]
        },
        "Address.isContract": {
          "137": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "138": [
            7908,
            7968
          ],
          "139": [
            7996,
            8013
          ],
          "140": [
            8044,
            8077
          ]
        }
      },
      "8": {
        "Context._msgSender": {
          "100": [
            712,
            729
          ]
        }
      },
      "9": {
        "Math.max": {
          "131": [
            490,
            510
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Permit",
    "LpWhitelist",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Pausable",
    "RestrictedCalls",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/SafeERC20"
  ],
  "deployedBytecode": "6080604052600436106102675760003560e01c80637dc2cd9811610144578063cf7b287f116100b6578063e7aad5c41161007a578063e7aad5c41461092c578063ea62889814610942578063eb3211731461095d578063f2fde38b14610991578063f7d64cec146109b1578063f9432517146109d157600080fd5b8063cf7b287f14610896578063d137920b146108b6578063d762a37b146108d6578063dee4dea0146108f6578063e2653eeb1461091657600080fd5b80639d866985116101085780639d866985146106d35780639e375226146107ee578063a032b5f41461081e578063adb610a31461083e578063b4d1d27a14610863578063cea74edf1461087657600080fd5b80637dc2cd981461062157806383d208c3146106555780638456cb59146106895780638da5cb5b1461069e57806396171d05146106bc57600080fd5b80633f4ba83a116101dd578063715018a6116101a1578063715018a6146105615780637203ae3b14610576578063743c151a14610596578063747293fb146105c157806378da194b146105e1578063796505591461060157600080fd5b80633f4ba83a146104d15780635b3a6ef2146104e65780635c975abb146105065780635d5aa11b1461051e5780636bc6c8d11461053457600080fd5b80632f4212b81161022f5780632f4212b8146103535780632f92f0091461037357806330a08cbc146103a057806331e08f7a146103df5780633993b6ed146103ff5780633b046f091461041f57600080fd5b806303fc4c371461026c5780630e19a1c61461028e5780630e3a918c146102cb5780631489f8d2146102fb5780631d18adc51461031f575b600080fd5b34801561027857600080fd5b5061028c610287366004612e03565b6109e7565b005b34801561029a57600080fd5b506102ae6102a9366004612e2f565b610c38565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102d757600080fd5b506102eb6102e6366004612e51565b610c66565b60405190151581526020016102c2565b34801561030757600080fd5b5061031161070881565b6040519081526020016102c2565b34801561032b57600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561035f57600080fd5b5061031161036e366004612e86565b610cbf565b34801561037f57600080fd5b5061031161038e366004612e51565b60046020526000908152604090205481565b3480156103ac57600080fd5b506102eb6103bb366004612e2f565b60009182526005602090815260408084209284526007909201905290205460ff1690565b3480156103eb57600080fd5b5061028c6103fa366004612ee5565b61116c565b34801561040b57600080fd5b5061028c61041a366004612ee5565b6111d0565b34801561042b57600080fd5b5061048b61043a366004612f00565b60066020819052600091825260409091208054600182015460028301546004840154600585015495850154600786015460089096015494966001600160a01b03948516969395929094169392909188565b604080519889526001600160a01b0397881660208a0152880195909552949092166060860152608085015260a084015260c083019190915260e0820152610100016102c2565b3480156104dd57600080fd5b5061028c611229565b3480156104f257600080fd5b5061028c610501366004612f29565b61123b565b34801561051257600080fd5b5060035460ff166102eb565b34801561052a57600080fd5b5061031160075481565b34801561054057600080fd5b5061031161054f366004612ee5565b600b6020526000908152604090205481565b34801561056d57600080fd5b5061028c6113ec565b34801561058257600080fd5b5061028c610591366004612f68565b6113fe565b6105a96105a4366004612e2f565b611416565b6040516001600160601b0390911681526020016102c2565b3480156105cd57600080fd5b5061028c6105dc366004612ee5565b6117bb565b3480156105ed57600080fd5b5061028c6105fc366004612e03565b6117d2565b34801561060d57600080fd5b5061028c61061c366004612e51565b6117e8565b34801561062d57600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561066157600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561069557600080fd5b5061028c611a00565b3480156106aa57600080fd5b506000546001600160a01b03166102ae565b3480156106c857600080fd5b506103116202a30081565b3480156106df57600080fd5b506107786106ee366004612e51565b600560208190526000918252604090912080546001820154600283015460038401546004850154958501546006909501546001600160a01b0394851696938516959294919363ffffffff808216946001600160601b036401000000008404811695600160801b8504821695600160e01b9095049093169390821692600160601b909204909116908b565b604080516001600160a01b039c8d1681529a8c1660208c01528a0198909852606089019690965263ffffffff94851660808901526001600160601b0393841660a089015291831660c088015290921660e086015216610100840152909216610120820152610140810191909152610160016102c2565b3480156107fa57600080fd5b506102eb610809366004612ee5565b60016020526000908152604090205460ff1681565b34801561082a57600080fd5b50610311610839366004612e51565b611a10565b34801561084a57600080fd5b506003546105a99061010090046001600160601b031681565b61028c610871366004612f00565b611a34565b34801561088257600080fd5b50610311610891366004612e51565b611ecb565b3480156108a257600080fd5b5061028c6108b1366004612fa4565b611ee9565b3480156108c257600080fd5b5061028c6108d1366004612e2f565b611f74565b3480156108e257600080fd5b5061028c6108f1366004612e51565b61202a565b34801561090257600080fd5b506102ae610911366004612f00565b612037565b34801561092257600080fd5b5061031160085481565b34801561093857600080fd5b5061031160095481565b34801561094e57600080fd5b506105a96001600160601b0381565b34801561096957600080fd5b506103117f000000000000000000000000000000000000000000000000000000000000000081565b34801561099d57600080fd5b5061028c6109ac366004612ee5565b612307565b3480156109bd57600080fd5b506103116109cc366004612e51565b61237d565b3480156109dd57600080fd5b50610311600a5481565b60008181526002602052604090205481906001600160a01b0316468203610a3e57336001600160a01b03821614610a395760405162461bcd60e51b8152600401610a3090612fd7565b60405180910390fd5b610b04565b6000828152600260205260409020600101546001600160a01b031680610a765760405162461bcd60e51b8152600401610a309061300c565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa158015610ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae6919061304e565b610b025760405162461bcd60e51b8152600401610a3090612fd7565b505b600085815260056020819052604090912090810154600160601b90046001600160a01b031615610b765760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c736044820152606401610a30565b600085815260078201602052604090205460ff1615610bd25760405162461bcd60e51b8152602060048201526018602482015277119a5b1b08185b1c9958591e481a5b9d985b1a59185d195960421b6044820152606401610a30565b600085815260078201602052604090819020805460ff19166001179055517f5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad04590610c289088908890918252602082015260400190565b60405180910390a1505050505050565b60026020528160005260406000208160028110610c5457600080fd5b01546001600160a01b03169150829050565b60008181526005602052604081205482906001600160a01b0316610c9c5760405162461bcd60e51b8152600401610a3090613070565b5050600090815260056020819052604090912001546001600160601b0316151590565b6000610cc96123a6565b6000878152600460205260408120549003610d265760405162461bcd60e51b815260206004820152601b60248201527f54617267657420726f6c6c7570206e6f7420737570706f7274656400000000006044820152606401610a30565b610708821015610d785760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920706572696f6420746f6f2073686f7274000000000000006044820152606401610a30565b6202a300821115610dcb5760405162461bcd60e51b815260206004820152601860248201527f56616c696469747920706572696f6420746f6f206c6f6e6700000000000000006044820152606401610a30565b600a54831115610e1d5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e742065786365656473207472616e73666572206c696d69740000006044820152606401610a30565b856000610e298561237d565b90506000610e3686611a10565b905080610e4383886130b3565b610e4d91906130b3565b604051636eb1769f60e11b81523360048201523060248201526001600160a01b0385169063dd62ed3e90604401602060405180830381865afa158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb91906130cb565b1015610f025760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610a30565b600354600090610f219061010090046001600160601b031660016130e4565b600380546001600160601b038316610100026cffffffffffffffffffffffff001990911617905560408051466020808301919091528183018f90526001600160601b031960608e811b8216818501528d901b166074830152608882018b90526001600160a01b031960a085901b1660a88301528251808303609401815260b490920190925280519101209091506000600560008381526020019081526020016000209050338160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508b8160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508c8160020181905550888160030181905550874261103591906130b3565b8160040160006101000a81548163ffffffff021916908363ffffffff160217905550848160040160046101000a8154816001600160601b0302191690836001600160601b03160217905550838160040160106101000a8154816001600160601b0302191690836001600160601b03160217905550817f5cb181de12515eac47130902b874f42ca463496f8f42ad3b13431e7a223740fe8e8e8e8e8e898f426110dd91906130b3565b604080519788526001600160a01b0396871660208901529486168786015292909416606086015260808501526001600160601b0390921660a084015263ffffffff90911660c0830152519081900360e00190a261115c333086611140898e6130b3565b61114a91906130b3565b6001600160a01b038a169291906123ec565b509b9a5050505050505050505050565b611174612457565b6001600160a01b038116600081815260016020818152604092839020805460ff191690921790915590519182527f371fc559c30f70424413fed6bf7e57dc939651331abad5c970a8ea0921c80b2e91015b60405180910390a150565b6111d8612457565b6001600160a01b038116600081815260016020908152604091829020805460ff1916905590519182527f4e774c97f73f4bea034579e4224498d7d9b3a4109eaa70ed3d85c97a5855f19891016111c5565b611231612457565b6112396124b1565b565b60008281526002602052604090205482906001600160a01b031646820361128957336001600160a01b038216146112845760405162461bcd60e51b8152600401610a3090612fd7565b61134f565b6000828152600260205260409020600101546001600160a01b0316806112c15760405162461bcd60e51b8152600401610a309061300c565b60405163845c544360e01b81526001600160a01b03838116600483015233602483015282169063845c544390604401602060405180830381865afa15801561130d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611331919061304e565b61134d5760405162461bcd60e51b8152600401610a3090612fd7565b505b600086815260056020818152604080842092830180546001600160601b0316600160601b6001600160a01b038a1690810291909117909155600684018a905589855260078401835293819020805460ff1916905580518a815291820193909352918201879052907fb32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b99567369060600160405180910390a150505050505050565b6113f4612457565b6112396000612503565b611406612457565b611411838383612553565b505050565b60008281526005602052604081205483906001600160a01b031661144c5760405162461bcd60e51b8152600401610a3090613070565b3360009081526001602052604090205460ff166114a45760405162461bcd60e51b815260206004820152601660248201527514d95b99195c881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610a30565b600084815260056020526040902060048101546114e8907f00000000000000000000000000000000000000000000000000000000000000009063ffffffff166130b3565b42106115405760405162461bcd60e51b815260206004820152602160248201527f526571756573742063616e6e6f7420626520636c61696d656420616e796d6f726044820152606560f81b6064820152608401610a30565b60058101546001600160601b0316156115975760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b6044820152606401610a30565b7f000000000000000000000000000000000000000000000000000000000000000034146115fd5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b6044820152606401610a30565b836116435760405162461bcd60e51b8152602060048201526016602482015275046696c6c4964206d757374206e6f74206265203078360541b6044820152606401610a30565b600181600401601c8282829054906101000a900463ffffffff16611667919061310f565b825463ffffffff91821661010093840a90810292021916179091556003546000925061169f916001600160601b0391041660016130e4565b600380546cffffffffffffffffffffffff0019166101006001600160601b03841602179055905060006116f27f0000000000000000000000000000000000000000000000000000000000000000426130b3565b9050600060066000846001600160601b03166001600160601b031681526020019081526020016000209050878160000181905550338160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550348160020181905550818160070181905550868160080181905550877f0763b6170df0264962938e705b5cbb0e18fd60107c02b64e3261fa233458ce7a843334600080888e6040516117a7979695949392919061312e565b60405180910390a250909695505050505050565b6117c3612457565b6117cf46826000612553565b50565b6117da612457565b600992909255600855600755565b60008181526005602052604090205481906001600160a01b031661181e5760405162461bcd60e51b8152600401610a3090613070565b6000828152600560208190526040909120908101546001600160601b0316156118855760405162461bcd60e51b81526020600482015260196024820152782232b837b9b4ba1030b63932b0b23c903bb4ba34323930bbb760391b6044820152606401610a30565b600481015463ffffffff164210156118df5760405162461bcd60e51b815260206004820152601760248201527f52657175657374206e6f742065787069726564207965740000000000000000006044820152606401610a30565b6004810154600160e01b900463ffffffff16156119365760405162461bcd60e51b815260206004820152601560248201527441637469766520636c61696d732072756e6e696e6760581b6044820152606401610a30565b6005810180546001600160601b0319166001600160601b031790558054604080518581526001600160a01b0390921660208301527fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a160018101548154600483015460038401546001600160a01b03938416936119fa9316916001600160601b03600160801b82048116926119df926401000000009004909116906130b3565b6119e991906130b3565b6001600160a01b0384169190612665565b50505050565b611a08612457565b611239612695565b6000620f424060095483611a249190613178565b611a2e9190613197565b92915050565b6001600160601b03811660009081526006602052604090206001015481906001600160a01b0316611a9b5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b6044820152606401610a30565b6001600160601b038216600090815260066020908152604080832080546007820154818652600590945291909320909190428211611b0b5760405162461bcd60e51b815260206004820152600d60248201526c10db185a5b48195e1c1a5c9959609a1b6044820152606401610a30565b6005810154600160601b90046001600160a01b031615611b6d5760405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c7265616479207265736f6c76656400000000000000006044820152606401610a30565b6008840154600090815260078201602052604090205460ff1615611bce5760405162461bcd60e51b8152602060048201526018602482015277119a5b1b08185b1c9958591e481a5b9d985b1a59185d195960421b6044820152606401610a30565b6001840154600285015460058601547f0000000000000000000000000000000000000000000000000000000000000000926001600160a01b0316919080821115611cf85780600003611c3b576002850154600090815260046020526040902054611c3890856130b3565b93505b6001600160a01b0383163303611c935760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74206368616c6c656e6765206f776e20636c61696d0000000000006044820152606401610a30565b611c9d81836131b9565b611ca89060016130b3565b341015611cf35760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da081cdd185ad9481c1c9bdd9a591959603a1b6044820152606401610a30565b611dc9565b336001600160a01b03841614611d495760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b6044820152606401610a30565b7f0000000000000000000000000000000000000000000000000000000000000000611d7483836131b9565b611d7e91906130b3565b341015611dc95760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da081cdd185ad9481c1c9bdd9a591959603a1b6044820152606401610a30565b6001600160a01b0383163303611df157611de334836130b3565b600289018190559150611e42565b6004880180546001600160a01b03191633908117909155600090815260038901602052604081208054349290611e289084906130b3565b90915550611e38905034826130b3565b6005890181905590505b85611e4d85426130b3565b1115611e6757611e5d84426130b3565b6007890181905595505b6004880154600889015460405189927f0763b6170df0264962938e705b5cbb0e18fd60107c02b64e3261fa233458ce7a92611eb7928f92899289926001600160a01b039092169189918f9161312e565b60405180910390a250505050505050505050565b6000611ed682611a10565b611edf8361237d565b611a2e91906130b3565b611ef1612457565b6001600160a01b0382166000908152600b602052604090205480611f4e5760405162461bcd60e51b815260206004820152601460248201527350726f746f636f6c20666565206973207a65726f60601b6044820152606401610a30565b6001600160a01b0383166000818152600b602052604081205583906119fa908484612665565b611f7c612457565b60008111611fdb5760405162461bcd60e51b815260206004820152602660248201527f46696e616c69747920706572696f64206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610a30565b60008281526004602090815260409182902083905581518481529081018390527faba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65910160405180910390a15050565b612032612457565b600a55565b6001600160601b03811660009081526006602052604081206001015482906001600160a01b031661209e5760405162461bcd60e51b815260206004820152601160248201527018db185a5b5259081b9bdd081d985b1a59607a1b6044820152606401610a30565b6001600160601b0383166000908152600660209081526040808320805480855260059093529083209092806120d2886126d2565b6001600160a01b0382166000908152600388016020526040902054919350915015612113576001600160a01b03821660009081526003860160205260408120555b6006850154600081900361216457600184600401601c8282829054906101000a900463ffffffff1661214591906131d0565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b61216e82826130b3565b600687018190556005870154600288015491925061218b916130b3565b8111156121da5760405162461bcd60e51b815260206004820152601c60248201527f416d6f756e7420746f20776974686472617720746f6f206c61726765000000006044820152606401610a30565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612227576040519150601f19603f3d011682016040523d82523d6000602084013e61222c565b606091505b50509050806122745760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610a30565b604080516001600160601b038c1681526001600160a01b038616602082015287917fc9e74e0700d0c6488af9c81d70fdd4158aea77687137ff85499509c41a10612b910160405180910390a260058501546001600160601b03161580156122ea575060018701546001600160a01b038581169116145b156122f9576122f9858b6129c8565b509198975050505050505050565b61230f612457565b6001600160a01b0381166123745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a30565b6117cf81612503565b6000611a2e600754620f4240600854856123979190613178565b6123a19190613197565b612ad3565b60035460ff16156112395760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a30565b6040516001600160a01b03808516602483015283166044820152606481018290526119fa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612aeb565b6000546001600160a01b031633146112395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a30565b6124b9612bbd565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166125b55760405162461bcd60e51b815260206004820152602360248201527f5265737472696374656443616c6c733a2063616c6c65722063616e6e6f74206260448201526206520360ec1b6064820152608401610a30565b6000838152600260205260409020546001600160a01b0316156126295760405162461bcd60e51b815260206004820152602660248201527f5265737472696374656443616c6c733a2063616c6c657220616c72656164792060448201526565786973747360d01b6064820152608401610a30565b6040805180820182526001600160a01b03808516825283166020808301919091526000868152600291829052929092206119fa92909190612d96565b6040516001600160a01b03831660248201526044810182905261141190849063a9059cbb60e01b90606401612420565b61269d6123a6565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124e63390565b6001600160601b03808216600090815260066020908152604080832080548452600592839052908320808301546001830154600284015494840154600885015496978897959694959316936001600160a01b039092169261273382846130b3565b8760060154106127855760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792077697468647261776e0000000000000000006044820152606401610a30565b60058601546006870154600091600160601b90046001600160a01b03169081156127d057866001600160a01b0316826001600160a01b03161480156127c957508381145b92506128b1565b600081815260078a01602052604090205460ff16156127f257600092506128b1565b6001600160601b03881615612857576001600160601b0388166000908152600660205260409020600101546001600160a01b0388811691161480156127c957506001600160601b038816600090815260066020526040902060080154841492506128b1565b89600701544210156128ab5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e6973686564000000000000006044820152606401610a30565b84861192505b60008084156128ce576128c487896130b3565b9150889050612967565b86156129565733600090815260038d0160205260409020546128f1906002613178565b9150339050600082116129515760405162461bcd60e51b815260206004820152602260248201527f4368616c6c656e67657220686173206e6f7468696e6720746f20776974686472604482015261617760f01b6064820152608401610a30565b612967565b505060005486906001600160a01b03165b60048c01546001600160a01b031633036129b5578688111561299e5761298d87896131b9565b61299790836130b3565b91506129b5565b6129a888886131b9565b6129b290836131b9565b91505b9e909d509b505050505050505050505050565b6001600160601b0381166000908152600660209081526040918290206001810154815484519081526001600160a01b0390911692810183905290927fab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565910160405180910390a16005840180546001600160601b0319166001600160601b0385811691909117909155600485015460018601546001600160a01b03166000908152600b602052604081208054600160801b9093049093169291612a8b9084906130b3565b90915550506001840154600485015460038601546001600160a01b0390921691612acc9184916119e99164010000000090046001600160601b0316906130b3565b5050505050565b6000818311612ae25781612ae4565b825b9392505050565b6000612b40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c069092919063ffffffff16565b8051909150156114115780806020019051810190612b5e919061304e565b6114115760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a30565b60035460ff166112395760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a30565b6060612c158484600085612c1d565b949350505050565b606082471015612c7e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a30565b600080866001600160a01b03168587604051612c9a9190613221565b60006040518083038185875af1925050503d8060008114612cd7576040519150601f19603f3d011682016040523d82523d6000602084013e612cdc565b606091505b5091509150612ced87838387612cf8565b979650505050505050565b60608315612d67578251600003612d60576001600160a01b0385163b612d605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a30565b5081612c15565b612c158383815115612d7c5781518083602001fd5b8060405162461bcd60e51b8152600401610a30919061323d565b8260028101928215612dde579160200282015b82811115612dde57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612da9565b50612dea929150612dee565b5090565b5b80821115612dea5760008155600101612def565b600080600060608486031215612e1857600080fd5b505081359360208301359350604090920135919050565b60008060408385031215612e4257600080fd5b50508035926020909101359150565b600060208284031215612e6357600080fd5b5035919050565b80356001600160a01b0381168114612e8157600080fd5b919050565b60008060008060008060c08789031215612e9f57600080fd5b86359550612eaf60208801612e6a565b9450612ebd60408801612e6a565b9350612ecb60608801612e6a565b92506080870135915060a087013590509295509295509295565b600060208284031215612ef757600080fd5b612ae482612e6a565b600060208284031215612f1257600080fd5b81356001600160601b0381168114612ae457600080fd5b60008060008060808587031215612f3f57600080fd5b843593506020850135925060408501359150612f5d60608601612e6a565b905092959194509250565b600080600060608486031215612f7d57600080fd5b83359250612f8d60208501612e6a565b9150612f9b60408501612e6a565b90509250925092565b60008060408385031215612fb757600080fd5b612fc083612e6a565b9150612fce60208401612e6a565b90509250929050565b6020808252818101527f5265737472696374656443616c6c733a2063616c6c20646973616c6c6f776564604082015260600190565b60208082526022908201527f5265737472696374656443616c6c733a206d657373656e676572206e6f742073604082015261195d60f21b606082015260800190565b60006020828403121561306057600080fd5b81518015158114612ae457600080fd5b6020808252601390820152721c995c5d595cdd1259081b9bdd081d985b1a59606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156130c6576130c661309d565b500190565b6000602082840312156130dd57600080fd5b5051919050565b60006001600160601b038083168185168083038211156131065761310661309d565b01949350505050565b600063ffffffff8083168185168083038211156131065761310661309d565b6001600160601b039790971687526001600160a01b0395861660208801526040870194909452919093166060850152608084019290925260a083019190915260c082015260e00190565b60008160001904831182151516156131925761319261309d565b500290565b6000826131b457634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156131cb576131cb61309d565b500390565b600063ffffffff838116908316818110156131ed576131ed61309d565b039392505050565b60005b838110156132105781810151838201526020016131f8565b838111156119fa5750506000910152565b600082516132338184602087016131f5565b9190910192915050565b602081526000825180602084015261325c8160408501602087016131f5565b601f01601f1916919091016040019291505056fea26469706673582212205090e7dd9640277a98a8006cf83a67b18add3846c77ef6241f86c7bd74cc102e64736f6c634300080d0033",
  "deployedSourceMap": "1141:28940:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28744:560;;;;;;;;;;-1:-1:-1;28744:560:20;;;;;:::i;:::-;;:::i;:::-;;576:45:22;;;;;;;;;;-1:-1:-1;576:45:22;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;752:32:29;;;734:51;;722:2;707:18;576:45:22;;;;;;;;24387:193:20;;;;;;;;;;-1:-1:-1;24387:193:20;;;;;:::i;:::-;;:::i;:::-;;;1146:14:29;;1139:22;1121:41;;1109:2;1094:18;24387:193:20;981:187:29;5541:56:20;;;;;;;;;;;;5587:10;5541:56;;;;;1319:25:29;;;1307:2;1292:18;5541:56:20;1173:177:29;5435:49:20;;;;;;;;;;;;;;;9877:2243;;;;;;;;;;-1:-1:-1;9877:2243:20;;;;;:::i;:::-;;:::i;6206:50::-;;;;;;;;;;-1:-1:-1;6206:50:20;;;;;:::i;:::-;;;;;;;;;;;;;;27379:179;;;;;;;;;;-1:-1:-1;27379:179:20;;;;;:::i;:::-;27482:4;27509:19;;;:8;:19;;;;;;;;:42;;;:34;;;;:42;;;;;;;;27379:179;1256:125:18;;;;;;;;;;-1:-1:-1;1256:125:18;;;;;:::i;:::-;;:::i;1603:130::-;;;;;;;;;;-1:-1:-1;1603:130:18;;;;;:::i;:::-;;:::i;6385:38:20:-;;;;;;;;;;-1:-1:-1;6385:38:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6385:38:20;;;;;;;;;;;;;;;;;;;;3530:25:29;;;-1:-1:-1;;;;;3629:15:29;;;3624:2;3609:18;;3602:43;3661:18;;3654:34;;;;3724:15;;;;3719:2;3704:18;;3697:43;3771:3;3756:19;;3749:35;3582:3;3800:19;;3793:35;3859:3;3844:19;;3837:35;;;;3903:3;3888:19;;3881:35;3517:3;3502:19;6385:38:20;3187:735:29;30014:65:20;;;;;;;;;;;;;:::i;27974:414::-;;;;;;;;;;-1:-1:-1;27974:414:20;;;;;:::i;:::-;;:::i;1615:84:1:-;;;;;;;;;;-1:-1:-1;1685:7:1;;;;1615:84;;6518:33:20;;;;;;;;;;;;;;;;7118:56;;;;;;;;;;-1:-1:-1;7118:56:20;;;;;:::i;:::-;;;;;;;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;1431:187:22:-;;;;;;;;;;-1:-1:-1;1431:187:22;;;;;:::i;:::-;;:::i;13386:1226:20:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4818:39:29;;;4800:58;;4788:2;4773:18;13386:1226:20;4656:208:29;1121:116:22;;;;;;;;;;-1:-1:-1;1121:116:22;;;;;:::i;:::-;;:::i;25613:256:20:-;;;;;;;;;;-1:-1:-1;25613:256:20;;;;;:::i;:::-;;:::i;12302:745::-;;;;;;;;;;-1:-1:-1;12302:745:20;;;;;:::i;:::-;;:::i;4789:36::-;;;;;;;;;;;;;;;4687:46;;;;;;;;;;;;;;;29682:61;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;5654:54:20;;;;;;;;;;;;5700:8;5654:54;;6301:43;;;;;;;;;;-1:-1:-1;6301:43:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6301:43:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6301:43:20;;;;;;-1:-1:-1;;;6301:43:20;;;;;-1:-1:-1;;;6301:43:20;;;;;;;;;;;-1:-1:-1;;;6301:43:20;;;;;;;;;;;;;-1:-1:-1;;;;;5664:15:29;;;5646:34;;5716:15;;;5711:2;5696:18;;5689:43;5748:18;;5741:34;;;;5806:2;5791:18;;5784:34;;;;5837:10;5884:15;;;5878:3;5863:19;;5856:44;-1:-1:-1;;;;;5982:15:29;;;5626:3;5961:19;;5954:44;6035:15;;;6029:3;6014:19;;6007:44;6088:15;;;6082:3;6067:19;;6060:44;6141:15;6135:3;6120:19;;6113:44;6194:15;;;6188:3;6173:19;;6166:44;6241:3;6226:19;;6219:36;;;;5595:3;5580:19;6301:43:20;5190:1071:29;820:42:18;;;;;;;;;;-1:-1:-1;820:42:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;7499:128:20;;;;;;;;;;-1:-1:-1;7499:128:20;;;;;:::i;:::-;;:::i;6074:26::-;;;;;;;;;;-1:-1:-1;6074:26:20;;;;;;;-1:-1:-1;;;;;6074:26:20;;;15810:2249;;;;;;:::i;:::-;;:::i;7799:123::-;;;;;;;;;;-1:-1:-1;7799:123:20;;;;;:::i;:::-;;:::i;24923:374::-;;;;;;;;;;-1:-1:-1;24923:374:20;;;;;:::i;:::-;;:::i;26463:324::-;;;;;;;;;;-1:-1:-1;26463:324:20;;;;;:::i;:::-;;:::i;26076:123::-;;;;;;;;;;-1:-1:-1;26076:123:20;;;;;:::i;:::-;;:::i;18616:1321::-;;;;;;;;;;-1:-1:-1;18616:1321:20;;;;;:::i;:::-;;:::i;6647:31::-;;;;;;;;;;;;;;;;6802:33;;;;;;;;;;;;;;;;5813:68;;;;;;;;;;;;-1:-1:-1;;;;;5813:68:20;;4526:35;;;;;;;;;;;;;;;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;7273:136:20:-;;;;;;;;;;-1:-1:-1;7273:136:20;;;;;:::i;:::-;;:::i;6968:42::-;;;;;;;;;;;;;;;;28744:560;2072:14:22;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:22;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:22;;;2175:65;;;;-1:-1:-1;;;2175:65:22;;;;;;;:::i;:::-;;;;;;;;;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;2314:1;2291:25;;-1:-1:-1;;;;;2291:25:22;;2330:116;;;;-1:-1:-1;;;2330:116:22;;;;;;;:::i;:::-;2485:53;;-1:-1:-1;;;2485:53:22;;-1:-1:-1;;;;;7657:15:29;;;2485:53:22;;;7639:34:29;2527:10:22;7689:18:29;;;7682:43;2485:33:22;;;;;7574:18:29;;2485:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:22;;;;;;;:::i;:::-;2257:358;2125:490;28909:23:20::1;28935:19:::0;;;:8:::1;:19;::::0;;;;;;;28985:14;;::::1;::::0;-1:-1:-1;;;28985:14:20;::::1;-1:-1:-1::0;;;;;28985:14:20::1;:28:::0;28964:107:::1;;;::::0;-1:-1:-1;;;28964:107:20;;8220:2:29;28964:107:20::1;::::0;::::1;8202:21:29::0;;;8239:18;;;8232:30;8298:34;8278:18;;;8271:62;8350:18;;28964:107:20::1;8018:356:29::0;28964:107:20::1;29102:30;::::0;;;:22:::1;::::0;::::1;:30;::::0;;;;;::::1;;:39;29081:110;;;::::0;-1:-1:-1;;;29081:110:20;;8581:2:29;29081:110:20::1;::::0;::::1;8563:21:29::0;8620:2;8600:18;;;8593:30;-1:-1:-1;;;8639:18:29;;;8632:54;8703:18;;29081:110:20::1;8379:348:29::0;29081:110:20::1;29202:30;::::0;;;:22:::1;::::0;::::1;:30;::::0;;;;;;:37;;-1:-1:-1;;29202:37:20::1;29235:4;29202:37;::::0;;29255:42;::::1;::::0;::::1;::::0;29279:9;;29225:6;;8906:25:29;;;8962:2;8947:18;;8940:34;8894:2;8879:18;;8732:248;29255:42:20::1;;;;;;;;28899:405;2062:570:22::0;28744:560:20;;;;:::o;576:45:22:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;576:45:22;;-1:-1:-1;576:45:22;;-1:-1:-1;576:45:22:o;24387:193:20:-;24506:4;8071:19;;;:8;:19;;;;;:26;24478:9;;-1:-1:-1;;;;;8071:26:20;8050:106;;;;-1:-1:-1;;;8050:106:20;;;;;;;:::i;:::-;-1:-1:-1;;24533:19:20::1;::::0;;;:8:::1;:19;::::0;;;;;;;:35:::1;::::0;-1:-1:-1;;;;;24533:35:20::1;:40:::0;::::1;::::0;24387:193::o;9877:2243::-;10128:7;1239:19:1;:17;:19::i;:::-;10168:30:20::1;::::0;;;:15:::1;:30;::::0;;;;;:35;;10147:109:::1;;;::::0;-1:-1:-1;;;10147:109:20;;9535:2:29;10147:109:20::1;::::0;::::1;9517:21:29::0;9574:2;9554:18;;;9547:30;9613:29;9593:18;;;9586:57;9660:18;;10147:109:20::1;9333:351:29::0;10147:109:20::1;5587:10;10287:14;:37;;10266:109;;;::::0;-1:-1:-1;;;10266:109:20;;9891:2:29;10266:109:20::1;::::0;::::1;9873:21:29::0;9930:2;9910:18;;;9903:30;9969:27;9949:18;;;9942:55;10014:18;;10266:109:20::1;9689:349:29::0;10266:109:20::1;5700:8;10406:14;:37;;10385:108;;;::::0;-1:-1:-1;;;10385:108:20;;10245:2:29;10385:108:20::1;::::0;::::1;10227:21:29::0;10284:2;10264:18;;;10257:30;10323:26;10303:18;;;10296:54;10367:18;;10385:108:20::1;10043:348:29::0;10385:108:20::1;10521:13;;10511:6;:23;;10503:65;;;::::0;-1:-1:-1;;;10503:65:20;;10598:2:29;10503:65:20::1;::::0;::::1;10580:21:29::0;10637:2;10617:18;;;10610:30;10676:31;10656:18;;;10649:59;10725:18;;10503:65:20::1;10396:353:29::0;10503:65:20::1;10601:18:::0;10579:12:::1;10658:13;10664:6:::0;10658:5:::1;:13::i;:::-;10631:40;;10681:30;10714:19;10726:6;10714:11;:19::i;:::-;10681:52:::0;-1:-1:-1;10681:52:20;10827:25:::1;10836:16:::0;10827:6;:25:::1;:::i;:::-;:50;;;;:::i;:::-;10765:42;::::0;-1:-1:-1;;;10765:42:20;;10781:10:::1;10765:42;::::0;::::1;7639:34:29::0;10801:4:20::1;7689:18:29::0;;;7682:43;-1:-1:-1;;;;;10765:15:20;::::1;::::0;::::1;::::0;7574:18:29;;10765:42:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:112;;10744:181;;;::::0;-1:-1:-1;;;10744:181:20;;11410:2:29;10744:181:20::1;::::0;::::1;11392:21:29::0;11449:2;11429:18;;;11422:30;-1:-1:-1;;;11468:18:29;;;11461:52;11530:18;;10744:181:20::1;11208:346:29::0;10744:181:20::1;10951:12;::::0;10936::::1;::::0;10951:16:::1;::::0;:12:::1;::::0;::::1;-1:-1:-1::0;;;;;10951:12:20::1;;:16;:::i;:::-;10977:12;:20:::0;;-1:-1:-1;;;;;10977:20:20;::::1;;;-1:-1:-1::0;;10977:20:20;;::::1;;::::0;;386:242:16;;;11069:13:20::1;386:242:16::0;;;;23414:19:29;;;;23449:12;;;23442:28;;;-1:-1:-1;;;;;;23558:2:29;23554:15;;;23550:24;;23536:12;;;23529:46;23609:15;;;23605:24;23591:12;;;23584:46;23646:13;;;23639:29;;;-1:-1:-1;;;;;;23725:3:29;23703:16;;;23699:59;23684:13;;;23677:82;386:242:16;;;;;;;;;23775:13:29;;;;386:242:16;;;359:283;;;;;10977:20:20;;-1:-1:-1;11228:26:20::1;11257:8;:19;11266:9;11257:19;;;;;;;;;;;11228:48;;11306:10;11286;:17;;;:30;;;;;-1:-1:-1::0;;;;;11286:30:20::1;;;;;-1:-1:-1::0;;;;;11286:30:20::1;;;;;;11358:18;11326:10;:29;;;:50;;;;;-1:-1:-1::0;;;;;11326:50:20::1;;;;;-1:-1:-1::0;;;;;11326:50:20::1;;;;;;11413:13;11386:10;:24;;:40;;;;11456:6;11436:10;:17;;:26;;;;11521:14;11503:15;:32;;;;:::i;:::-;11472:10;:21;;;:64;;;;;;;;;;;;;;;;;;11572:16;11546:10;:16;;;:43;;;;;-1:-1:-1::0;;;;;11546:43:20::1;;;;;-1:-1:-1::0;;;;;11546:43:20::1;;;;;;11631:22;11599:10;:22;;;:55;;;;;-1:-1:-1::0;;;;;11599:55:20::1;;;;;-1:-1:-1::0;;;;;11599:55:20::1;;;;;;11698:9;11670:258;11721:13;11748:18;11780;11812:13;11839:6;11859:5;11903:14;11885:15;:32;;;;:::i;:::-;11670:258;::::0;;12119:25:29;;;-1:-1:-1;;;;;12218:15:29;;;12213:2;12198:18;;12191:43;12270:15;;;12250:18;;;12243:43;12322:15;;;;12317:2;12302:18;;12295:43;12369:3;12354:19;;12347:35;-1:-1:-1;;;;;12419:39:29;;;12171:3;12398:19;;12391:68;12508:10;12496:23;;;12490:3;12475:19;;12468:52;11670:258:20;;;;;12106:3:29;11670:258:20;;::::1;11939:147;11975:10;12007:4;12054:22:::0;12026:25:::1;12035:16:::0;12026:6;:25:::1;:::i;:::-;:50;;;;:::i;:::-;-1:-1:-1::0;;;;;11939:22:20;::::1;::::0;:147;;:22:::1;:147::i;:::-;-1:-1:-1::0;12104:9:20;9877:2243;-1:-1:-1;;;;;;;;;;;9877:2243:20:o;1256:125:18:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1320:17:18;::::1;;::::0;;;1340:4:::1;1320:17;::::0;;;;;;;;:24;;-1:-1:-1;;1320:24:18::1;::::0;;::::1;::::0;;;1360:14;;734:51:29;;;1360:14:18::1;::::0;707:18:29;1360:14:18::1;;;;;;;;1256:125:::0;:::o;1603:130::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1677:17:18;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;1670:24;;-1:-1:-1;;1670:24:18::1;::::0;;1710:16;;734:51:29;;;1710:16:18::1;::::0;707:18:29;1710:16:18::1;588:203:29::0;30014:65:20;1094:13:0;:11;:13::i;:::-;30062:10:20::1;:8;:10::i;:::-;30014:65::o:0;27974:414::-;2072:14:22;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:22;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:22;;;2175:65;;;;-1:-1:-1;;;2175:65:22;;;;;;;:::i;:::-;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;2314:1;2291:25;;-1:-1:-1;;;;;2291:25:22;;2330:116;;;;-1:-1:-1;;;2330:116:22;;;;;;;:::i;:::-;2485:53;;-1:-1:-1;;;2485:53:22;;-1:-1:-1;;;;;7657:15:29;;;2485:53:22;;;7639:34:29;2527:10:22;7689:18:29;;;7682:43;2485:33:22;;;;;7574:18:29;;2485:53:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:22;;;;;;;:::i;:::-;2257:358;2125:490;28163:23:20::1;28189:19:::0;;;:8:::1;:19;::::0;;;;;;;28218:14;;::::1;:23:::0;;-1:-1:-1;;;;;28218:23:20::1;-1:-1:-1::0;;;;;;;;28218:23:20;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;28251:14:::1;::::0;::::1;:23:::0;;;28285:30;;;:22:::1;::::0;::::1;:30:::0;;;;;;:38;;-1:-1:-1;;28285:38:20::1;::::0;;28339:42;;12733:25:29;;;12774:18;;;12767:60;;;;12843:18;;;12836:34;;;28189:19:20;28339:42:::1;::::0;12721:2:29;12706:18;28339:42:20::1;;;;;;;28153:235;2062:570:22::0;27974:414:20;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;1431:187:22:-:0;1094:13:0;:11;:13::i;:::-;1567:44:22::1;1578:13;1593:6;1601:9;1567:10;:44::i;:::-;1431:187:::0;;;:::o;13386:1226:20:-;13549:6;8071:19;;;:8;:19;;;;;:26;13499:9;;-1:-1:-1;;;;;8071:26:20;8050:106;;;;-1:-1:-1;;;8050:106:20;;;;;;;:::i;:::-;983:10:18::1;972:22;::::0;;;:10:::1;:22;::::0;;;;;::::1;;964:57;;;::::0;-1:-1:-1;;;964:57:18;;13083:2:29;964:57:18::1;::::0;::::1;13065:21:29::0;13122:2;13102:18;;;13095:30;-1:-1:-1;;;13141:18:29;;;13134:52;13203:18;;964:57:18::1;12881:346:29::0;964:57:18::1;13571:23:20::2;13597:19:::0;;;:8:::2;:19;::::0;;;;13666:18:::2;::::0;::::2;::::0;:42:::2;::::0;13687:21:::2;::::0;13666:18:::2;;:42;:::i;:::-;13648:15;:60;13627:140;;;::::0;-1:-1:-1;;;13627:140:20;;13434:2:29;13627:140:20::2;::::0;::::2;13416:21:29::0;13473:2;13453:18;;;13446:30;13512:34;13492:18;;;13485:62;-1:-1:-1;;;13563:18:29;;;13556:31;13604:19;;13627:140:20::2;13232:397:29::0;13627:140:20::2;13785:23;::::0;::::2;::::0;-1:-1:-1;;;;;13785:23:20::2;:28:::0;13777:66:::2;;;::::0;-1:-1:-1;;;13777:66:20;;13836:2:29;13777:66:20::2;::::0;::::2;13818:21:29::0;13875:2;13855:18;;;13848:30;-1:-1:-1;;;13894:18:29;;;13887:55;13959:18;;13777:66:20::2;13634:349:29::0;13777:66:20::2;13874:10;13861:9;:23;13853:56;;;::::0;-1:-1:-1;;;13853:56:20;;14190:2:29;13853:56:20::2;::::0;::::2;14172:21:29::0;14229:2;14209:18;;;14202:30;-1:-1:-1;;;14248:18:29;;;14241:50;14308:18;;13853:56:20::2;13988:344:29::0;13853:56:20::2;13927:6:::0;13919:55:::2;;;::::0;-1:-1:-1;;;13919:55:20;;14539:2:29;13919:55:20::2;::::0;::::2;14521:21:29::0;14578:2;14558:18;;;14551:30;-1:-1:-1;;;14597:18:29;;;14590:52;14659:18;;13919:55:20::2;14337:346:29::0;13919:55:20::2;14009:1;13985:7;:20;;;:25;;;;;;;;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;;::::2;;::::0;;::::2;::::0;;::::2;::::0;::::2;;;;::::0;;;14036:12:::2;::::0;-1:-1:-1;;;14036:16:20::2;::::0;-1:-1:-1;;;;;14036:12:20;::::2;;-1:-1:-1::0;14036:16:20::2;:::i;:::-;14062:12;:20:::0;;-1:-1:-1;;14062:20:20::2;;-1:-1:-1::0;;;;;14062:20:20;::::2;;;::::0;;;-1:-1:-1;;14114:29:20::2;14132:11;14114:15;:29;:::i;:::-;14092:51;;14154:19;14176:6;:13;14183:5;-1:-1:-1::0;;;;;14176:13:20::2;-1:-1:-1::0;;;;;14176:13:20::2;;;;;;;;;;;;14154:35;;14217:9;14199:5;:15;;:27;;;;14252:10;14236:5;:13;;;:26;;;;;-1:-1:-1::0;;;;;14236:26:20::2;;;;;-1:-1:-1::0;;;;;14236:26:20::2;;;;;;14293:9;14272:5;:18;;:30;;;;14332:11;14312:5;:17;;:31;;;;14368:6;14353:5;:12;;:21;;;;14413:9;14390:192;14436:5;14455:10;14479:9;14510:1;14526::::0;14541:11:::2;14566:6;14390:192;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;14600:5:20;;13386:1226;-1:-1:-1;;;;;;13386:1226:20:o;1121:116:22:-;1094:13:0;:11;:13::i;:::-;1185:45:22::1;1196:13;1211:6;1227:1;1185:10;:45::i;:::-;1121:116:::0;:::o;25613:256:20:-;1094:13:0;:11;:13::i;:::-;25764:14:20::1;:34:::0;;;;25808:8:::1;:22:::0;25840:8:::1;:22:::0;25613:256::o;12302:745::-;8109:1;8071:19;;;:8;:19;;;;;:26;12393:9;;-1:-1:-1;;;;;8071:26:20;8050:106;;;;-1:-1:-1;;;8050:106:20;;;;;;;:::i;:::-;12418:23:::1;12444:19:::0;;;:8:::1;:19;::::0;;;;;;;12482:23;;::::1;::::0;-1:-1:-1;;;;;12482:23:20::1;:28:::0;12474:66:::1;;;::::0;-1:-1:-1;;;12474:66:20;;13836:2:29;12474:66:20::1;::::0;::::1;13818:21:29::0;13875:2;13855:18;;;13848:30;-1:-1:-1;;;13894:18:29;;;13887:55;13959:18;;12474:66:20::1;13634:349:29::0;12474:66:20::1;12590:18;::::0;::::1;::::0;::::1;;12571:15;:37;;12550:107;;;::::0;-1:-1:-1;;;12550:107:20;;15830:2:29;12550:107:20::1;::::0;::::1;15812:21:29::0;15869:2;15849:18;;;15842:30;15908:25;15888:18;;;15881:53;15951:18;;12550:107:20::1;15628:347:29::0;12550:107:20::1;12675:20;::::0;::::1;::::0;-1:-1:-1;;;12675:20:20;::::1;;;:25:::0;12667:59:::1;;;::::0;-1:-1:-1;;;12667:59:20;;16182:2:29;12667:59:20::1;::::0;::::1;16164:21:29::0;16221:2;16201:18;;;16194:30;-1:-1:-1;;;16240:18:29;;;16233:51;16301:18;;12667:59:20::1;15980:345:29::0;12667:59:20::1;12737:23;::::0;::::1;:52:::0;;-1:-1:-1;;;;;;12737:52:20::1;-1:-1:-1::0;;;;;12737:52:20::1;::::0;;12833:14;;12805:43:::1;::::0;;16504:25:29;;;-1:-1:-1;;;;;12833:14:20;;::::1;16560:2:29::0;16545:18;;16538:60;12805:43:20::1;::::0;16477:18:29;12805:43:20::1;;;;;;;12881:26;::::0;::::1;::::0;12950:14;;13011:19:::1;::::0;::::1;::::0;12978:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;12881:26:20;;::::1;::::0;12918:122:::1;::::0;12950:14:::1;::::0;-1:-1:-1;;;;;;;;13011:19:20;::::1;::::0;::::1;::::0;12978:30:::1;::::0;12995:13;;::::1;::::0;;::::1;::::0;12978:30:::1;:::i;:::-;:52;;;;:::i;:::-;-1:-1:-1::0;;;;;12918:18:20;::::1;::::0;:122;:18:::1;:122::i;:::-;12408:639;;12302:745:::0;;:::o;29682:61::-;1094:13:0;:11;:13::i;:::-;29728:8:20::1;:6;:8::i;7499:128::-:0;7557:7;7611:9;7593:14;;7584:6;:23;;;;:::i;:::-;7583:37;;;;:::i;:::-;7576:44;7499:128;-1:-1:-1;;7499:128:20:o;15810:2249::-;-1:-1:-1;;;;;8285:15:20;;8320:1;8285:15;;;:6;:15;;;;;:23;;;15904:7;;-1:-1:-1;;;;;8285:23:20;8277:67;;;;-1:-1:-1;;;8277:67:20;;17206:2:29;8277:67:20;;;17188:21:29;17245:2;17225:18;;;17218:30;-1:-1:-1;;;17264:18:29;;;17257:47;17321:18;;8277:67:20;17004:341:29;8277:67:20;-1:-1:-1;;;;;15949:15:20;::::1;15927:19;15949:15:::0;;;:6:::1;:15;::::0;;;;;;;15994;;16041:17:::1;::::0;::::1;::::0;16094:19;;;:8:::1;:19:::0;;;;;;;15994:15;;16041:17;16131:15:::1;:29:::0;-1:-1:-1;16123:55:20::1;;;::::0;-1:-1:-1;;;16123:55:20;;17552:2:29;16123:55:20::1;::::0;::::1;17534:21:29::0;17591:2;17571:18;;;17564:30;-1:-1:-1;;;17610:18:29;;;17603:43;17663:18;;16123:55:20::1;17350:337:29::0;16123:55:20::1;16196:14;::::0;::::1;::::0;-1:-1:-1;;;16196:14:20;::::1;-1:-1:-1::0;;;;;16196:14:20::1;:28:::0;16188:65:::1;;;::::0;-1:-1:-1;;;16188:65:20;;17894:2:29;16188:65:20::1;::::0;::::1;17876:21:29::0;17933:2;17913:18;;;17906:30;17972:26;17952:18;;;17945:54;18016:18;;16188:65:20::1;17692:348:29::0;16188:65:20::1;16308:12;::::0;::::1;::::0;16285:36:::1;::::0;;;:22:::1;::::0;::::1;:36;::::0;;;;;::::1;;16284:37;16263:108;;;::::0;-1:-1:-1;;;16263:108:20;;8581:2:29;16263:108:20::1;::::0;::::1;8563:21:29::0;8620:2;8600:18;;;8593:30;-1:-1:-1;;;8639:18:29;;;8632:54;8703:18;;16263:108:20::1;8379:348:29::0;16263:108:20::1;16460:13;::::0;::::1;::::0;16506:18:::1;::::0;::::1;::::0;16565:26:::1;::::0;::::1;::::0;16408:24:::1;::::0;-1:-1:-1;;;;;16460:13:20::1;::::0;16506:18;16606:35;;::::1;16602:656;;;16661:20;16685:1;16661:25:::0;16657:121:::1;;16741:21;::::0;::::1;::::0;16725:38:::1;::::0;;;:15:::1;:38;::::0;;;;;16706:57:::1;::::0;;::::1;:::i;:::-;;;16657:121;-1:-1:-1::0;;;;;16799:21:20;::::1;:10;:21:::0;16791:60:::1;;;::::0;-1:-1:-1;;;16791:60:20;;18247:2:29;16791:60:20::1;::::0;::::1;18229:21:29::0;18286:2;18266:18;;;18259:30;18325:28;18305:18;;;18298:56;18371:18;;16791:60:20::1;18045:350:29::0;16791:60:20::1;16903:35;16918:20:::0;16903:12;:35:::1;:::i;:::-;:39;::::0;16941:1:::1;16903:39;:::i;:::-;16890:9;:52;;16865:136;;;::::0;-1:-1:-1;;;16865:136:20;;18732:2:29;16865:136:20::1;::::0;::::1;18714:21:29::0;18771:2;18751:18;;;18744:30;-1:-1:-1;;;18790:18:29;;;18783:55;18855:18;;16865:136:20::1;18530:349:29::0;16865:136:20::1;16602:656;;;17040:10;-1:-1:-1::0;;;;;17040:21:20;::::1;;17032:56;;;::::0;-1:-1:-1;;;17032:56:20;;19086:2:29;17032:56:20::1;::::0;::::1;19068:21:29::0;19125:2;19105:18;;;19098:30;-1:-1:-1;;;19144:18:29;;;19137:52;19206:18;;17032:56:20::1;18884:346:29::0;17032:56:20::1;17178:10;17140:35;17163:12:::0;17140:20;:35:::1;:::i;:::-;:48;;;;:::i;:::-;17127:9;:61;;17102:145;;;::::0;-1:-1:-1;;;17102:145:20;;18732:2:29;17102:145:20::1;::::0;::::1;18714:21:29::0;18771:2;18751:18;;;18744:30;-1:-1:-1;;;18790:18:29;;;18783:55;18855:18;;17102:145:20::1;18530:349:29::0;17102:145:20::1;-1:-1:-1::0;;;;;17272:21:20;::::1;:10;:21:::0;17268:360:::1;;17309:25;17325:9;17309:25:::0;::::1;:::i;:::-;17348:18;::::0;::::1;:33:::0;;;17309:25;-1:-1:-1;17268:360:20::1;;;17412:20;::::0;::::1;:33:::0;;-1:-1:-1;;;;;;17412:33:20::1;17435:10;17412:33:::0;;::::1;::::0;;;:20:::1;17459:35:::0;;;:23:::1;::::0;::::1;:35;::::0;;;;:48;;17498:9:::1;::::0;17412:20;17459:48:::1;::::0;17498:9;;17459:48:::1;:::i;:::-;::::0;;;-1:-1:-1;17521:33:20::1;::::0;-1:-1:-1;17545:9:20::1;17521:33:::0;::::1;:::i;:::-;17568:26;::::0;::::1;:49:::0;;;17521:33;-1:-1:-1;17268:360:20::1;17678:11:::0;17642:33:::1;17660:15:::0;17642::::1;:33;:::i;:::-;:47;17638:170;;;17719:33;17737:15:::0;17719::::1;:33;:::i;:::-;17766:17;::::0;::::1;:31:::0;;;17705:47;-1:-1:-1;17638:170:20::1;17937:20;::::0;::::1;::::0;18030:12:::1;::::0;::::1;::::0;17823:229:::1;::::0;17846:9;;17823:229:::1;::::0;::::1;::::0;17869:7;;17890;;17911:12;;-1:-1:-1;;;;;17937:20:20;;::::1;::::0;17971;;18005:11;;17823:229:::1;:::i;:::-;;;;;;;;15917:2142;;;;;;;;15810:2249:::0;;:::o;7799:123::-;7854:7;7896:19;7908:6;7896:11;:19::i;:::-;7880:13;7886:6;7880:5;:13::i;:::-;:35;;;;:::i;24923:374::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;25060:35:20;::::1;25043:14;25060:35:::0;;;:21:::1;:35;::::0;;;;;25113:10;25105:43:::1;;;::::0;-1:-1:-1;;;25105:43:20;;20136:2:29;25105:43:20::1;::::0;::::1;20118:21:29::0;20175:2;20155:18;;;20148:30;-1:-1:-1;;;20194:18:29;;;20187:50;20254:18;;25105:43:20::1;19934:344:29::0;25105:43:20::1;-1:-1:-1::0;;;;;25158:35:20;::::1;25196:1;25158:35:::0;;;:21:::1;:35;::::0;;;;:39;25180:12;;25253:37:::1;::::0;25272:9;25283:6;25253:18:::1;:37::i;26463:324::-:0;1094:13:0;:11;:13::i;:::-;26611:1:20::1;26594:14;:18;26586:69;;;::::0;-1:-1:-1;;;26586:69:20;;20485:2:29;26586:69:20::1;::::0;::::1;20467:21:29::0;20524:2;20504:18;;;20497:30;20563:34;20543:18;;;20536:62;-1:-1:-1;;;20614:18:29;;;20607:36;20660:19;;26586:69:20::1;20283:402:29::0;26586:69:20::1;26665:30;::::0;;;:15:::1;:30;::::0;;;;;;;;:47;;;26728:52;;8906:25:29;;;8947:18;;;8940:34;;;26728:52:20::1;::::0;8879:18:29;26728:52:20::1;;;;;;;26463:324:::0;;:::o;26076:123::-;1094:13:0;:11;:13::i;:::-;26160::20::1;:32:::0;26076:123::o;18616:1321::-;-1:-1:-1;;;;;8285:15:20;;18714:7;8285:15;;;:6;:15;;;;;:23;;;18688:7;;-1:-1:-1;;;;;8285:23:20;8277:67;;;;-1:-1:-1;;;8277:67:20;;17206:2:29;8277:67:20;;;17188:21:29;17245:2;17225:18;;;17218:30;-1:-1:-1;;;17264:18:29;;;17257:47;17321:18;;8277:67:20;17004:341:29;8277:67:20;-1:-1:-1;;;;;18759:15:20;::::1;18737:19;18759:15:::0;;;:6:::1;:15;::::0;;;;;;;18804;;18855:19;;;:8:::1;:19:::0;;;;;;18759:15;;18737:19;18934:21:::1;18766:7:::0;18934:12:::1;:21::i;:::-;-1:-1:-1::0;;;;;18970:38:20;::::1;19011:1;18970:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;;18885:70;;-1:-1:-1;18885:70:20;-1:-1:-1;18970:42:20;18966:152:::1;;-1:-1:-1::0;;;;;19065:38:20;::::1;19106:1;19065:38:::0;;;:23:::1;::::0;::::1;:38;::::0;;;;:42;18966:152:::1;19154:21;::::0;::::1;::::0;19128:23:::1;19261:20:::0;;;19257:76:::1;;19321:1;19297:7;:20;;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;19257:76;19342:32;19361:13:::0;19342:32;::::1;:::i;:::-;19384:21;::::0;::::1;:39:::0;;;19495:26:::1;::::0;::::1;::::0;19474:18:::1;::::0;::::1;::::0;19342:32;;-1:-1:-1;19474:47:20::1;::::0;::::1;:::i;:::-;19455:15;:66;;19434:141;;;::::0;-1:-1:-1;;;19434:141:20;;21371:2:29;19434:141:20::1;::::0;::::1;21353:21:29::0;21410:2;21390:18;;;21383:30;21449;21429:18;;;21422:58;21497:18;;19434:141:20::1;21169:352:29::0;19434:141:20::1;19587:9;19602:13;-1:-1:-1::0;;;;;19602:18:20::1;19628:13;19602:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19586:60;;;19664:4;19656:37;;;::::0;-1:-1:-1;;;19656:37:20;;21938:2:29;19656:37:20::1;::::0;::::1;21920:21:29::0;21977:2;21957:18;;;21950:30;-1:-1:-1;;;21996:18:29;;;21989:50;22056:18;;19656:37:20::1;21736:344:29::0;19656:37:20::1;19709:54;::::0;;-1:-1:-1;;;;;22275:39:29;;22257:58;;-1:-1:-1;;;;;22351:32:29;;22346:2;22331:18;;22324:60;19738:9:20;;19709:54:::1;::::0;22230:18:29;19709:54:20::1;;;;;;;19778:23;::::0;::::1;::::0;-1:-1:-1;;;;;19778:23:20::1;:28:::0;:62;::::1;;;-1:-1:-1::0;19827:13:20::1;::::0;::::1;::::0;-1:-1:-1;;;;;19810:30:20;;::::1;19827:13:::0;::::1;19810:30;19778:62;19774:126;;;19856:33;19872:7;19881;19856:15;:33::i;:::-;-1:-1:-1::0;19917:13:20;;18616:1321;-1:-1:-1;;;;;;;;18616:1321:20:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;22597:2:29;2161:73:0::1;::::0;::::1;22579:21:29::0;22636:2;22616:18;;;22609:30;22675:34;22655:18;;;22648:62;-1:-1:-1;;;22726:18:29;;;22719:36;22772:19;;2161:73:0::1;22395:402:29::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;7273:136:20:-:0;7325:7;7351:51;7360:8;;7392:9;7380:8;;7371:6;:17;;;;:::i;:::-;7370:31;;;;:::i;:::-;7351:8;:51::i;1767:106:1:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;23004:2:29;1828:38:1;;;22986:21:29;23043:2;23023:18;;;23016:30;-1:-1:-1;;;23062:18:29;;;23055:46;23118:18;;1828:38:1;22802:340:29;974:241:6;1139:68;;-1:-1:-1;;;;;24057:15:29;;;1139:68:6;;;24039:34:29;24109:15;;24089:18;;;24082:43;24141:18;;;24134:34;;;1112:96:6;;1132:5;;-1:-1:-1;;;1162:27:6;23974:18:29;;1139:68:6;;;;-1:-1:-1;;1139:68:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:6;-1:-1:-1;;;;;;1139:68:6;;;;;;;;;;1112:19;:96::i;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;24381:2:29;1414:68:0;;;24363:21:29;;;24400:18;;;24393:30;24459:34;24439:18;;;24432:62;24511:18;;1414:68:0;24179:356:29;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:8::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;752:32:29;;;734:51;;722:2;707:18;2521:22:1::1;;;;;;;2433:117::o:0;:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;628:390:22:-;-1:-1:-1;;;;;763:20:22;;755:68;;;;-1:-1:-1;;;755:68:22;;24742:2:29;755:68:22;;;24724:21:29;24781:2;24761:18;;;24754:30;24820:34;24800:18;;;24793:62;-1:-1:-1;;;24871:18:29;;;24864:33;24914:19;;755:68:22;24540:399:29;755:68:22;891:1;854:22;;;:7;:22;;;;;:25;-1:-1:-1;;;;;854:25:22;:39;833:124;;;;-1:-1:-1;;;833:124:22;;25146:2:29;833:124:22;;;25128:21:29;25185:2;25165:18;;;25158:30;25224:34;25204:18;;;25197:62;-1:-1:-1;;;25275:18:29;;;25268:36;25321:19;;833:124:22;24944:402:29;833:124:22;967:44;;;;;;;;-1:-1:-1;;;;;967:44:22;;;;;;;;;;;;;;;-1:-1:-1;967:22:22;;;:7;:22;;;;;;;;:44;;:22;;:44;;:::i;763:205:6:-;902:58;;-1:-1:-1;;;;;25543:32:29;;902:58:6;;;25525:51:29;25592:18;;;25585:34;;;875:86:6;;895:5;;-1:-1:-1;;;925:23:6;25498:18:29;;902:58:6;25351:274:29;2186:115:1;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:8::0;;640:96;19943:3438:20;-1:-1:-1;;;;;20081:15:20;;;20027:7;20081:15;;;:6;:15;;;;;;;;20141;;20132:25;;:8;:25;;;;;;;20192:23;;;;;20243:13;;;20289:18;;;;20348:26;;;;20406:12;;;;20027:7;;;;20081:15;;20132:25;;20192:23;;;-1:-1:-1;;;;;20243:13:20;;;;20473:35;20348:26;20289:18;20473:35;:::i;:::-;20449:5;:21;;;:59;20428:129;;;;-1:-1:-1;;;20428:129:20;;25832:2:29;20428:129:20;;;25814:21:29;25871:2;25851:18;;;25844:30;25910:25;25890:18;;;25883:53;25953:18;;20428:129:20;25630:347:29;20428:129:20;21038:14;;;;21079;;;;20568:15;;-1:-1:-1;;;21038:14:20;;-1:-1:-1;;;;;21038:14:20;;21108:20;;21104:753;;21206:7;-1:-1:-1;;;;;21196:17:20;:6;-1:-1:-1;;;;;21196:17:20;;:42;;;;;21227:11;21217:6;:21;21196:42;21183:55;;21104:753;;;21259:30;;;;:22;;;:30;;;;;;;;21255:602;;;21357:5;21344:18;;21255:602;;;-1:-1:-1;;;;;21383:20:20;;;21379:478;;-1:-1:-1;;;;;21498:23:20;;;;;;:6;:23;;;;;:31;;;-1:-1:-1;;;;;21487:42:20;;;21498:31;;21487:42;:107;;;;-1:-1:-1;;;;;;21564:23:20;;;;;;:6;:23;;;;;:30;;;21549:45;;21458:136;;21379:478;;;21708:5;:17;;;21689:15;:36;;21664:120;;;;-1:-1:-1;;;21664:120:20;;26184:2:29;21664:120:20;;;26166:21:29;26223:2;26203:18;;;26196:30;26262:27;26242:18;;;26235:55;26307:18;;21664:120:20;25982:349:29;21664:120:20;21826:20;21811:12;:35;21798:48;;21379:478;21921:21;21952;21988:10;21984:771;;;22093:35;22108:20;22093:12;:35;:::i;:::-;22077:51;;22158:7;22142:23;;21984:771;;;22186:24;;22182:573;;22339:10;22315:35;;;;:23;;;:35;;;;;;22311:39;;:1;:39;:::i;:::-;22295:55;;22380:10;22364:26;;22429:1;22413:13;:17;22405:64;;;;-1:-1:-1;;;22405:64:20;;26538:2:29;22405:64:20;;;26520:21:29;26577:2;26557:18;;;26550:30;26616:34;26596:18;;;26589:62;-1:-1:-1;;;26667:18:29;;;26660:32;26709:19;;22405:64:20;26336:398:29;22405:64:20;22182:573;;;-1:-1:-1;;1247:7:0;1273:6;22695:12:20;;-1:-1:-1;;;;;1273:6:0;22182:573:20;23060:20;;;;-1:-1:-1;;;;;23060:20:20;23046:10;:34;23042:285;;23115:20;23100:12;:35;23096:221;;;23173:35;23188:20;23173:12;:35;:::i;:::-;23155:54;;;;:::i;:::-;;;23096:221;;;23266:35;23289:12;23266:20;:35;:::i;:::-;23248:54;;;;:::i;:::-;;;23096:221;23345:13;23360;;-1:-1:-1;19943:3438:20;-1:-1:-1;;;;;;;;;;;;19943:3438:20:o;23387:495::-;-1:-1:-1;;;;;23493:15:20;;23471:19;23493:15;;;:6;:15;;;;;;;;;23536:13;;;;23581:15;;23564:42;;16504:25:29;;;-1:-1:-1;;;;;23536:13:20;;;16545:18:29;;;16538:60;;;23493:15:20;;23564:42;;16477:18:29;23564:42:20;;;;;;;23617:23;;;:33;;-1:-1:-1;;;;;;23617:33:20;-1:-1:-1;;;;;23617:33:20;;;;;;;;;;23714:32;;;;-1:-1:-1;23683:26:20;;;-1:-1:-1;;;;;23683:26:20;-1:-1:-1;23661:49:20;;;:21;:49;;;;;:85;;-1:-1:-1;;;23714:32:20;;;;;;;23661:49;:85;;23714:32;;23661:85;:::i;:::-;;;;-1:-1:-1;;23779:26:20;;;;23861:13;;;;23844:14;;;;-1:-1:-1;;;;;23779:26:20;;;;23816:59;;23835:7;;23844:30;;23861:13;;;-1:-1:-1;;;;;23861:13:20;;23844:30;:::i;23816:59::-;23461:421;;;23387:495;;:::o;413:104:9:-;471:7;501:1;497;:5;:13;;509:1;497:13;;;505:1;497:13;490:20;413:104;-1:-1:-1;;;413:104:9:o;3747:706:6:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:6;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:6;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:6;;26941:2:29;4351:85:6;;;26923:21:29;26980:2;26960:18;;;26953:30;27019:34;26999:18;;;26992:62;-1:-1:-1;;;27070:18:29;;;27063:40;27120:19;;4351:85:6;26739:406:29;1945:106:1;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;27352:2:29;2003:41:1;;;27334:21:29;27391:2;27371:18;;;27364:30;-1:-1:-1;;;27410:18:29;;;27403:50;27470:18;;2003:41:1;27150:344:29;3873:223:7;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:7:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:7;;27701:2:29;5149:81:7;;;27683:21:29;27740:2;27720:18;;;27713:30;27779:34;27759:18;;;27752:62;-1:-1:-1;;;27830:18:29;;;27823:36;27876:19;;5149:81:7;27499:402:29;5149:81:7;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:7;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:7:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:7;;;7908:60;;;;-1:-1:-1;;;7908:60:7;;28650:2:29;7908:60:7;;;28632:21:29;28689:2;28669:18;;;28662:30;28728:31;28708:18;;;28701:59;28777:18;;7908:60:7;28448:353:29;7908:60:7;-1:-1:-1;8003:10:7;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:7;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:316:29;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:29;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:29;305:18;;;292:32;;14:316;-1:-1:-1;14:316:29:o;335:248::-;403:6;411;464:2;452:9;443:7;439:23;435:32;432:52;;;480:1;477;470:12;432:52;-1:-1:-1;;503:23:29;;;573:2;558:18;;;545:32;;-1:-1:-1;335:248:29:o;796:180::-;855:6;908:2;896:9;887:7;883:23;879:32;876:52;;;924:1;921;914:12;876:52;-1:-1:-1;947:23:29;;796:180;-1:-1:-1;796:180:29:o;1355:173::-;1423:20;;-1:-1:-1;;;;;1472:31:29;;1462:42;;1452:70;;1518:1;1515;1508:12;1452:70;1355:173;;;:::o;1533:541::-;1637:6;1645;1653;1661;1669;1677;1730:3;1718:9;1709:7;1705:23;1701:33;1698:53;;;1747:1;1744;1737:12;1698:53;1783:9;1770:23;1760:33;;1812:38;1846:2;1835:9;1831:18;1812:38;:::i;:::-;1802:48;;1869:38;1903:2;1892:9;1888:18;1869:38;:::i;:::-;1859:48;;1926:38;1960:2;1949:9;1945:18;1926:38;:::i;:::-;1916:48;;2011:3;2000:9;1996:19;1983:33;1973:43;;2063:3;2052:9;2048:19;2035:33;2025:43;;1533:541;;;;;;;;:::o;2699:186::-;2758:6;2811:2;2799:9;2790:7;2786:23;2782:32;2779:52;;;2827:1;2824;2817:12;2779:52;2850:29;2869:9;2850:29;:::i;2890:292::-;2948:6;3001:2;2989:9;2980:7;2976:23;2972:32;2969:52;;;3017:1;3014;3007:12;2969:52;3056:9;3043:23;-1:-1:-1;;;;;3099:5:29;3095:38;3088:5;3085:49;3075:77;;3148:1;3145;3138:12;3927:391;4013:6;4021;4029;4037;4090:3;4078:9;4069:7;4065:23;4061:33;4058:53;;;4107:1;4104;4097:12;4058:53;4143:9;4130:23;4120:33;;4200:2;4189:9;4185:18;4172:32;4162:42;;4251:2;4240:9;4236:18;4223:32;4213:42;;4274:38;4308:2;4297:9;4293:18;4274:38;:::i;:::-;4264:48;;3927:391;;;;;;;:::o;4323:328::-;4400:6;4408;4416;4469:2;4457:9;4448:7;4444:23;4440:32;4437:52;;;4485:1;4482;4475:12;4437:52;4521:9;4508:23;4498:33;;4550:38;4584:2;4573:9;4569:18;4550:38;:::i;:::-;4540:48;;4607:38;4641:2;4630:9;4626:18;4607:38;:::i;:::-;4597:48;;4323:328;;;;;:::o;6266:260::-;6334:6;6342;6395:2;6383:9;6374:7;6370:23;6366:32;6363:52;;;6411:1;6408;6401:12;6363:52;6434:29;6453:9;6434:29;:::i;:::-;6424:39;;6482:38;6516:2;6505:9;6501:18;6482:38;:::i;:::-;6472:48;;6266:260;;;;;:::o;6663:356::-;6865:2;6847:21;;;6884:18;;;6877:30;6943:34;6938:2;6923:18;;6916:62;7010:2;6995:18;;6663:356::o;7024:398::-;7226:2;7208:21;;;7265:2;7245:18;;;7238:30;7304:34;7299:2;7284:18;;7277:62;-1:-1:-1;;;7370:2:29;7355:18;;7348:32;7412:3;7397:19;;7024:398::o;7736:277::-;7803:6;7856:2;7844:9;7835:7;7831:23;7827:32;7824:52;;;7872:1;7869;7862:12;7824:52;7904:9;7898:16;7957:5;7950:13;7943:21;7936:5;7933:32;7923:60;;7979:1;7976;7969:12;8985:343;9187:2;9169:21;;;9226:2;9206:18;;;9199:30;-1:-1:-1;;;9260:2:29;9245:18;;9238:49;9319:2;9304:18;;8985:343::o;10754:127::-;10815:10;10810:3;10806:20;10803:1;10796:31;10846:4;10843:1;10836:15;10870:4;10867:1;10860:15;10886:128;10926:3;10957:1;10953:6;10950:1;10947:13;10944:39;;;10963:18;;:::i;:::-;-1:-1:-1;10999:9:29;;10886:128::o;11019:184::-;11089:6;11142:2;11130:9;11121:7;11117:23;11113:32;11110:52;;;11158:1;11155;11148:12;11110:52;-1:-1:-1;11181:16:29;;11019:184;-1:-1:-1;11019:184:29:o;11559:244::-;11598:3;-1:-1:-1;;;;;11679:2:29;11676:1;11672:10;11709:2;11706:1;11702:10;11740:3;11736:2;11732:12;11727:3;11724:21;11721:47;;;11748:18;;:::i;:::-;11784:13;;11559:244;-1:-1:-1;;;;11559:244:29:o;14688:228::-;14727:3;14755:10;14792:2;14789:1;14785:10;14822:2;14819:1;14815:10;14853:3;14849:2;14845:12;14840:3;14837:21;14834:47;;;14861:18;;:::i;14921:702::-;-1:-1:-1;;;;;15260:39:29;;;;15242:58;;-1:-1:-1;;;;;15374:15:29;;;15369:2;15354:18;;15347:43;15421:2;15406:18;;15399:34;;;;15469:15;;;;15464:2;15449:18;;15442:43;15516:3;15501:19;;15494:35;;;;15327:3;15545:19;;15538:35;;;;15604:3;15589:19;;15582:35;15229:3;15214:19;;14921:702::o;16609:168::-;16649:7;16715:1;16711;16707:6;16703:14;16700:1;16697:21;16692:1;16685:9;16678:17;16674:45;16671:71;;;16722:18;;:::i;:::-;-1:-1:-1;16762:9:29;;16609:168::o;16782:217::-;16822:1;16848;16838:132;;16892:10;16887:3;16883:20;16880:1;16873:31;16927:4;16924:1;16917:15;16955:4;16952:1;16945:15;16838:132;-1:-1:-1;16984:9:29;;16782:217::o;18400:125::-;18440:4;18468:1;18465;18462:8;18459:34;;;18473:18;;:::i;:::-;-1:-1:-1;18510:9:29;;18400:125::o;20943:221::-;20982:4;21011:10;21071;;;;21041;;21093:12;;;21090:38;;;21108:18;;:::i;:::-;21145:13;;20943:221;-1:-1:-1;;;20943:221:29:o;27906:258::-;27978:1;27988:113;28002:6;27999:1;27996:13;27988:113;;;28078:11;;;28072:18;28059:11;;;28052:39;28024:2;28017:10;27988:113;;;28119:6;28116:1;28113:13;28110:48;;;-1:-1:-1;;28154:1:29;28136:16;;28129:27;27906:258::o;28169:274::-;28298:3;28336:6;28330:13;28352:53;28398:6;28393:3;28386:4;28378:6;28374:17;28352:53;:::i;:::-;28421:16;;;;;28169:274;-1:-1:-1;;28169:274:29:o;28806:383::-;28955:2;28944:9;28937:21;28918:4;28987:6;28981:13;29030:6;29025:2;29014:9;29010:18;29003:34;29046:66;29105:6;29100:2;29089:9;29085:18;29080:2;29072:6;29068:15;29046:66;:::i;:::-;29173:2;29152:15;-1:-1:-1;;29148:29:29;29133:45;;;;29180:2;29129:54;;28806:383;-1:-1:-1;;28806:383:29:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "ClaimMade(bytes32,uint96,address,uint256,address,uint256,uint256,bytes32)": {
        "notice": "Emitted when a claim or a counter-claim (challenge) has been made. .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
      },
      "ClaimStakeWithdrawn(uint96,bytes32,address)": {
        "notice": "Emitted when staked native tokens tied to a claim have been withdrawn. This can only happen when the claim has been resolved and the caller of :sol:func:`withdraw` is allowed to withdraw their stake. .. seealso:: :sol:func:`withdraw`"
      },
      "DepositWithdrawn(bytes32,address)": {
        "notice": "Emitted when the token deposit for request ``requestId`` has been transferred to the ``receiver``. This can happen in two cases:  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`  * a claim related to the request has been resolved successfully in favor of the claimer .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
      },
      "FillInvalidatedResolved(bytes32,bytes32)": {
        "notice": "Emitted when an invalidated fill has been resolved. .. seealso:: :sol:func:`invalidateFill`"
      },
      "LpAdded(address)": {
        "notice": "Emitted when a liquidity provider has been added to the set of allowed liquidity providers. .. seealso:: :sol:func:`addAllowedLp`"
      },
      "LpRemoved(address)": {
        "notice": "Emitted when a liquidity provider has been removed from the set of allowed liquidity providers. .. seealso:: :sol:func:`removeAllowedLp`"
      },
      "RequestCreated(bytes32,uint256,address,address,address,uint256,uint96,uint32)": {
        "notice": "Emitted when a new request has been created. .. seealso:: :sol:func:`createRequest`"
      },
      "RequestResolved(bytes32,address,bytes32)": {
        "notice": "Emitted when a request has been resolved via L1 resolution. .. seealso:: :sol:func:`resolveRequest`"
      }
    },
    "kind": "dev",
    "methods": {
      "CLAIM_ID_WITHDRAWN_EXPIRED()": {
        "notice": "withdrawClaimId is set to this value when an expired request gets withdrawn by the sender"
      },
      "MAX_VALIDITY_PERIOD()": {
        "notice": "The maximum validity period of a request."
      },
      "MIN_VALIDITY_PERIOD()": {
        "notice": "The minimum validity period of a request."
      },
      "addAllowedLp(address)": {
        "notice": "Add a liquidity provider to the set of allowed liquidity providers. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLp": "The liquidity provider."
        }
      },
      "addCaller(address)": {
        "notice": "Allow calls from an address on the same chain.",
        "params": {
          "caller": "The caller."
        }
      },
      "addCaller(uint256,address,address)": {
        "notice": "Allow calls from an address on another chain.",
        "params": {
          "caller": "The caller.",
          "callerChainId": "The caller's chain ID.",
          "messenger": "The messenger."
        }
      },
      "allowedLps(address)": {
        "notice": "The set of liquidity providers that are added to the whitelist."
      },
      "callers(uint256,uint256)": {
        "notice": "Maps caller chain IDs to tuples [caller, messenger]. For same-chain calls, the messenger address is 0x0."
      },
      "challengeClaim(uint96)": {
        "notice": "Challenge an existing claim. The claim must still be valid at call time. This function implements one round of the challenge game. The original claimer is allowed to call this function only after someone else made a challenge, i.e. every second round. However, once the original claimer counter-challenges, anyone can join the game and make another challenge. The caller must provide enough native tokens as their stake. For the original claimer, the minimum stake is ``challengerStakeTotal - claimerStake + claimStake``. For challengers, the minimum stake is ``claimerStake - challengerStakeTotal + 1``. An example (time flows downwards, claimStake = 10)::   claimRequest() by Max [stakes 10]   challengeClaim() by Alice [stakes 11]   challengeClaim() by Max [stakes 11]   challengeClaim() by Bob [stakes 16] In this example, if Max didn't want to lose the challenge game to Alice and Bob, he would have to challenge with a stake of at least 16.",
        "params": {
          "claimId": "The claim ID."
        }
      },
      "challengePeriodExtension()": {
        "notice": "The period by which the termination time of a claim is extended after each round of the challenge game. This period should allow enough time for the other parties to counter-challenge. .. note::    The claim's termination time is extended only if it is less than the    extension time. Note that in the first challenge round, i.e. the round initiated by the first challenger, the termination time is extended additionally by the finality period of the target chain. This is done to allow for L1 resolution."
      },
      "claimPeriod()": {
        "notice": "The period for which the claim is valid."
      },
      "claimRequest(bytes32,bytes32)": {
        "notice": "Claim that a request was filled by the caller. The request must still be valid at call time. The caller must provide the ``claimStake`` amount of source rollup's native token.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "ID of the request."
        },
        "returns": {
          "_0": "The claim ID."
        }
      },
      "claimRequestExtension()": {
        "notice": "The additional time given to claim a request. This value is added to the validity period of a request."
      },
      "claimStake()": {
        "notice": "The minimum amount of source chain's native token that the claimer needs to provide when making a claim, as well in each round of the challenge game."
      },
      "claims(uint96)": {
        "notice": "Maps claim IDs to claims."
      },
      "collectedProtocolFees(address)": {
        "notice": "Maps ERC20 token addresses to related token amounts that belong to the protocol."
      },
      "constructor": {
        "notice": "Constructor.",
        "params": {
          "_challengePeriodExtension": "Challenge period extension, in seconds.",
          "_claimPeriod": "Claim period, in seconds.",
          "_claimRequestExtension": "Extension to claim a request after validity period ends.",
          "_claimStake": "Claim stake amount."
        }
      },
      "createRequest(uint256,address,address,address,uint256,uint256)": {
        "notice": "Create a new transfer request.",
        "params": {
          "amount": "Amount of tokens to transfer. Does not include fees.",
          "sourceTokenAddress": "Address of the token contract on the source chain.",
          "targetAddress": "Recipient address on the target chain.",
          "targetChainId": "ID of the target chain.",
          "targetTokenAddress": "Address of the token contract on the target chain.",
          "validityPeriod": "The number of seconds the request is to be considered valid.                       Once its validity period has elapsed, the request cannot be claimed                       anymore and will eventually expire, allowing the request submitter                       to withdraw the deposited tokens if there are no active claims."
        },
        "returns": {
          "_0": "ID of the newly created request."
        }
      },
      "currentNonce()": {
        "notice": "A counter used to generate request and claim IDs. The variable holds the most recently used nonce and must be incremented to get the next nonce"
      },
      "finalityPeriods(uint256)": {
        "notice": "Maps target rollup chain IDs to finality periods. Finality periods are in seconds."
      },
      "invalidateFill(bytes32,bytes32,uint256)": {
        "notice": "Mark the fill identified by ``requestId`` and ``fillId`` as invalid. .. note::     This function is a restricted call function. Only callable by the added caller.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "The request ID.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "isInvalidFill(bytes32,bytes32)": {
        "notice": "Returns whether a fill is invalidated or not Calling invalidateFill() will set this boolean to true, marking that the ``fillId`` for the corresponding ``requestId`` was invalidated. Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId] to false. .. seealso:: :sol:func:`invalidateFill` .. seealso:: :sol:func:`resolveRequest`",
        "params": {
          "fillId": "The fill ID",
          "requestId": "The request ID"
        },
        "returns": {
          "_0": "Whether the fill ID is invalid for the given request ID"
        }
      },
      "isWithdrawn(bytes32)": {
        "notice": "Returns whether a request's deposit was withdrawn or not This can be true in two cases: 1. The deposit was withdrawn after the request was claimed and filled. 2. The submitter withdrew the deposit after the request's expiry. .. seealso:: :sol:func:`withdraw` .. seealso:: :sol:func:`withdrawExpiredRequest`",
        "params": {
          "requestId": "The request ID"
        },
        "returns": {
          "_0": "Whether the deposit corresponding to the given request ID was withdrawn"
        }
      },
      "lpFee(uint256)": {
        "notice": "Compute the liquidy provider fee that needs to be paid for a given transfer amount."
      },
      "lpFeePPM()": {
        "notice": "Liquidity provider fee percentage, expressed in ppm (parts per million)."
      },
      "minLpFee()": {
        "notice": "The minimum fee, denominated in transfer token, paid to the liquidity provider."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "notice": "Pauses the contract. Once the contract is paused, it cannot be used to create new requests anymore. Withdrawing deposited funds and claim stakes still works, though. .. note:: This function can only be called when the contract is not paused. .. note:: This function can only be called by the contract owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "protocolFee(uint256)": {
        "notice": "Compute the protocol fee that needs to be paid for a given transfer amount."
      },
      "protocolFeePPM()": {
        "notice": "Protocol fee percentage, expressed in ppm (parts per million)."
      },
      "removeAllowedLp(address)": {
        "notice": "Remove a liquidity provider from the set of allowed liquidity providers. .. note:: This function can only be called by the contract owner.",
        "params": {
          "oldLp": "The liquidity provider."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requests(bytes32)": {
        "notice": "Maps request IDs to requests."
      },
      "resolveRequest(bytes32,bytes32,uint256,address)": {
        "notice": "Mark the request identified by ``requestId`` as filled by ``filler``. .. note::     This function is a restricted call function. Only callable by the added caller.",
        "params": {
          "fillId": "The fill ID.",
          "filler": "The address that filled the request.",
          "requestId": "The request ID.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "setFinalityPeriod(uint256,uint256)": {
        "notice": "Set the finality period for the given target chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "finalityPeriod": "Finality period in seconds.",
          "targetChainId": "The target chain ID."
        }
      },
      "totalFee(uint256)": {
        "notice": "Compute the total fee that needs to be paid for a given transfer amount. The total fee is the sum of the liquidity provider fee and the protocol fee."
      },
      "transferLimit()": {
        "notice": "The maximum amount of tokens that can be transferred in a single request."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "notice": "Unpauses the contract. Once the contract is unpaused, it can be used normally. .. note:: This function can only be called when the contract is paused. .. note:: This function can only be called by the contract owner."
      },
      "updateFeeData(uint256,uint256,uint256)": {
        "notice": "Update fee parameters. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLpFeePPM": "The new value for ``lpFeePPM``.",
          "newMinLpFee": "The new value for ``minLpFee``.",
          "newProtocolFeePPM": "The new value for ``protocolFeePPM``."
        }
      },
      "updateTransferLimit(uint256)": {
        "notice": "Update the transfer amount limit. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newTransferLimit": "The new value for ``transferLimit``."
        }
      },
      "withdraw(uint96)": {
        "notice": "Withdraw the deposit that the request submitter left with the contract, as well as the staked native tokens associated with the claim. In case the caller of this function is a challenger that won the game, they will only get their staked native tokens plus the reward in the form of full (sole challenger) or partial (multiple challengers) amount of native tokens staked by the dishonest claimer.",
        "params": {
          "claimId": "The claim ID."
        },
        "returns": {
          "_0": "The address of the deposit receiver."
        }
      },
      "withdrawExpiredRequest(bytes32)": {
        "notice": "Withdraw funds deposited with an expired request. No claims must be active for the request.",
        "params": {
          "requestId": "ID of the expired request."
        }
      },
      "withdrawProtocolFees(address,address)": {
        "notice": "Withdraw protocol fees collected by the contract. Protocol fees are paid in token transferred. .. note:: This function can only be called by the contract owner.",
        "params": {
          "recipient": "The address the fees should be sent to.",
          "tokenAddress": "The address of the token contract."
        }
      }
    },
    "notice": "The request manager. This contract is responsible for keeping track of transfer requests, implementing the rules of the challenge game and holding deposited tokens until they are withdrawn. The information passed by L1 resolution will be stored with the respective requests. It is the only contract that agents need to interact with on the source chain. .. note::   The functions resolveRequest and invalidateFill can only be called by   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract.",
    "version": 1
  },
  "offset": [
    1141,
    30081
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC2CD98 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xCF7B287F GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE7AAD5C4 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE7AAD5C4 EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xEA628898 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0xEB321173 EQ PUSH2 0x95D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0xF7D64CEC EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xF9432517 EQ PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF7B287F EQ PUSH2 0x896 JUMPI DUP1 PUSH4 0xD137920B EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0xD762A37B EQ PUSH2 0x8D6 JUMPI DUP1 PUSH4 0xDEE4DEA0 EQ PUSH2 0x8F6 JUMPI DUP1 PUSH4 0xE2653EEB EQ PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D866985 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x9D866985 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0x9E375226 EQ PUSH2 0x7EE JUMPI DUP1 PUSH4 0xA032B5F4 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0xADB610A3 EQ PUSH2 0x83E JUMPI DUP1 PUSH4 0xB4D1D27A EQ PUSH2 0x863 JUMPI DUP1 PUSH4 0xCEA74EDF EQ PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DC2CD98 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0x83D208C3 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0x96171D05 EQ PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x743C151A EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x747293FB EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x78DA194B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x79650559 EQ PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x5B3A6EF2 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x5D5AA11B EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x6BC6C8D1 EQ PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F4212B8 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x2F4212B8 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x2F92F009 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x30A08CBC EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x31E08F7A EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x3993B6ED EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x3B046F09 EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FC4C37 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xE19A1C6 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE3A918C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x1489F8D2 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x1D18ADC5 EQ PUSH2 0x31F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x9E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x708 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E86 JUMP JUMPDEST PUSH2 0xCBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2E2F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE5 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE5 JUMP JUMPDEST PUSH2 0x11D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48B PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x2F00 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP7 SWAP4 SWAP6 SWAP3 SWAP1 SWAP5 AND SWAP4 SWAP3 SWAP1 SWAP2 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x2C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x1229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F29 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x2EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x54F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE5 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE5 JUMP JUMPDEST PUSH2 0x17BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x17D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x17E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x1A00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH3 0x2A300 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x778 PUSH2 0x6EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP7 SWAP4 DUP6 AND SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH5 0x100000000 DUP5 DIV DUP2 AND SWAP6 PUSH1 0x1 PUSH1 0x80 SHL DUP6 DIV DUP3 AND SWAP6 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP6 DIV SWAP1 SWAP4 AND SWAP4 SWAP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 DUP12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND DUP2 MSTORE SWAP11 DUP13 AND PUSH1 0x20 DUP13 ADD MSTORE DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 AND PUSH1 0xA0 DUP10 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xC0 DUP9 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xE0 DUP7 ADD MSTORE AND PUSH2 0x100 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x160 ADD PUSH2 0x2C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x809 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x839 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x1A10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x5A9 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x871 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F00 JUMP JUMPDEST PUSH2 0x1A34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x891 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x1ECB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x8B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA4 JUMP JUMPDEST PUSH2 0x1EE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x8D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x1F74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x8F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x202A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x911 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F00 JUMP JUMPDEST PUSH2 0x2037 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x9AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE5 JUMP JUMPDEST PUSH2 0x2307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x9CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x237D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0xA3E JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x304E JUMP JUMPDEST PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x5571B83C623961FB42D39CE6D6D2092153ACE66C008E2DC2472EC6D2E8FAD045 SWAP1 PUSH2 0xC28 SWAP1 DUP9 SWAP1 DUP9 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x3070 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC9 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xD26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x708 DUP3 LT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F2073686F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH3 0x2A300 DUP3 GT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0xA SLOAD DUP4 GT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473207472616E73666572206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST DUP6 PUSH1 0x0 PUSH2 0xE29 DUP6 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE36 DUP7 PUSH2 0x1A10 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE43 DUP4 DUP9 PUSH2 0x30B3 JUMP JUMPDEST PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x30CB JUMP JUMPDEST LT ISZERO PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF21 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH2 0x30E4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH2 0x100 MUL PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CHAINID PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP16 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP15 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xA0 DUP6 SWAP1 SHL AND PUSH1 0xA8 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x94 ADD DUP2 MSTORE PUSH1 0xB4 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP12 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP13 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP9 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP8 TIMESTAMP PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x4 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x5CB181DE12515EAC47130902B874F42CA463496F8F42AD3B13431E7A223740FE DUP15 DUP15 DUP15 DUP15 DUP15 DUP10 DUP16 TIMESTAMP PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 DUP7 AND DUP8 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 LOG2 PUSH2 0x115C CALLER ADDRESS DUP7 PUSH2 0x1140 DUP10 DUP15 PUSH2 0x30B3 JUMP JUMPDEST PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 SWAP2 SWAP1 PUSH2 0x23EC JUMP JUMPDEST POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x371FC559C30F70424413FED6BF7E57DC939651331ABAD5C970A8EA0921C80B2E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x11D8 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4E774C97F73F4BEA034579E4224498D7D9B3A4109EAA70ED3D85C97A5855F198 SWAP2 ADD PUSH2 0x11C5 JUMP JUMPDEST PUSH2 0x1231 PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x1239 PUSH2 0x24B1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0x1289 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x130D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1331 SWAP2 SWAP1 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x134D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP5 ADD DUP11 SWAP1 SSTORE DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 ADD DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD DUP11 DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH32 0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x1239 PUSH1 0x0 PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x1406 PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x1411 DUP4 DUP4 DUP4 PUSH2 0x2553 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x3070 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x14E8 SWAP1 PUSH32 0x0 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x30B3 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526571756573742063616E6E6F7420626520636C61696D656420616E796D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO PUSH2 0x1597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH32 0x0 CALLVALUE EQ PUSH2 0x15FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDD185AD948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST DUP4 PUSH2 0x1643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46696C6C4964206D757374206E6F742062652030783 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x1C DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x1667 SWAP2 SWAP1 PUSH2 0x310F JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 DUP5 EXP SWAP1 DUP2 MUL SWAP3 MUL NOT AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 POP PUSH2 0x169F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DIV AND PUSH1 0x1 PUSH2 0x30E4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND MUL OR SWAP1 SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x16F2 PUSH32 0x0 TIMESTAMP PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP DUP8 PUSH32 0x763B6170DF0264962938E705B5CBB0E18FD60107C02B64E3261FA233458CE7A DUP5 CALLER CALLVALUE PUSH1 0x0 DUP1 DUP9 DUP15 PUSH1 0x40 MLOAD PUSH2 0x17A7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17C3 PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x17CF CHAINID DUP3 PUSH1 0x0 PUSH2 0x2553 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x17DA PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x9 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x8 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x3070 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x18DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F74206578706972656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x41637469766520636C61696D732072756E6E696E67 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH2 0x19FA SWAP4 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP3 PUSH2 0x19DF SWAP3 PUSH5 0x100000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0x30B3 JUMP JUMPDEST PUSH2 0x19E9 SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x2665 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A08 PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x1239 PUSH2 0x2695 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0x9 SLOAD DUP4 PUSH2 0x1A24 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x3197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x7 DUP3 ADD SLOAD DUP2 DUP7 MSTORE PUSH1 0x5 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP2 SWAP1 TIMESTAMP DUP3 GT PUSH2 0x1B0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DB185A5B48195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C7265616479207265736F6C7665640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x8 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH32 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1CF8 JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x1C3B JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C38 SWAP1 DUP6 PUSH2 0x30B3 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER SUB PUSH2 0x1C93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x1C9D DUP2 DUP4 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x1CA8 SWAP1 PUSH1 0x1 PUSH2 0x30B3 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1CF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x1DC9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x1D49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1D74 DUP4 DUP4 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1DC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER SUB PUSH2 0x1DF1 JUMPI PUSH2 0x1DE3 CALLVALUE DUP4 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD DUP2 SWAP1 SSTORE SWAP2 POP PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x4 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1E28 SWAP1 DUP5 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E38 SWAP1 POP CALLVALUE DUP3 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x5 DUP10 ADD DUP2 SWAP1 SSTORE SWAP1 POP JUMPDEST DUP6 PUSH2 0x1E4D DUP6 TIMESTAMP PUSH2 0x30B3 JUMP JUMPDEST GT ISZERO PUSH2 0x1E67 JUMPI PUSH2 0x1E5D DUP5 TIMESTAMP PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x7 DUP10 ADD DUP2 SWAP1 SSTORE SWAP6 POP JUMPDEST PUSH1 0x4 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x40 MLOAD DUP10 SWAP3 PUSH32 0x763B6170DF0264962938E705B5CBB0E18FD60107C02B64E3261FA233458CE7A SWAP3 PUSH2 0x1EB7 SWAP3 DUP16 SWAP3 DUP10 SWAP3 DUP10 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP10 SWAP2 DUP16 SWAP2 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 DUP3 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1EDF DUP4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST PUSH2 0x1EF1 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1F4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726F746F636F6C20666565206973207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP4 SWAP1 PUSH2 0x19FA SWAP1 DUP5 DUP5 PUSH2 0x2665 JUMP JUMPDEST PUSH2 0x1F7C PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1FDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C69747920706572696F64206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2032 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x209E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SWAP1 SWAP3 DUP1 PUSH2 0x20D2 DUP9 PUSH2 0x26D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP ISZERO PUSH2 0x2113 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x2164 JUMPI PUSH1 0x1 DUP5 PUSH1 0x4 ADD PUSH1 0x1C DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x2145 SWAP2 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x216E DUP3 DUP3 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD DUP2 SWAP1 SSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x2 DUP9 ADD SLOAD SWAP2 SWAP3 POP PUSH2 0x218B SWAP2 PUSH2 0x30B3 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x21DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2227 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x222C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP13 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP8 SWAP2 PUSH32 0xC9E74E0700D0C6488AF9C81D70FDD4158AEA77687137FF85499509C41A10612B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x22EA JUMPI POP PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F9 DUP6 DUP12 PUSH2 0x29C8 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x230F PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x17CF DUP2 PUSH2 0x2503 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2E PUSH1 0x7 SLOAD PUSH3 0xF4240 PUSH1 0x8 SLOAD DUP6 PUSH2 0x2397 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x23A1 SWAP2 SWAP1 PUSH2 0x3197 JUMP JUMPDEST PUSH2 0x2AD3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x19FA SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x24B9 PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x19FA SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1411 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x269D PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x24E6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x5 SWAP3 DUP4 SWAP1 MSTORE SWAP1 DUP4 KECCAK256 DUP1 DUP4 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD SWAP7 SWAP8 DUP9 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH2 0x2733 DUP3 DUP5 PUSH2 0x30B3 JUMP JUMPDEST DUP8 PUSH1 0x6 ADD SLOAD LT PUSH2 0x2785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x27D0 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x27C9 JUMPI POP DUP4 DUP2 EQ JUMPDEST SWAP3 POP PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP11 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x27F2 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND ISZERO PUSH2 0x2857 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x27C9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP5 EQ SWAP3 POP PUSH2 0x28B1 JUMP JUMPDEST DUP10 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x28AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F742066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST DUP5 DUP7 GT SWAP3 POP JUMPDEST PUSH1 0x0 DUP1 DUP5 ISZERO PUSH2 0x28CE JUMPI PUSH2 0x28C4 DUP8 DUP10 PUSH2 0x30B3 JUMP JUMPDEST SWAP2 POP DUP9 SWAP1 POP PUSH2 0x2967 JUMP JUMPDEST DUP7 ISZERO PUSH2 0x2956 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP14 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x28F1 SWAP1 PUSH1 0x2 PUSH2 0x3178 JUMP JUMPDEST SWAP2 POP CALLER SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x2951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6177 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x2967 JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP13 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x29B5 JUMPI DUP7 DUP9 GT ISZERO PUSH2 0x299E JUMPI PUSH2 0x298D DUP8 DUP10 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x2997 SWAP1 DUP4 PUSH2 0x30B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x29A8 DUP9 DUP9 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x29B2 SWAP1 DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP15 SWAP1 SWAP14 POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP3 PUSH32 0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP4 DIV SWAP1 SWAP4 AND SWAP3 SWAP2 PUSH2 0x2A8B SWAP1 DUP5 SWAP1 PUSH2 0x30B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x2ACC SWAP2 DUP5 SWAP2 PUSH2 0x19E9 SWAP2 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 PUSH2 0x30B3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x2AE2 JUMPI DUP2 PUSH2 0x2AE4 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B40 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C06 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1411 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2B5E SWAP2 SWAP1 PUSH2 0x304E JUMP JUMPDEST PUSH2 0x1411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C15 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C1D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C9A SWAP2 SWAP1 PUSH2 0x3221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CD7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CED DUP8 DUP4 DUP4 DUP8 PUSH2 0x2CF8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2D67 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2D60 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2D60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA30 JUMP JUMPDEST POP DUP2 PUSH2 0x2C15 JUMP JUMPDEST PUSH2 0x2C15 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2D7C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x323D JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2DDE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DDE JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST POP PUSH2 0x2DEA SWAP3 SWAP2 POP PUSH2 0x2DEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2DEF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0x2EAF PUSH1 0x20 DUP9 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP5 POP PUSH2 0x2EBD PUSH1 0x40 DUP9 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP4 POP PUSH2 0x2ECB PUSH1 0x60 DUP9 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AE4 DUP3 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2F5D PUSH1 0x60 DUP7 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x2F8D PUSH1 0x20 DUP6 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9B PUSH1 0x40 DUP6 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FC0 DUP4 PUSH2 0x2E6A JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCE PUSH1 0x20 DUP5 ADD PUSH2 0x2E6A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x30C6 JUMPI PUSH2 0x30C6 PUSH2 0x309D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3106 JUMPI PUSH2 0x3106 PUSH2 0x309D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3106 JUMPI PUSH2 0x3106 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP8 SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3192 JUMPI PUSH2 0x3192 PUSH2 0x309D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x31B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x31CB JUMPI PUSH2 0x31CB PUSH2 0x309D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x31ED JUMPI PUSH2 0x31ED PUSH2 0x309D JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3210 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31F8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x19FA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3233 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x31F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x325C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x31F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SWAP1 0xE7 0xDD SWAP7 BLOCKHASH 0x27 PUSH27 0x98A8006CF83A67B18ADD3846C77EF6241F86C7BD74CC102E64736F PUSH13 0x634300080D0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "LT",
      "path": "20"
    },
    "9": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x267"
    },
    "12": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "SHR",
      "path": "20"
    },
    "19": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "20": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7DC2CD98"
    },
    "25": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144"
    },
    "29": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "30": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "31": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xCF7B287F"
    },
    "36": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "37": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "41": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "42": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE7AAD5C4"
    },
    "47": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "48": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "52": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "53": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE7AAD5C4"
    },
    "58": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "59": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92C"
    },
    "62": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "63": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "64": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEA628898"
    },
    "69": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "70": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x942"
    },
    "73": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "74": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "75": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEB321173"
    },
    "80": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "81": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x95D"
    },
    "84": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "85": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "86": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "92": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x991"
    },
    "95": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "96": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "97": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF7D64CEC"
    },
    "102": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "103": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9B1"
    },
    "106": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "107": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "108": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF9432517"
    },
    "113": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "114": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9D1"
    },
    "117": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "118": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "121": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "122": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xCF7B287F"
    },
    "129": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "130": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x896"
    },
    "133": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "134": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "135": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD137920B"
    },
    "140": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "141": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8B6"
    },
    "144": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "145": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "146": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD762A37B"
    },
    "151": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "152": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8D6"
    },
    "155": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "156": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "157": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDEE4DEA0"
    },
    "162": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "163": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8F6"
    },
    "166": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "167": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "168": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE2653EEB"
    },
    "173": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x916"
    },
    "177": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "178": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "181": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "182": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "183": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "184": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9D866985"
    },
    "189": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "190": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "194": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "195": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9D866985"
    },
    "200": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "201": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6D3"
    },
    "204": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "205": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "206": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9E375226"
    },
    "211": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "212": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7EE"
    },
    "215": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "216": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "217": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA032B5F4"
    },
    "222": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "223": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x81E"
    },
    "226": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "227": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "228": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xADB610A3"
    },
    "233": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "234": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x83E"
    },
    "237": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "238": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "239": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB4D1D27A"
    },
    "244": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x863"
    },
    "248": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "249": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "250": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xCEA74EDF"
    },
    "255": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x876"
    },
    "259": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "260": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "263": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "264": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "265": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "266": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7DC2CD98"
    },
    "271": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "272": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x621"
    },
    "275": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "276": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "277": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x83D208C3"
    },
    "282": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "283": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x655"
    },
    "286": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "287": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "288": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8456CB59"
    },
    "293": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "294": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x689"
    },
    "297": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "298": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "299": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "304": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x69E"
    },
    "308": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "309": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "310": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x96171D05"
    },
    "315": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6BC"
    },
    "319": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "320": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "323": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "324": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "325": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "326": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3F4BA83A"
    },
    "331": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "332": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DD"
    },
    "335": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "336": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "337": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "342": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "343": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A1"
    },
    "346": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "347": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "348": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "353": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "354": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x561"
    },
    "357": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "358": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "359": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7203AE3B"
    },
    "364": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "365": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x576"
    },
    "368": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "369": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "370": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x743C151A"
    },
    "375": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "376": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x596"
    },
    "379": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "380": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "381": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x747293FB"
    },
    "386": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5C1"
    },
    "390": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "391": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "392": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x78DA194B"
    },
    "397": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5E1"
    },
    "401": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "402": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "403": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x79650559"
    },
    "408": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x601"
    },
    "412": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "413": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "415": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "416": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "417": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "418": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "419": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3F4BA83A"
    },
    "424": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "425": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4D1"
    },
    "428": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "429": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "430": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5B3A6EF2"
    },
    "435": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "436": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4E6"
    },
    "439": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "440": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "441": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5C975ABB"
    },
    "446": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x506"
    },
    "450": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "451": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "452": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5D5AA11B"
    },
    "457": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51E"
    },
    "461": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "462": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "463": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6BC6C8D1"
    },
    "468": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x534"
    },
    "472": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "473": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "475": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "476": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "477": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "478": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "479": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F4212B8"
    },
    "484": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "GT",
      "path": "20"
    },
    "485": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F"
    },
    "488": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "489": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "490": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F4212B8"
    },
    "495": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x353"
    },
    "499": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "500": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "501": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F92F009"
    },
    "506": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "507": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x373"
    },
    "510": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "511": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "512": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x30A08CBC"
    },
    "517": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A0"
    },
    "521": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "522": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "523": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x31E08F7A"
    },
    "528": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "529": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DF"
    },
    "532": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "533": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "534": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3993B6ED"
    },
    "539": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "540": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FF"
    },
    "543": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "544": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "545": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3B046F09"
    },
    "550": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "551": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41F"
    },
    "554": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "555": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "557": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "558": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "559": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "560": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "561": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3FC4C37"
    },
    "566": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "567": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26C"
    },
    "570": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "571": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "572": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE19A1C6"
    },
    "577": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "578": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28E"
    },
    "581": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "582": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "583": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE3A918C"
    },
    "588": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "589": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CB"
    },
    "592": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "593": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "594": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1489F8D2"
    },
    "599": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "600": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FB"
    },
    "603": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "604": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "605": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1D18ADC5"
    },
    "610": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "EQ",
      "path": "20"
    },
    "611": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31F"
    },
    "614": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "615": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "616": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "618": {
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "DUP1",
      "path": "20"
    },
    "619": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1141,
        30081
      ],
      "op": "REVERT",
      "path": "20"
    },
    "620": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "621": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "622": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "DUP1",
      "path": "20"
    },
    "623": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "624": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x278"
    },
    "627": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "628": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "630": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "DUP1",
      "path": "20"
    },
    "631": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "REVERT",
      "path": "20"
    },
    "632": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "637": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x287"
    },
    "640": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "641": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "643": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E03"
    },
    "646": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMP",
      "path": "20"
    },
    "647": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "648": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9E7"
    },
    "651": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMP",
      "path": "20"
    },
    "652": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "653": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "STOP",
      "path": "20"
    },
    "654": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "655": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "656": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "657": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "658": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29A"
    },
    "661": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "662": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "664": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "665": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "22"
    },
    "666": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AE"
    },
    "671": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A9"
    },
    "674": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "675": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "677": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E2F"
    },
    "680": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "22"
    },
    "681": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "682": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC38"
    },
    "685": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "22"
    },
    "686": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "687": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "689": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "op": "SWAP1"
    },
    "699": {
      "op": "SWAP2"
    },
    "700": {
      "op": "AND"
    },
    "701": {
      "op": "DUP2"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "707": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "709": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "710": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "711": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "712": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SUB",
      "path": "22"
    },
    "713": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "714": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "RETURN",
      "path": "22"
    },
    "715": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "716": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "717": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "DUP1",
      "path": "20"
    },
    "718": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "719": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D7"
    },
    "722": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "723": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "725": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "DUP1",
      "path": "20"
    },
    "726": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "REVERT",
      "path": "20"
    },
    "727": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "728": {
      "op": "POP"
    },
    "729": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EB"
    },
    "732": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E6"
    },
    "735": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "736": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "738": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "741": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "i",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMP",
      "path": "20"
    },
    "742": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "743": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC66"
    },
    "746": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "i",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMP",
      "path": "20"
    },
    "747": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "748": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "750": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "751": {
      "op": "SWAP1"
    },
    "752": {
      "op": "ISZERO"
    },
    "753": {
      "op": "ISZERO"
    },
    "754": {
      "op": "DUP2"
    },
    "755": {
      "op": "MSTORE"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C2"
    },
    "762": {
      "op": "JUMP"
    },
    "763": {
      "offset": [
        5541,
        5597
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "764": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "765": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "DUP1",
      "path": "20"
    },
    "766": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "767": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x307"
    },
    "770": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "771": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "773": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "DUP1",
      "path": "20"
    },
    "774": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "REVERT",
      "path": "20"
    },
    "775": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "776": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "POP",
      "path": "20"
    },
    "777": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "780": {
      "offset": [
        5587,
        5597
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x708"
    },
    "783": {
      "offset": [
        5541,
        5597
      ],
      "op": "DUP2",
      "path": "20"
    },
    "784": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "JUMP",
      "path": "20"
    },
    "785": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "786": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "788": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5541,
        5597
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "789": {
      "op": "SWAP1"
    },
    "790": {
      "op": "DUP2"
    },
    "791": {
      "op": "MSTORE"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "794": {
      "op": "ADD"
    },
    "795": {
      "offset": [
        5541,
        5597
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C2"
    },
    "798": {
      "op": "JUMP"
    },
    "799": {
      "offset": [
        5435,
        5484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "800": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "801": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "802": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "803": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32B"
    },
    "806": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "807": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "809": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "810": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "REVERT",
      "path": "20"
    },
    "811": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "812": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "POP",
      "path": "20"
    },
    "813": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "816": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "849": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "850": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5435,
        5484
      ],
      "op": "JUMP",
      "path": "20"
    },
    "851": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "852": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "853": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "DUP1",
      "path": "20"
    },
    "854": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "855": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35F"
    },
    "858": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "859": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "861": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "DUP1",
      "path": "20"
    },
    "862": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "REVERT",
      "path": "20"
    },
    "863": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "864": {
      "op": "POP"
    },
    "865": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "868": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36E"
    },
    "871": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "872": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "874": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E86"
    },
    "877": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMP",
      "path": "20"
    },
    "878": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "879": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCBF"
    },
    "882": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMP",
      "path": "20"
    },
    "883": {
      "offset": [
        6206,
        6256
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "884": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "885": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "DUP1",
      "path": "20"
    },
    "886": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "887": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37F"
    },
    "890": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "891": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "893": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "DUP1",
      "path": "20"
    },
    "894": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "REVERT",
      "path": "20"
    },
    "895": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "900": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38E"
    },
    "903": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "904": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "906": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "909": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        6206,
        6256
      ],
      "op": "JUMP",
      "path": "20"
    },
    "910": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "911": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "913": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "915": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "916": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "918": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "919": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "DUP2",
      "path": "20"
    },
    "920": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "921": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "923": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "924": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "925": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "926": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "DUP2",
      "path": "20"
    },
    "927": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6206,
        6256
      ],
      "op": "JUMP",
      "path": "20"
    },
    "928": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "929": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "930": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "DUP1",
      "path": "20"
    },
    "931": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "932": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC"
    },
    "935": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "936": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "938": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "DUP1",
      "path": "20"
    },
    "939": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "REVERT",
      "path": "20"
    },
    "940": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "941": {
      "op": "POP"
    },
    "942": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EB"
    },
    "945": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BB"
    },
    "948": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "949": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "951": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E2F"
    },
    "954": {
      "fn": "RequestManager.isInvalidFill",
      "jump": "i",
      "offset": [
        27379,
        27558
      ],
      "op": "JUMP",
      "path": "20"
    },
    "955": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "956": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27482,
        27486
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "958": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 0
    },
    "959": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "DUP3",
      "path": "20"
    },
    "960": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "961": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27517
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "963": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "965": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "966": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "DUP2",
      "path": "20"
    },
    "967": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "968": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "970": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "DUP1",
      "path": "20"
    },
    "971": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "DUP5",
      "path": "20"
    },
    "972": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27528
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "973": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "974": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "DUP5",
      "path": "20"
    },
    "975": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "976": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27543
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "978": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27543
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "979": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27543
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "980": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27543
      ],
      "op": "ADD",
      "path": "20"
    },
    "981": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "982": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "983": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "984": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "985": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "986": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "988": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "AND",
      "path": "20"
    },
    "989": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27509,
        27551
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "990": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        27379,
        27558
      ],
      "op": "JUMP",
      "path": "20"
    },
    "991": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "992": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "993": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "DUP1",
      "path": "18"
    },
    "994": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "995": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3EB"
    },
    "998": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "999": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1001": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1002": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1003": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28C"
    },
    "1008": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3FA"
    },
    "1011": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1012": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1014": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EE5"
    },
    "1017": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "i",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1018": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1019": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x116C"
    },
    "1022": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "i",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1023": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1024": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1025": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1026": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1027": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x40B"
    },
    "1030": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1031": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1033": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1034": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1035": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28C"
    },
    "1040": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41A"
    },
    "1043": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1044": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1046": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EE5"
    },
    "1049": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1050": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1051": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11D0"
    },
    "1054": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1055": {
      "offset": [
        6385,
        6423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1056": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1057": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1058": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1059": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42B"
    },
    "1062": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1063": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1065": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1066": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1067": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1068": {
      "op": "POP"
    },
    "1069": {
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x48B"
    },
    "1072": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43A"
    },
    "1075": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1076": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1078": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F00"
    },
    "1081": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        6385,
        6423
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1082": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1083": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1085": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1087": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1088": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1089": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1090": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1092": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1093": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1094": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1095": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1097": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1098": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1099": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1100": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1101": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1102": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1104": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1105": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1106": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1107": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1109": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1110": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1111": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1112": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1114": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1115": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1116": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1117": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1119": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1120": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1121": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1122": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1123": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1124": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1125": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1126": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1128": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1129": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1130": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1131": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1133": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1134": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1135": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "ADD",
      "path": "20"
    },
    "1136": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1137": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1138": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "op": "SUB"
    },
    "1147": {
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1148": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1149": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "AND",
      "path": "20"
    },
    "1150": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1151": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1152": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1153": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1154": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1155": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1156": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "AND",
      "path": "20"
    },
    "1157": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1158": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1159": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1160": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1161": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP9",
      "path": "20"
    },
    "1162": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1163": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1164": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1166": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1167": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6385,
        6423
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1168": {
      "op": "SWAP9"
    },
    "1169": {
      "op": "DUP10"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1177": {
      "op": "SHL"
    },
    "1178": {
      "op": "SUB"
    },
    "1179": {
      "op": "SWAP8"
    },
    "1180": {
      "op": "DUP9"
    },
    "1181": {
      "op": "AND"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1184": {
      "op": "DUP11"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "op": "DUP9"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "SWAP6"
    },
    "1190": {
      "op": "SWAP1"
    },
    "1191": {
      "op": "SWAP6"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "SWAP5"
    },
    "1194": {
      "op": "SWAP1"
    },
    "1195": {
      "op": "SWAP3"
    },
    "1196": {
      "op": "AND"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1199": {
      "op": "DUP7"
    },
    "1200": {
      "op": "ADD"
    },
    "1201": {
      "op": "MSTORE"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1204": {
      "op": "DUP6"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1209": {
      "op": "DUP5"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "MSTORE"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1214": {
      "op": "DUP4"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "op": "SWAP2"
    },
    "1217": {
      "op": "SWAP1"
    },
    "1218": {
      "op": "SWAP2"
    },
    "1219": {
      "op": "MSTORE"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "offset": [
        6385,
        6423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C2"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1234": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1235": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1236": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1237": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4DD"
    },
    "1240": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1241": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1243": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1244": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1245": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1246": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "POP",
      "path": "20"
    },
    "1247": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "1250": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1229"
    },
    "1253": {
      "fn": "RequestManager.unpause",
      "jump": "i",
      "offset": [
        30014,
        30079
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1254": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1255": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1256": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1257": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1258": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4F2"
    },
    "1261": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1262": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1264": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1265": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1266": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "1271": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x501"
    },
    "1274": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1275": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1277": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F29"
    },
    "1280": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1281": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1282": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x123B"
    },
    "1285": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1286": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1287": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1288": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1289": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1290": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x512"
    },
    "1293": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1294": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1296": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1297": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1298": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x3"
    },
    "1302": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1303": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1305": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "AND",
      "path": "1"
    },
    "1306": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EB"
    },
    "1309": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1310": {
      "offset": [
        6518,
        6551
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1311": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1312": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1313": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1314": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52A"
    },
    "1317": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1318": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1320": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1321": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1322": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1323": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "POP",
      "path": "20"
    },
    "1324": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "1327": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1329": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1330": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1331": {
      "fn": "Pausable.paused",
      "offset": [
        6518,
        6551
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1332": {
      "offset": [
        7118,
        7174
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1333": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1334": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1335": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1336": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x540"
    },
    "1339": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1340": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1342": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1343": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1344": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1345": {
      "op": "POP"
    },
    "1346": {
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "1349": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x54F"
    },
    "1352": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1353": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1355": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE5"
    },
    "1358": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        7118,
        7174
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1359": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1360": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1362": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1364": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1365": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1367": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1368": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1369": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1370": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1372": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1373": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1374": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1375": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1376": {
      "fn": "Pausable.paused",
      "offset": [
        7118,
        7174
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1378": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1380": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1381": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "1384": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1387": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1389": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1390": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "1391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "1394": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EC"
    },
    "1397": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1398": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1399": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1400": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1401": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1402": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x582"
    },
    "1405": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1406": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1408": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1409": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1410": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28C"
    },
    "1415": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x591"
    },
    "1418": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1419": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1421": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F68"
    },
    "1424": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1425": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1426": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13FE"
    },
    "1429": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1430": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1431": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A9"
    },
    "1434": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A4"
    },
    "1437": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1438": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1440": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E2F"
    },
    "1443": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1444": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1445": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1416"
    },
    "1448": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1449": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1450": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1452": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "op": "SUB"
    },
    "1461": {
      "op": "SWAP1"
    },
    "1462": {
      "op": "SWAP2"
    },
    "1463": {
      "op": "AND"
    },
    "1464": {
      "op": "DUP2"
    },
    "1465": {
      "op": "MSTORE"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C2"
    },
    "1472": {
      "op": "JUMP"
    },
    "1473": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1474": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1475": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1476": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1477": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1481": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1483": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1484": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1485": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28C"
    },
    "1490": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5DC"
    },
    "1493": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1494": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1496": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EE5"
    },
    "1499": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1500": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1501": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17BB"
    },
    "1504": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1505": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1506": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1507": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1508": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1509": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5ED"
    },
    "1512": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1513": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1515": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1516": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1517": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "1522": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5FC"
    },
    "1525": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1526": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1528": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E03"
    },
    "1531": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1532": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1533": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17D2"
    },
    "1536": {
      "fn": "RequestManager.updateFeeData",
      "jump": "i",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1537": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1538": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1539": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1540": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1541": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x60D"
    },
    "1544": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1545": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1547": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1548": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1549": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "1554": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x61C"
    },
    "1557": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1558": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1560": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "1563": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1564": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1565": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17E8"
    },
    "1568": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1569": {
      "offset": [
        4789,
        4825
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1570": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1571": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1572": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1573": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x62D"
    },
    "1576": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1577": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1579": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1580": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1581": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1582": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "POP",
      "path": "20"
    },
    "1583": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "1586": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "1619": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1620": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4789,
        4825
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1621": {
      "offset": [
        4687,
        4733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1622": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1623": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1624": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1625": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x661"
    },
    "1628": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1629": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1631": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1632": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1633": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1634": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "POP",
      "path": "20"
    },
    "1635": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "1638": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "1671": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1672": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        4687,
        4733
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1673": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1674": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1675": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1676": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1677": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x695"
    },
    "1680": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1681": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1683": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1684": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1685": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1686": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "POP",
      "path": "20"
    },
    "1687": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "1690": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A00"
    },
    "1693": {
      "fn": "RequestManager.pause",
      "jump": "i",
      "offset": [
        29682,
        29743
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1694": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1695": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1696": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1697": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1698": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AA"
    },
    "1701": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1702": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1704": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1705": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1706": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1710": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1720": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "1723": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1724": {
      "offset": [
        5654,
        5708
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1725": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1726": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1727": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1728": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6C8"
    },
    "1731": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1732": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1734": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1735": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1736": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1737": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "POP",
      "path": "20"
    },
    "1738": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "1741": {
      "offset": [
        5700,
        5708
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0x2A300"
    },
    "1745": {
      "offset": [
        5654,
        5708
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1746": {
      "fn": "Ownable.owner",
      "offset": [
        5654,
        5708
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1747": {
      "offset": [
        6301,
        6344
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1748": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1749": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1750": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1751": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6DF"
    },
    "1754": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1755": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1757": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1758": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1759": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x778"
    },
    "1764": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6EE"
    },
    "1767": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1768": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1770": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "1773": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        6301,
        6344
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1774": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1775": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1777": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1779": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1780": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1781": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1782": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1784": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1785": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1786": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1787": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1789": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1790": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1791": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1792": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1793": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1794": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1796": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1797": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ADD",
      "path": "20"
    },
    "1798": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1799": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1801": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1802": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ADD",
      "path": "20"
    },
    "1803": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1804": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1806": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1807": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ADD",
      "path": "20"
    },
    "1808": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1809": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1811": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1812": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ADD",
      "path": "20"
    },
    "1813": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1814": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1815": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1816": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ADD",
      "path": "20"
    },
    "1817": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1818": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1820": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1821": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1822": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "ADD",
      "path": "20"
    },
    "1823": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "SUB"
    },
    "1832": {
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1833": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1834": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1835": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1836": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1837": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1838": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1839": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1840": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1841": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1842": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1843": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1844": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1849": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1850": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1851": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1852": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH5",
      "path": "20",
      "value": "0x100000000"
    },
    "1867": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1868": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DIV",
      "path": "20"
    },
    "1869": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1870": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1871": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "offset": [
        6301,
        6344
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1878": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DIV",
      "path": "20"
    },
    "1879": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1880": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1881": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1888": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1889": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DIV",
      "path": "20"
    },
    "1890": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1891": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1892": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1893": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1894": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1895": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1896": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1897": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1902": {
      "op": "SHL"
    },
    "1903": {
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1904": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1905": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DIV",
      "path": "20"
    },
    "1906": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1907": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1908": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "AND",
      "path": "20"
    },
    "1909": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1910": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP12",
      "path": "20"
    },
    "1911": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1912": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1913": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1915": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1916": {
      "fn": "Ownable.owner",
      "offset": [
        6301,
        6344
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "op": "SWAP13"
    },
    "1926": {
      "op": "DUP14"
    },
    "1927": {
      "op": "AND"
    },
    "1928": {
      "op": "DUP2"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "SWAP11"
    },
    "1931": {
      "op": "DUP13"
    },
    "1932": {
      "op": "AND"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1935": {
      "op": "DUP13"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "op": "MSTORE"
    },
    "1938": {
      "op": "DUP11"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "SWAP9"
    },
    "1941": {
      "op": "SWAP1"
    },
    "1942": {
      "op": "SWAP9"
    },
    "1943": {
      "op": "MSTORE"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1946": {
      "op": "DUP10"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "SWAP7"
    },
    "1949": {
      "op": "SWAP1"
    },
    "1950": {
      "op": "SWAP7"
    },
    "1951": {
      "op": "MSTORE"
    },
    "1952": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1957": {
      "op": "SWAP5"
    },
    "1958": {
      "op": "DUP6"
    },
    "1959": {
      "op": "AND"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1962": {
      "op": "DUP10"
    },
    "1963": {
      "op": "ADD"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "op": "SWAP4"
    },
    "1974": {
      "op": "DUP5"
    },
    "1975": {
      "op": "AND"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1978": {
      "op": "DUP10"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "MSTORE"
    },
    "1981": {
      "op": "SWAP2"
    },
    "1982": {
      "op": "DUP4"
    },
    "1983": {
      "op": "AND"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1986": {
      "op": "DUP9"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "op": "MSTORE"
    },
    "1989": {
      "op": "SWAP1"
    },
    "1990": {
      "op": "SWAP3"
    },
    "1991": {
      "op": "AND"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1994": {
      "op": "DUP7"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "AND"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2001": {
      "op": "DUP5"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "SWAP1"
    },
    "2005": {
      "op": "SWAP3"
    },
    "2006": {
      "op": "AND"
    },
    "2007": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2010": {
      "op": "DUP3"
    },
    "2011": {
      "op": "ADD"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2016": {
      "op": "DUP2"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "op": "SWAP2"
    },
    "2019": {
      "op": "SWAP1"
    },
    "2020": {
      "op": "SWAP2"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2025": {
      "op": "ADD"
    },
    "2026": {
      "offset": [
        6301,
        6344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C2"
    },
    "2029": {
      "op": "JUMP"
    },
    "2030": {
      "offset": [
        820,
        862
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2031": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "2032": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2033": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2034": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7FA"
    },
    "2037": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2038": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2040": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2041": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2042": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EB"
    },
    "2047": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x809"
    },
    "2050": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2051": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2053": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EE5"
    },
    "2056": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        820,
        862
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2057": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2058": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2060": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2062": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2063": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2065": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2066": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2067": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2068": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2070": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2071": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2072": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2073": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2075": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "AND",
      "path": "18"
    },
    "2076": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2077": {
      "fn": "Ownable.owner",
      "offset": [
        820,
        862
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2078": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2079": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2080": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2081": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2082": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x82A"
    },
    "2085": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2086": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2088": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2089": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2090": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2095": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x839"
    },
    "2098": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2099": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2101": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "2104": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2105": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2106": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A10"
    },
    "2109": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2110": {
      "offset": [
        6074,
        6100
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2111": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2112": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2113": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2114": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x84A"
    },
    "2117": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2118": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2120": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2121": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2122": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "offset": [
        6074,
        6100
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2126": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2127": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A9"
    },
    "2130": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2131": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2134": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2135": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "DIV",
      "path": "20"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "offset": [
        6074,
        6100
      ],
      "op": "AND",
      "path": "20"
    },
    "2145": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2146": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        6074,
        6100
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2147": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2148": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "2151": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x871"
    },
    "2154": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2155": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2157": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F00"
    },
    "2160": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15810,
        18059
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2161": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2162": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A34"
    },
    "2165": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        15810,
        18059
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2166": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2167": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2168": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2169": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2170": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x882"
    },
    "2173": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2174": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2176": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2177": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2178": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2183": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x891"
    },
    "2186": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2187": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2189": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "2192": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2193": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2194": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ECB"
    },
    "2197": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2198": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2199": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2200": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2201": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2202": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8A2"
    },
    "2205": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2206": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2208": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2209": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2210": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "2215": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8B1"
    },
    "2218": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2219": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2221": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FA4"
    },
    "2224": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2225": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2226": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EE9"
    },
    "2229": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2230": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2231": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2232": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2233": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2234": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C2"
    },
    "2237": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2238": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2240": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2241": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2242": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "2247": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8D1"
    },
    "2250": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2251": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2253": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E2F"
    },
    "2256": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2257": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2258": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F74"
    },
    "2261": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2262": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2263": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2264": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2265": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2266": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8E2"
    },
    "2269": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2270": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2272": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2273": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2274": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2275": {
      "op": "POP"
    },
    "2276": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28C"
    },
    "2279": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8F1"
    },
    "2282": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2283": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2285": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "2288": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2289": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2290": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x202A"
    },
    "2293": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "i",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2294": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2295": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2296": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2297": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2298": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x902"
    },
    "2301": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2302": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2304": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2305": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2306": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2307": {
      "op": "POP"
    },
    "2308": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AE"
    },
    "2311": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x911"
    },
    "2314": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2315": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2317": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F00"
    },
    "2320": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2321": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2322": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2037"
    },
    "2325": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2326": {
      "offset": [
        6647,
        6678
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2327": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2328": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2329": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2330": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x922"
    },
    "2333": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2334": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2336": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2337": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2338": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2339": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "POP",
      "path": "20"
    },
    "2340": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2343": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2345": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2346": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2347": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6647,
        6678
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2348": {
      "offset": [
        6802,
        6835
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2349": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2350": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2351": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2352": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x938"
    },
    "2355": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2356": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2358": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2360": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2361": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "POP",
      "path": "20"
    },
    "2362": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2365": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "2367": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2368": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2369": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6802,
        6835
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2370": {
      "offset": [
        5813,
        5881
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2371": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2372": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2373": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2374": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x94E"
    },
    "2377": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2378": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2380": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2381": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2382": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2383": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "POP",
      "path": "20"
    },
    "2384": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A9"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2393": {
      "op": "SHL"
    },
    "2394": {
      "op": "SUB"
    },
    "2395": {
      "offset": [
        5813,
        5881
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2396": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5813,
        5881
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2397": {
      "offset": [
        4526,
        4561
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2398": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2399": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2400": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2401": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x969"
    },
    "2404": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2405": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2407": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2408": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2409": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2410": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "POP",
      "path": "20"
    },
    "2411": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2414": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "2447": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2448": {
      "fn": "RequestManager.withdraw",
      "offset": [
        4526,
        4561
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99D"
    },
    "2456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "2466": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AC"
    },
    "2469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EE5"
    },
    "2475": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2477": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2307"
    },
    "2480": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2481": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2482": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2483": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2484": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2485": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9BD"
    },
    "2488": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2489": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2491": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2492": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2493": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2498": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9CC"
    },
    "2501": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2502": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2504": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E51"
    },
    "2507": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2508": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2509": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x237D"
    },
    "2512": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2513": {
      "offset": [
        6968,
        7010
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2514": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2515": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2516": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2517": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9DD"
    },
    "2520": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2521": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2523": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2524": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2525": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2526": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "POP",
      "path": "20"
    },
    "2527": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x311"
    },
    "2530": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2532": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2533": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2534": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6968,
        7010
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2535": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2536": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2538": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2539": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2540": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2541": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2543": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2545": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2546": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2548": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2549": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2550": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2551": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2552": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2559": {
      "op": "SHL"
    },
    "2560": {
      "op": "SUB"
    },
    "2561": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "22"
    },
    "2562": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "22"
    },
    "2563": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2564": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "22"
    },
    "2565": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA3E"
    },
    "2568": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2569": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "op": "SUB"
    },
    "2578": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2579": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "22"
    },
    "2580": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "22"
    },
    "2581": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA39"
    },
    "2584": {
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2585": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2587": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2596": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2597": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2599": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "22"
    },
    "2600": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "2603": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2604": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD7"
    },
    "2607": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2608": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2609": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2611": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2612": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2613": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2614": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SUB",
      "path": "22"
    },
    "2615": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2616": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "22"
    },
    "2617": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2618": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB04"
    },
    "2621": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2622": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2623": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2625": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2626": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2627": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2628": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2630": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2632": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2633": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2635": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2636": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2637": {
      "offset": [
        2314,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2639": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "22"
    },
    "2640": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "op": "SUB"
    },
    "2649": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "22"
    },
    "2650": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2651": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA76"
    },
    "2654": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2655": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2657": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2666": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2667": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2669": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "22"
    },
    "2670": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "2673": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2674": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x300C"
    },
    "2677": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2678": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2679": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2681": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2682": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2691": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "op": "DUP4"
    },
    "2701": {
      "op": "DUP2"
    },
    "2702": {
      "op": "AND"
    },
    "2703": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2705": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2706": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2711": {
      "op": "DUP4"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2715": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "22"
    },
    "2716": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2717": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x845C5443"
    },
    "2722": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2725": {
      "op": "ADD"
    },
    "2726": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2728": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2730": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2731": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2732": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2733": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "22"
    },
    "2734": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2735": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2736": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "22"
    },
    "2737": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "2738": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2739": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2740": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2741": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC2"
    },
    "2744": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2745": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2746": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2748": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2749": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2750": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2751": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2753": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2754": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2755": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "2756": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "2757": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "2758": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "2759": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2761": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2762": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2763": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "2765": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "22"
    },
    "2766": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "2768": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2769": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "2770": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "22"
    },
    "2771": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2772": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "2773": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2774": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2776": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2777": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "2778": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2779": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "2780": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2781": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAE6"
    },
    "2784": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2785": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2786": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x304E"
    },
    "2789": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2790": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2791": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB02"
    },
    "2794": {
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2795": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2797": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2804": {
      "op": "SHL"
    },
    "2805": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2806": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2807": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2809": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "22"
    },
    "2810": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "2813": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2814": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD7"
    },
    "2817": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2818": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2819": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "22"
    },
    "2820": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2821": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28909,
        28932
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2823": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2824": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2825": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2826": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28943
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2828": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2830": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2831": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2832": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2833": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2835": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2836": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2837": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28935,
        28954
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2838": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 3
    },
    "2839": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2840": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "ADD",
      "path": "20"
    },
    "2841": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2848": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "DIV",
      "path": "20"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "op": "SUB"
    },
    "2857": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        28999
      ],
      "op": "AND",
      "path": "20"
    },
    "2858": {
      "branch": 142,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28985,
        29013
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2859": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB76"
    },
    "2862": {
      "branch": 142,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2863": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2865": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2874": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2877": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2879": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2880": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "ADD",
      "path": "20"
    },
    "2881": {
      "op": "DUP2"
    },
    "2882": {
      "op": "SWAP1"
    },
    "2883": {
      "op": "MSTORE"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2886": {
      "op": "DUP3"
    },
    "2887": {
      "op": "ADD"
    },
    "2888": {
      "op": "MSTORE"
    },
    "2889": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C73"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2924": {
      "op": "DUP3"
    },
    "2925": {
      "op": "ADD"
    },
    "2926": {
      "op": "MSTORE"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "2933": {
      "op": "JUMP"
    },
    "2934": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28964,
        29071
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2935": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 4,
      "value": "0x0"
    },
    "2937": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2938": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2939": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2940": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29124
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2942": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29124
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2943": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29124
      ],
      "op": "ADD",
      "path": "20"
    },
    "2944": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2946": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2947": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2949": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2950": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2951": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2952": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2954": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29132
      ],
      "op": "AND",
      "path": "20"
    },
    "2955": {
      "branch": 143,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29102,
        29141
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2956": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBD2"
    },
    "2959": {
      "branch": 143,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2960": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2962": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2969": {
      "op": "SHL"
    },
    "2970": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2971": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2974": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2976": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2977": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "ADD",
      "path": "20"
    },
    "2978": {
      "op": "MSTORE"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2983": {
      "op": "DUP3"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "op": "MSTORE"
    },
    "2986": {
      "op": "PUSH24",
      "value": "0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "3013": {
      "op": "SHL"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3016": {
      "op": "DUP3"
    },
    "3017": {
      "op": "ADD"
    },
    "3018": {
      "op": "MSTORE"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3021": {
      "op": "ADD"
    },
    "3022": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3025": {
      "op": "JUMP"
    },
    "3026": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29081,
        29191
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3027": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 5,
      "value": "0x0"
    },
    "3029": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3030": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3031": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3032": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29224
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "3034": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29224
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3035": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29224
      ],
      "op": "ADD",
      "path": "20"
    },
    "3036": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3038": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3039": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3041": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3042": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3043": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3044": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29232
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3045": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29239
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3046": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29239
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3049": {
      "op": "NOT"
    },
    "3050": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29239
      ],
      "op": "AND",
      "path": "20"
    },
    "3051": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29235,
        29239
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3053": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29239
      ],
      "op": "OR",
      "path": "20"
    },
    "3054": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29239
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3055": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29202,
        29239
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3056": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "MLOAD",
      "path": "20",
      "statement": 6
    },
    "3057": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x5571B83C623961FB42D39CE6D6D2092153ACE66C008E2DC2472EC6D2E8FAD045"
    },
    "3090": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3091": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC28"
    },
    "3094": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3095": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29279,
        29288
      ],
      "op": "DUP9",
      "path": "20"
    },
    "3096": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29279,
        29288
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3097": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29225,
        29231
      ],
      "op": "DUP9",
      "path": "20"
    },
    "3098": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29225,
        29231
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3099": {
      "op": "SWAP2"
    },
    "3100": {
      "op": "DUP3"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3104": {
      "op": "DUP3"
    },
    "3105": {
      "op": "ADD"
    },
    "3106": {
      "op": "MSTORE"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "SWAP1"
    },
    "3111": {
      "op": "JUMP"
    },
    "3112": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3113": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3115": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3116": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3117": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3118": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "SUB",
      "path": "20"
    },
    "3119": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3120": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        29255,
        29297
      ],
      "op": "LOG1",
      "path": "20"
    },
    "3121": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28899,
        29304
      ],
      "op": "POP",
      "path": "20"
    },
    "3122": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "22"
    },
    "3123": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "POP",
      "path": "20"
    },
    "3124": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "POP",
      "path": "20"
    },
    "3125": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "POP",
      "path": "20"
    },
    "3126": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        28744,
        29304
      ],
      "op": "POP",
      "path": "20"
    },
    "3127": {
      "fn": "RequestManager.invalidateFill",
      "jump": "o",
      "offset": [
        28744,
        29304
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3128": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3129": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3131": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3133": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3134": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3135": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3137": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3138": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3140": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3142": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3143": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3144": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3146": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3147": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "LT",
      "path": "22"
    },
    "3148": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC54"
    },
    "3151": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3152": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3154": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3155": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3156": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3157": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "ADD",
      "path": "22"
    },
    "3158": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "SUB"
    },
    "3167": {
      "offset": [
        576,
        621
      ],
      "op": "AND",
      "path": "22"
    },
    "3168": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "offset": [
        576,
        621
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3171": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "jump": "o",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3174": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3175": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24506,
        24510
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3177": {
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3178": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3179": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8071,
        8090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3180": {
      "offset": [
        8071,
        8079
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "3182": {
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3184": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8071,
        8090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3185": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3187": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3188": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8071,
        8090
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3189": {
      "offset": [
        8071,
        8097
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3190": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24478,
        24487
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3191": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24478,
        24487
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3198": {
      "op": "SHL"
    },
    "3199": {
      "op": "SUB"
    },
    "3200": {
      "offset": [
        8071,
        8097
      ],
      "op": "AND",
      "path": "20"
    },
    "3201": {
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC9C"
    },
    "3204": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3205": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3207": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3214": {
      "op": "SHL"
    },
    "3215": {
      "offset": [
        8050,
        8156
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3216": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3217": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3219": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "ADD",
      "path": "20"
    },
    "3220": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3223": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3224": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3070"
    },
    "3227": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "i",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3228": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3229": {
      "op": "POP"
    },
    "3230": {
      "op": "POP"
    },
    "3231": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 7,
      "value": "0x0"
    },
    "3233": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3234": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3235": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3236": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "3238": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3240": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3241": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3242": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3243": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3245": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3246": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3247": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24552
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3248": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24568
      ],
      "op": "ADD",
      "path": "20"
    },
    "3249": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24568
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24568
      ],
      "op": "AND",
      "path": "20"
    },
    "3259": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24573
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3260": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24573
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3261": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        24533,
        24573
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3262": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "o",
      "offset": [
        24387,
        24580
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3263": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3264": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10128,
        10135
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3266": {
      "offset": [
        1239,
        1258
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC9"
    },
    "3269": {
      "offset": [
        1239,
        1256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A6"
    },
    "3272": {
      "jump": "i",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3273": {
      "fn": "RequestManager.createRequest",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3274": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 8,
      "value": "0x0"
    },
    "3276": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3277": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3278": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3279": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10183
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3281": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3283": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3284": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3286": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3287": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3288": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10198
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3289": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10203
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3290": {
      "branch": 144,
      "fn": "RequestManager.createRequest",
      "offset": [
        10168,
        10203
      ],
      "op": "SUB",
      "path": "20"
    },
    "3291": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD26"
    },
    "3294": {
      "branch": 144,
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3295": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3297": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3306": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3309": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3311": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3312": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "ADD",
      "path": "20"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3318": {
      "op": "DUP3"
    },
    "3319": {
      "op": "ADD"
    },
    "3320": {
      "op": "MSTORE"
    },
    "3321": {
      "op": "PUSH32",
      "value": "0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3356": {
      "op": "DUP3"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "op": "MSTORE"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3361": {
      "op": "ADD"
    },
    "3362": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3365": {
      "op": "JUMP"
    },
    "3366": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10147,
        10256
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3367": {
      "offset": [
        5587,
        5597
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x708"
    },
    "3370": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10287,
        10301
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 9
    },
    "3371": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10287,
        10324
      ],
      "op": "LT",
      "path": "20"
    },
    "3372": {
      "branch": 145,
      "fn": "RequestManager.createRequest",
      "offset": [
        10287,
        10324
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3373": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD78"
    },
    "3376": {
      "branch": 145,
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3377": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3379": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3388": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3391": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3393": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3394": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "ADD",
      "path": "20"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3400": {
      "op": "DUP3"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "MSTORE"
    },
    "3403": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F2073686F727400000000000000"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3438": {
      "op": "DUP3"
    },
    "3439": {
      "op": "ADD"
    },
    "3440": {
      "op": "MSTORE"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3443": {
      "op": "ADD"
    },
    "3444": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3447": {
      "op": "JUMP"
    },
    "3448": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10266,
        10375
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3449": {
      "offset": [
        5700,
        5708
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0x2A300"
    },
    "3453": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10420
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 10
    },
    "3454": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10443
      ],
      "op": "GT",
      "path": "20"
    },
    "3455": {
      "branch": 146,
      "fn": "RequestManager.createRequest",
      "offset": [
        10406,
        10443
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3456": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDCB"
    },
    "3459": {
      "branch": 146,
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3460": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3462": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3469": {
      "op": "SHL"
    },
    "3470": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3471": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3474": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3476": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3477": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "ADD",
      "path": "20"
    },
    "3478": {
      "op": "MSTORE"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3483": {
      "op": "DUP3"
    },
    "3484": {
      "op": "ADD"
    },
    "3485": {
      "op": "MSTORE"
    },
    "3486": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3521": {
      "op": "DUP3"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "MSTORE"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3530": {
      "op": "JUMP"
    },
    "3531": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10385,
        10493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3532": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10521,
        10534
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 11,
      "value": "0xA"
    },
    "3534": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10521,
        10534
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3535": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10511,
        10517
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3536": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10511,
        10534
      ],
      "op": "GT",
      "path": "20"
    },
    "3537": {
      "branch": 147,
      "fn": "RequestManager.createRequest",
      "offset": [
        10511,
        10534
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3538": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE1D"
    },
    "3541": {
      "branch": 147,
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3542": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3544": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3551": {
      "op": "SHL"
    },
    "3552": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3553": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3556": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3558": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3559": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "ADD",
      "path": "20"
    },
    "3560": {
      "op": "MSTORE"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "ADD"
    },
    "3567": {
      "op": "MSTORE"
    },
    "3568": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473207472616E73666572206C696D6974000000"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3603": {
      "op": "DUP3"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "MSTORE"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3608": {
      "op": "ADD"
    },
    "3609": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3612": {
      "op": "JUMP"
    },
    "3613": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10503,
        10568
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3614": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10601,
        10619
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3615": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10579,
        10591
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3617": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10658,
        10671
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE29"
    },
    "3620": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10664,
        10670
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3621": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10658,
        10663
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x237D"
    },
    "3624": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10658,
        10671
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3625": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10658,
        10671
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3626": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10631,
        10671
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3627": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10631,
        10671
      ],
      "op": "POP",
      "path": "20"
    },
    "3628": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10681,
        10711
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3630": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10714,
        10733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE36"
    },
    "3633": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10726,
        10732
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3634": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10714,
        10725
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A10"
    },
    "3637": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10714,
        10733
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3638": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10714,
        10733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3639": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10681,
        10733
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10681,
        10733
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3642": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10852
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 12,
      "value": "0xE43"
    },
    "3645": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10836,
        10852
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3646": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10833
      ],
      "op": "DUP9",
      "path": "20"
    },
    "3647": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10852
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "3650": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10827,
        10852
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3651": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10852
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3652": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE4D"
    },
    "3655": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10877
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3656": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10877
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3657": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "3660": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10827,
        10877
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3661": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10827,
        10877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3662": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3664": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3665": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3674": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3675": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10781,
        10791
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3676": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3678": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3679": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "ADD",
      "path": "20"
    },
    "3680": {
      "op": "MSTORE"
    },
    "3681": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10801,
        10805
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3684": {
      "op": "DUP3"
    },
    "3685": {
      "op": "ADD"
    },
    "3686": {
      "op": "MSTORE"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "op": "SUB"
    },
    "3695": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10780
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3696": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10780
      ],
      "op": "AND",
      "path": "20"
    },
    "3697": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10780
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3698": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10780
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDD62ED3E"
    },
    "3703": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10780
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3709": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3711": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3712": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3713": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3714": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "SUB",
      "path": "20"
    },
    "3715": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3716": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3717": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "GAS",
      "path": "20"
    },
    "3718": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "3719": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3720": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3721": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3722": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE97"
    },
    "3725": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3726": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3727": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3729": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3730": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "3731": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3732": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3734": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3735": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3736": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "POP",
      "path": "20"
    },
    "3737": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "POP",
      "path": "20"
    },
    "3738": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "POP",
      "path": "20"
    },
    "3739": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "POP",
      "path": "20"
    },
    "3740": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3742": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3743": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3744": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "3746": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "NOT",
      "path": "20"
    },
    "3747": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "3749": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3750": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "ADD",
      "path": "20"
    },
    "3751": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "AND",
      "path": "20"
    },
    "3752": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3753": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "ADD",
      "path": "20"
    },
    "3754": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3755": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3757": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3758": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "POP",
      "path": "20"
    },
    "3759": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3760": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "ADD",
      "path": "20"
    },
    "3761": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3762": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEBB"
    },
    "3765": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3766": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3767": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30CB"
    },
    "3770": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10765,
        10807
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3771": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10807
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3772": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10877
      ],
      "op": "LT",
      "path": "20"
    },
    "3773": {
      "branch": 148,
      "fn": "RequestManager.createRequest",
      "offset": [
        10765,
        10877
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3774": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF02"
    },
    "3777": {
      "branch": 148,
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3778": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3780": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3789": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3792": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3794": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3795": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "ADD",
      "path": "20"
    },
    "3796": {
      "op": "MSTORE"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3832": {
      "op": "DUP3"
    },
    "3833": {
      "op": "ADD"
    },
    "3834": {
      "op": "MSTORE"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "3841": {
      "op": "JUMP"
    },
    "3842": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10744,
        10925
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3843": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3845": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3846": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10936,
        10948
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3848": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10936,
        10948
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3849": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10967
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF21"
    },
    "3852": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10967
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3853": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3856": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3857": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "DIV",
      "path": "20"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3864": {
      "op": "SHL"
    },
    "3865": {
      "op": "SUB"
    },
    "3866": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "AND",
      "path": "20"
    },
    "3867": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3869": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10967
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30E4"
    },
    "3872": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10951,
        10967
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3873": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10967
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3874": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10989
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 13,
      "value": "0x3"
    },
    "3876": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3877": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3887": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "AND",
      "path": "20"
    },
    "3888": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3891": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "MUL",
      "path": "20"
    },
    "3892": {
      "op": "PUSH13",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00"
    },
    "3906": {
      "op": "NOT"
    },
    "3907": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3908": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3909": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "AND",
      "path": "20"
    },
    "3910": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "OR",
      "path": "20"
    },
    "3911": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3912": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3913": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x40"
    },
    "3915": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3916": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3917": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11069,
        11082
      ],
      "op": "CHAINID",
      "path": "20"
    },
    "3918": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3920": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3921": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3922": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "ADD",
      "path": "16"
    },
    "3923": {
      "op": "SWAP2"
    },
    "3924": {
      "op": "SWAP1"
    },
    "3925": {
      "op": "SWAP2"
    },
    "3926": {
      "op": "MSTORE"
    },
    "3927": {
      "op": "DUP2"
    },
    "3928": {
      "op": "DUP4"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "DUP16"
    },
    "3931": {
      "op": "SWAP1"
    },
    "3932": {
      "op": "MSTORE"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3939": {
      "op": "SHL"
    },
    "3940": {
      "op": "SUB"
    },
    "3941": {
      "op": "NOT"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3944": {
      "op": "DUP15"
    },
    "3945": {
      "op": "DUP2"
    },
    "3946": {
      "op": "SHL"
    },
    "3947": {
      "op": "DUP3"
    },
    "3948": {
      "op": "AND"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "DUP6"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "DUP14"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "op": "SHL"
    },
    "3956": {
      "op": "AND"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "3959": {
      "op": "DUP4"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "ADD"
    },
    "3966": {
      "op": "DUP12"
    },
    "3967": {
      "op": "SWAP1"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3975": {
      "op": "SHL"
    },
    "3976": {
      "op": "SUB"
    },
    "3977": {
      "op": "NOT"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3980": {
      "op": "DUP6"
    },
    "3981": {
      "op": "SWAP1"
    },
    "3982": {
      "op": "SHL"
    },
    "3983": {
      "op": "AND"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3986": {
      "op": "DUP4"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "MSTORE"
    },
    "3989": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3990": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3991": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3992": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3993": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "SUB",
      "path": "16"
    },
    "3994": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x94"
    },
    "3996": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "ADD",
      "path": "16"
    },
    "3997": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3998": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "4001": {
      "op": "SWAP1"
    },
    "4002": {
      "op": "SWAP3"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4005": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4006": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4007": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4008": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4009": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4010": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "ADD",
      "path": "16"
    },
    "4011": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4012": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4013": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10977,
        10997
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11228,
        11254
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4017": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "4019": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4021": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11266,
        11275
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4022": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4023": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4024": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4026": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "ADD",
      "path": "20"
    },
    "4027": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4028": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4029": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4030": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4032": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "ADD",
      "path": "20"
    },
    "4033": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4035": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11257,
        11276
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4036": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11228,
        11276
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4037": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11228,
        11276
      ],
      "op": "POP",
      "path": "20"
    },
    "4038": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11306,
        11316
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 15
    },
    "4039": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11296
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4040": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11303
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4042": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11303
      ],
      "op": "ADD",
      "path": "20"
    },
    "4043": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11303
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4045": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4048": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "EXP",
      "path": "20"
    },
    "4049": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4050": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4051": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4058": {
      "op": "SHL"
    },
    "4059": {
      "op": "SUB"
    },
    "4060": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "MUL",
      "path": "20"
    },
    "4061": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "NOT",
      "path": "20"
    },
    "4062": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "AND",
      "path": "20"
    },
    "4063": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4064": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4071": {
      "op": "SHL"
    },
    "4072": {
      "op": "SUB"
    },
    "4073": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "AND",
      "path": "20"
    },
    "4074": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "MUL",
      "path": "20"
    },
    "4075": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "OR",
      "path": "20"
    },
    "4076": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4077": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4078": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11286,
        11316
      ],
      "op": "POP",
      "path": "20"
    },
    "4079": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11358,
        11376
      ],
      "op": "DUP12",
      "path": "20",
      "statement": 16
    },
    "4080": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11336
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4081": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4083": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11355
      ],
      "op": "ADD",
      "path": "20"
    },
    "4084": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4086": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4089": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "EXP",
      "path": "20"
    },
    "4090": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4091": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4092": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "MUL",
      "path": "20"
    },
    "4102": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "NOT",
      "path": "20"
    },
    "4103": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "AND",
      "path": "20"
    },
    "4104": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4105": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4112": {
      "op": "SHL"
    },
    "4113": {
      "op": "SUB"
    },
    "4114": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "AND",
      "path": "20"
    },
    "4115": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "MUL",
      "path": "20"
    },
    "4116": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "OR",
      "path": "20"
    },
    "4117": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4118": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4119": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11326,
        11376
      ],
      "op": "POP",
      "path": "20"
    },
    "4120": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11413,
        11426
      ],
      "op": "DUP13",
      "path": "20",
      "statement": 17
    },
    "4121": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11396
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4122": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11410
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4124": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11410
      ],
      "op": "ADD",
      "path": "20"
    },
    "4125": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11426
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4126": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11426
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4127": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11426
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4128": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11386,
        11426
      ],
      "op": "POP",
      "path": "20"
    },
    "4129": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11456,
        11462
      ],
      "op": "DUP9",
      "path": "20",
      "statement": 18
    },
    "4130": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11446
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4131": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4133": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11453
      ],
      "op": "ADD",
      "path": "20"
    },
    "4134": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11462
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4135": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11462
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4136": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11462
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4137": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11436,
        11462
      ],
      "op": "POP",
      "path": "20"
    },
    "4138": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11521,
        11535
      ],
      "op": "DUP8",
      "path": "20",
      "statement": 19
    },
    "4139": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11503,
        11518
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4140": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11503,
        11535
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1035"
    },
    "4143": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11503,
        11535
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4144": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11503,
        11535
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4145": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11503,
        11535
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "4148": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11503,
        11535
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4149": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11503,
        11535
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4150": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11482
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4151": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4153": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11493
      ],
      "op": "ADD",
      "path": "20"
    },
    "4154": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4156": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4159": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "EXP",
      "path": "20"
    },
    "4160": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4161": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4162": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4163": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4168": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "MUL",
      "path": "20"
    },
    "4169": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "NOT",
      "path": "20"
    },
    "4170": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "AND",
      "path": "20"
    },
    "4171": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4172": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4173": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4178": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "AND",
      "path": "20"
    },
    "4179": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "MUL",
      "path": "20"
    },
    "4180": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "OR",
      "path": "20"
    },
    "4181": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4182": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4183": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11472,
        11536
      ],
      "op": "POP",
      "path": "20"
    },
    "4184": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11572,
        11588
      ],
      "op": "DUP5",
      "path": "20",
      "statement": 20
    },
    "4185": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11556
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4186": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11562
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4188": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11562
      ],
      "op": "ADD",
      "path": "20"
    },
    "4189": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11562
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4191": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4194": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "EXP",
      "path": "20"
    },
    "4195": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4196": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4197": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "MUL",
      "path": "20"
    },
    "4207": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "NOT",
      "path": "20"
    },
    "4208": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "AND",
      "path": "20"
    },
    "4209": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4210": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "op": "SUB"
    },
    "4219": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "AND",
      "path": "20"
    },
    "4220": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "MUL",
      "path": "20"
    },
    "4221": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "OR",
      "path": "20"
    },
    "4222": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4223": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4224": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11546,
        11589
      ],
      "op": "POP",
      "path": "20"
    },
    "4225": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11631,
        11653
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 21
    },
    "4226": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11609
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4227": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4229": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11621
      ],
      "op": "ADD",
      "path": "20"
    },
    "4230": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "4232": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4235": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "EXP",
      "path": "20"
    },
    "4236": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4237": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4238": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "MUL",
      "path": "20"
    },
    "4248": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "NOT",
      "path": "20"
    },
    "4249": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "AND",
      "path": "20"
    },
    "4250": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4251": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4258": {
      "op": "SHL"
    },
    "4259": {
      "op": "SUB"
    },
    "4260": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "AND",
      "path": "20"
    },
    "4261": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "MUL",
      "path": "20"
    },
    "4262": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "OR",
      "path": "20"
    },
    "4263": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4264": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4265": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11599,
        11654
      ],
      "op": "POP",
      "path": "20"
    },
    "4266": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11698,
        11707
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 22
    },
    "4267": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x5CB181DE12515EAC47130902B874F42CA463496F8F42AD3B13431E7A223740FE"
    },
    "4300": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11721,
        11734
      ],
      "op": "DUP15",
      "path": "20"
    },
    "4301": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11748,
        11766
      ],
      "op": "DUP15",
      "path": "20"
    },
    "4302": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11780,
        11798
      ],
      "op": "DUP15",
      "path": "20"
    },
    "4303": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11812,
        11825
      ],
      "op": "DUP15",
      "path": "20"
    },
    "4304": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11839,
        11845
      ],
      "op": "DUP15",
      "path": "20"
    },
    "4305": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11859,
        11864
      ],
      "op": "DUP10",
      "path": "20"
    },
    "4306": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11903,
        11917
      ],
      "op": "DUP16",
      "path": "20"
    },
    "4307": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11885,
        11900
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4308": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11885,
        11917
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10DD"
    },
    "4311": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11885,
        11917
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4312": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11885,
        11917
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4313": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11885,
        11917
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "4316": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11885,
        11917
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4317": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11885,
        11917
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4318": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4320": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4321": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4322": {
      "op": "SWAP8"
    },
    "4323": {
      "op": "DUP9"
    },
    "4324": {
      "op": "MSTORE"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4331": {
      "op": "SHL"
    },
    "4332": {
      "op": "SUB"
    },
    "4333": {
      "op": "SWAP7"
    },
    "4334": {
      "op": "DUP8"
    },
    "4335": {
      "op": "AND"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4338": {
      "op": "DUP10"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "SWAP5"
    },
    "4342": {
      "op": "DUP7"
    },
    "4343": {
      "op": "AND"
    },
    "4344": {
      "op": "DUP8"
    },
    "4345": {
      "op": "DUP7"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "MSTORE"
    },
    "4348": {
      "op": "SWAP3"
    },
    "4349": {
      "op": "SWAP1"
    },
    "4350": {
      "op": "SWAP5"
    },
    "4351": {
      "op": "AND"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4354": {
      "op": "DUP7"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4359": {
      "op": "DUP6"
    },
    "4360": {
      "op": "ADD"
    },
    "4361": {
      "op": "MSTORE"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4368": {
      "op": "SHL"
    },
    "4369": {
      "op": "SUB"
    },
    "4370": {
      "op": "SWAP1"
    },
    "4371": {
      "op": "SWAP3"
    },
    "4372": {
      "op": "AND"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4375": {
      "op": "DUP5"
    },
    "4376": {
      "op": "ADD"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4383": {
      "op": "SWAP1"
    },
    "4384": {
      "op": "SWAP2"
    },
    "4385": {
      "op": "AND"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4388": {
      "op": "DUP4"
    },
    "4389": {
      "op": "ADD"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4392": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4393": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4394": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4395": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "SUB",
      "path": "20"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4398": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "ADD",
      "path": "20"
    },
    "4399": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4400": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11670,
        11928
      ],
      "op": "LOG2",
      "path": "20"
    },
    "4401": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        12086
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 23,
      "value": "0x115C"
    },
    "4404": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11975,
        11985
      ],
      "op": "CALLER",
      "path": "20"
    },
    "4405": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12007,
        12011
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4406": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12054,
        12076
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4407": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12051
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1140"
    },
    "4410": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12035,
        12051
      ],
      "op": "DUP10",
      "path": "20"
    },
    "4411": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12032
      ],
      "op": "DUP15",
      "path": "20"
    },
    "4412": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12051
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "4415": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        12026,
        12051
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4416": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12051
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4417": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12076
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x114A"
    },
    "4420": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12076
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4421": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12076
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4422": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12076
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "4425": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        12026,
        12076
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4426": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12026,
        12076
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        11961
      ],
      "op": "DUP11",
      "path": "20"
    },
    "4436": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        11961
      ],
      "op": "AND",
      "path": "20"
    },
    "4437": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        11961
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4438": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        12086
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4439": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        12086
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4440": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        11961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23EC"
    },
    "4443": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11939,
        12086
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4444": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11939,
        12086
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12104,
        12113
      ],
      "op": "SWAP12",
      "path": "20",
      "statement": 24
    },
    "4447": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9877,
        12120
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "op": "POP"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "POP"
    },
    "4453": {
      "op": "POP"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "POP"
    },
    "4456": {
      "op": "POP"
    },
    "4457": {
      "op": "POP"
    },
    "4458": {
      "op": "POP"
    },
    "4459": {
      "fn": "RequestManager.createRequest",
      "jump": "o",
      "offset": [
        9877,
        12120
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4460": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4461": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1174"
    },
    "4464": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "4467": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4468": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4475": {
      "op": "SHL"
    },
    "4476": {
      "op": "SUB"
    },
    "4477": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 25
    },
    "4478": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "AND",
      "path": "18"
    },
    "4479": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4481": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4482": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4483": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4484": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1340,
        1344
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4486": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4488": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4489": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4490": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4491": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4493": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4494": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4495": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4496": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1337
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4497": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4498": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4501": {
      "op": "NOT"
    },
    "4502": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "AND",
      "path": "18"
    },
    "4503": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4504": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4505": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "OR",
      "path": "18"
    },
    "4506": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4507": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4508": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1320,
        1344
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4509": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 26
    },
    "4510": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4511": {
      "op": "SWAP2"
    },
    "4512": {
      "op": "DUP3"
    },
    "4513": {
      "op": "MSTORE"
    },
    "4514": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x371FC559C30F70424413FED6BF7E57DC939651331ABAD5C970A8EA0921C80B2E"
    },
    "4547": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4548": {
      "op": "ADD"
    },
    "4549": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4550": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4552": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4553": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4554": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4555": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SUB",
      "path": "18"
    },
    "4556": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4557": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1360,
        1374
      ],
      "op": "LOG1",
      "path": "18"
    },
    "4558": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1256,
        1381
      ],
      "op": "POP",
      "path": "18"
    },
    "4559": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "o",
      "offset": [
        1256,
        1381
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4560": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1603,
        1733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4561": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D8"
    },
    "4564": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "4567": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4568": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4575": {
      "op": "SHL"
    },
    "4576": {
      "op": "SUB"
    },
    "4577": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 27
    },
    "4578": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "AND",
      "path": "18"
    },
    "4579": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4581": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4582": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4583": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4584": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1687
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4586": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4588": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4589": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4590": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4591": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4593": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4594": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4595": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4596": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1677,
        1694
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4597": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4598": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4601": {
      "op": "NOT"
    },
    "4602": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "AND",
      "path": "18"
    },
    "4603": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4604": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1670,
        1694
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4605": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 28
    },
    "4606": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4607": {
      "op": "SWAP2"
    },
    "4608": {
      "op": "DUP3"
    },
    "4609": {
      "op": "MSTORE"
    },
    "4610": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x4E774C97F73F4BEA034579E4224498D7D9B3A4109EAA70ED3D85C97A5855F198"
    },
    "4643": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4644": {
      "op": "ADD"
    },
    "4645": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11C5"
    },
    "4648": {
      "op": "JUMP"
    },
    "4649": {
      "fn": "RequestManager.unpause",
      "offset": [
        30014,
        30079
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4650": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1231"
    },
    "4653": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "4656": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4657": {
      "fn": "RequestManager.unpause",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4658": {
      "fn": "RequestManager.unpause",
      "offset": [
        30062,
        30072
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 29,
      "value": "0x1239"
    },
    "4661": {
      "fn": "RequestManager.unpause",
      "offset": [
        30062,
        30070
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24B1"
    },
    "4664": {
      "fn": "RequestManager.unpause",
      "jump": "i",
      "offset": [
        30062,
        30072
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4665": {
      "fn": "RequestManager.unpause",
      "offset": [
        30062,
        30072
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4666": {
      "fn": "RequestManager.unpause",
      "jump": "o",
      "offset": [
        30014,
        30079
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4667": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4668": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4670": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4671": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4672": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4673": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4675": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4677": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4678": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4680": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4681": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4682": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4683": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4684": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4691": {
      "op": "SHL"
    },
    "4692": {
      "op": "SUB"
    },
    "4693": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "22"
    },
    "4694": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "22"
    },
    "4695": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4696": {
      "branch": 193,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "22"
    },
    "4697": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1289"
    },
    "4700": {
      "branch": 193,
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4701": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4708": {
      "op": "SHL"
    },
    "4709": {
      "op": "SUB"
    },
    "4710": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4711": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "22"
    },
    "4712": {
      "branch": 194,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "22"
    },
    "4713": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1284"
    },
    "4716": {
      "branch": 194,
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4717": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4719": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4726": {
      "op": "SHL"
    },
    "4727": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4728": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4729": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4731": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "22"
    },
    "4732": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "4735": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4736": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD7"
    },
    "4739": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4740": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4741": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x134F"
    },
    "4744": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4745": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4746": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4748": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4749": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4750": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4751": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4753": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4755": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4756": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4758": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4759": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4760": {
      "offset": [
        2314,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4762": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "22"
    },
    "4763": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "op": "SUB"
    },
    "4772": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "22"
    },
    "4773": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4774": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12C1"
    },
    "4777": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4778": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4780": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4787": {
      "op": "SHL"
    },
    "4788": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4789": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4790": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4792": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "22"
    },
    "4793": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "4796": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4797": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x300C"
    },
    "4800": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4801": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4802": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4804": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4805": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4812": {
      "op": "SHL"
    },
    "4813": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4814": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "op": "SUB"
    },
    "4823": {
      "op": "DUP4"
    },
    "4824": {
      "op": "DUP2"
    },
    "4825": {
      "op": "AND"
    },
    "4826": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4828": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4829": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "4830": {
      "op": "MSTORE"
    },
    "4831": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4834": {
      "op": "DUP4"
    },
    "4835": {
      "op": "ADD"
    },
    "4836": {
      "op": "MSTORE"
    },
    "4837": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4838": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "22"
    },
    "4839": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4840": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x845C5443"
    },
    "4845": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4848": {
      "op": "ADD"
    },
    "4849": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4851": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4853": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4854": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4855": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4856": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "22"
    },
    "4857": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4858": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "22"
    },
    "4859": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "22"
    },
    "4860": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "4861": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4862": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4863": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4864": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x130D"
    },
    "4867": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4868": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4869": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4871": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4872": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "4873": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4874": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4876": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4877": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4878": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "4879": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "4880": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "4881": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "4882": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4884": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4885": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "4886": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "4888": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "22"
    },
    "4889": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "4891": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4892": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "4893": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "22"
    },
    "4894": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4895": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "4896": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4897": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4899": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4900": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "22"
    },
    "4901": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4902": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "22"
    },
    "4903": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4904": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1331"
    },
    "4907": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4908": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4909": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x304E"
    },
    "4912": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4913": {
      "branch": 195,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4914": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x134D"
    },
    "4917": {
      "branch": 195,
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4918": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4920": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4927": {
      "op": "SHL"
    },
    "4928": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4929": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4930": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4932": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "22"
    },
    "4933": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "4936": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4937": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD7"
    },
    "4940": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4941": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4942": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "22"
    },
    "4943": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4944": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28163,
        28186
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4946": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4947": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4948": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4949": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28197
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "4951": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4953": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4954": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4955": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4956": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4958": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4959": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4960": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4961": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28232
      ],
      "op": "SWAP3",
      "path": "20",
      "statement": 30
    },
    "4962": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28232
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4963": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4964": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4965": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "AND",
      "path": "20"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4979": {
      "op": "SHL"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4986": {
      "op": "SHL"
    },
    "4987": {
      "op": "SUB"
    },
    "4988": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "DUP11",
      "path": "20"
    },
    "4989": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "AND",
      "path": "20"
    },
    "4990": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4991": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4992": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "MUL",
      "path": "20"
    },
    "4993": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4994": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4995": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4996": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "OR",
      "path": "20"
    },
    "4997": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4998": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4999": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28218,
        28241
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5000": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28251,
        28265
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 31,
      "value": "0x6"
    },
    "5002": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28251,
        28265
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5003": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28251,
        28265
      ],
      "op": "ADD",
      "path": "20"
    },
    "5004": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28251,
        28274
      ],
      "op": "DUP11",
      "path": "20"
    },
    "5005": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28251,
        28274
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5006": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28251,
        28274
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5007": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "DUP10",
      "path": "20",
      "statement": 32
    },
    "5008": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5009": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5010": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5012": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28307
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5013": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28307
      ],
      "op": "ADD",
      "path": "20"
    },
    "5014": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5015": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5016": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5017": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5018": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5019": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28315
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5020": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28323
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5021": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28323
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5024": {
      "op": "NOT"
    },
    "5025": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28323
      ],
      "op": "AND",
      "path": "20"
    },
    "5026": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28323
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5027": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28285,
        28323
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5028": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 33
    },
    "5029": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5030": {
      "op": "DUP11"
    },
    "5031": {
      "op": "DUP2"
    },
    "5032": {
      "op": "MSTORE"
    },
    "5033": {
      "op": "SWAP2"
    },
    "5034": {
      "op": "DUP3"
    },
    "5035": {
      "op": "ADD"
    },
    "5036": {
      "op": "SWAP4"
    },
    "5037": {
      "op": "SWAP1"
    },
    "5038": {
      "op": "SWAP4"
    },
    "5039": {
      "op": "MSTORE"
    },
    "5040": {
      "op": "SWAP2"
    },
    "5041": {
      "op": "DUP3"
    },
    "5042": {
      "op": "ADD"
    },
    "5043": {
      "op": "DUP8"
    },
    "5044": {
      "op": "SWAP1"
    },
    "5045": {
      "op": "MSTORE"
    },
    "5046": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28189,
        28208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5047": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736"
    },
    "5080": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5083": {
      "op": "ADD"
    },
    "5084": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5086": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5087": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5088": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5089": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "SUB",
      "path": "20"
    },
    "5090": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5091": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28339,
        28381
      ],
      "op": "LOG1",
      "path": "20"
    },
    "5092": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        28153,
        28388
      ],
      "op": "POP",
      "path": "20"
    },
    "5093": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "22"
    },
    "5094": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "POP",
      "path": "20"
    },
    "5095": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "POP",
      "path": "20"
    },
    "5096": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "POP",
      "path": "20"
    },
    "5097": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "POP",
      "path": "20"
    },
    "5098": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        27974,
        28388
      ],
      "op": "POP",
      "path": "20"
    },
    "5099": {
      "fn": "RequestManager.resolveRequest",
      "jump": "o",
      "offset": [
        27974,
        28388
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5100": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5101": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F4"
    },
    "5104": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "5107": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5108": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0x1239"
    },
    "5112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2503"
    },
    "5117": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5118": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5119": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1406"
    },
    "5122": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "5125": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5126": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5127": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 35,
      "value": "0x1411"
    },
    "5130": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1578,
        1591
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5131": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1593,
        1599
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5132": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1601,
        1610
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5133": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1577
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2553"
    },
    "5136": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5137": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5138": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "22"
    },
    "5139": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "22"
    },
    "5140": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "22"
    },
    "5141": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5142": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5143": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13549,
        13555
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5145": {
      "offset": [
        8071,
        8090
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5146": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5147": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5148": {
      "offset": [
        8071,
        8079
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "5150": {
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5152": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5153": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5155": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5156": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5157": {
      "offset": [
        8071,
        8097
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5158": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13499,
        13508
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5159": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13499,
        13508
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5166": {
      "op": "SHL"
    },
    "5167": {
      "op": "SUB"
    },
    "5168": {
      "offset": [
        8071,
        8097
      ],
      "op": "AND",
      "path": "20"
    },
    "5169": {
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x144C"
    },
    "5172": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5173": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5175": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5176": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "offset": [
        8050,
        8156
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5184": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5185": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5187": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "ADD",
      "path": "20"
    },
    "5188": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "5191": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5192": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3070"
    },
    "5195": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5196": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5197": {
      "offset": [
        983,
        993
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5198": {
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5200": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5201": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5202": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5203": {
      "offset": [
        972,
        982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "5205": {
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5207": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5208": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5210": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5211": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5212": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5213": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "5215": {
      "branch": 188,
      "fn": "RequestManager.claimRequest",
      "offset": [
        972,
        994
      ],
      "op": "AND",
      "path": "18"
    },
    "5216": {
      "offset": [
        964,
        1021
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14A4"
    },
    "5219": {
      "branch": 188,
      "offset": [
        964,
        1021
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5220": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5222": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5229": {
      "op": "SHL"
    },
    "5230": {
      "offset": [
        964,
        1021
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5231": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5234": {
      "offset": [
        964,
        1021
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5236": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5237": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        964,
        1021
      ],
      "op": "ADD",
      "path": "18"
    },
    "5238": {
      "op": "MSTORE"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5243": {
      "op": "DUP3"
    },
    "5244": {
      "op": "ADD"
    },
    "5245": {
      "op": "MSTORE"
    },
    "5246": {
      "op": "PUSH22",
      "value": "0x14D95B99195C881B9BDD081DDA1A5D195B1A5CDD1959"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "5271": {
      "op": "SHL"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5274": {
      "op": "DUP3"
    },
    "5275": {
      "op": "ADD"
    },
    "5276": {
      "op": "MSTORE"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5279": {
      "op": "ADD"
    },
    "5280": {
      "offset": [
        964,
        1021
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA30"
    },
    "5283": {
      "op": "JUMP"
    },
    "5284": {
      "offset": [
        964,
        1021
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5285": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13571,
        13594
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5287": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5288": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5289": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5290": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13605
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "5292": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5294": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5295": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5297": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5298": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13597,
        13616
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5299": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13684
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x4"
    },
    "5301": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13684
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5302": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13684
      ],
      "op": "ADD",
      "path": "20"
    },
    "5303": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13684
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5304": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14E8"
    },
    "5307": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13708
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5308": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13687,
        13708
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "5341": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13687,
        13708
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5342": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13684
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5347": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13684
      ],
      "op": "AND",
      "path": "20"
    },
    "5348": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "5351": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13666,
        13708
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5352": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13666,
        13708
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5353": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13648,
        13663
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "5354": {
      "branch": 149,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13648,
        13708
      ],
      "op": "LT",
      "path": "20"
    },
    "5355": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1540"
    },
    "5358": {
      "branch": 149,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5359": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5361": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5368": {
      "op": "SHL"
    },
    "5369": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5370": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5373": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5375": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5376": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "ADD",
      "path": "20"
    },
    "5377": {
      "op": "MSTORE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5382": {
      "op": "DUP3"
    },
    "5383": {
      "op": "ADD"
    },
    "5384": {
      "op": "MSTORE"
    },
    "5385": {
      "op": "PUSH32",
      "value": "0x526571756573742063616E6E6F7420626520636C61696D656420616E796D6F72"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5420": {
      "op": "DUP3"
    },
    "5421": {
      "op": "ADD"
    },
    "5422": {
      "op": "MSTORE"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5430": {
      "op": "DUP3"
    },
    "5431": {
      "op": "ADD"
    },
    "5432": {
      "op": "MSTORE"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "5439": {
      "op": "JUMP"
    },
    "5440": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13627,
        13767
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5441": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13785,
        13808
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 37,
      "value": "0x5"
    },
    "5443": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13785,
        13808
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5444": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13785,
        13808
      ],
      "op": "ADD",
      "path": "20"
    },
    "5445": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13785,
        13808
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5452": {
      "op": "SHL"
    },
    "5453": {
      "op": "SUB"
    },
    "5454": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13785,
        13808
      ],
      "op": "AND",
      "path": "20"
    },
    "5455": {
      "branch": 150,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13785,
        13813
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5456": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1597"
    },
    "5459": {
      "branch": 150,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5460": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5462": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5469": {
      "op": "SHL"
    },
    "5470": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5471": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5474": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5476": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5477": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "ADD",
      "path": "20"
    },
    "5478": {
      "op": "MSTORE"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5483": {
      "op": "DUP3"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "op": "MSTORE"
    },
    "5486": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5517": {
      "op": "DUP3"
    },
    "5518": {
      "op": "ADD"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5522": {
      "op": "ADD"
    },
    "5523": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "5526": {
      "op": "JUMP"
    },
    "5527": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13777,
        13843
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5528": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13874,
        13884
      ],
      "op": "PUSH32",
      "path": "20",
      "statement": 38,
      "value": "0x0"
    },
    "5561": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13861,
        13870
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "5562": {
      "branch": 151,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13861,
        13884
      ],
      "op": "EQ",
      "path": "20"
    },
    "5563": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15FD"
    },
    "5566": {
      "branch": 151,
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5567": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5569": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5576": {
      "op": "SHL"
    },
    "5577": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5578": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5581": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5583": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5584": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "ADD",
      "path": "20"
    },
    "5585": {
      "op": "MSTORE"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5590": {
      "op": "DUP3"
    },
    "5591": {
      "op": "ADD"
    },
    "5592": {
      "op": "MSTORE"
    },
    "5593": {
      "op": "PUSH20",
      "value": "0x125B9D985B1A59081CDD185AD948185B5BDD5B9D"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "5616": {
      "op": "SHL"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5619": {
      "op": "DUP3"
    },
    "5620": {
      "op": "ADD"
    },
    "5621": {
      "op": "MSTORE"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5624": {
      "op": "ADD"
    },
    "5625": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "5628": {
      "op": "JUMP"
    },
    "5629": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13909
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5630": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13927,
        13933
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 39
    },
    "5631": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1643"
    },
    "5634": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5635": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5637": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5644": {
      "op": "SHL"
    },
    "5645": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5646": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5649": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5651": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5652": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "ADD",
      "path": "20"
    },
    "5653": {
      "op": "MSTORE"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5658": {
      "op": "DUP3"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "MSTORE"
    },
    "5661": {
      "op": "PUSH22",
      "value": "0x46696C6C4964206D757374206E6F742062652030783"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "5686": {
      "op": "SHL"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5689": {
      "op": "DUP3"
    },
    "5690": {
      "op": "ADD"
    },
    "5691": {
      "op": "MSTORE"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5694": {
      "op": "ADD"
    },
    "5695": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "5698": {
      "op": "JUMP"
    },
    "5699": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13919,
        13974
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5700": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14009,
        14010
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 40,
      "value": "0x1"
    },
    "5702": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        13992
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5703": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14005
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5705": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14005
      ],
      "op": "ADD",
      "path": "20"
    },
    "5706": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14005
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1C"
    },
    "5708": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5709": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5710": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5711": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5712": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5713": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5714": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5717": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "EXP",
      "path": "20"
    },
    "5718": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5719": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DIV",
      "path": "20"
    },
    "5720": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5725": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "AND",
      "path": "20"
    },
    "5726": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1667"
    },
    "5729": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5730": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5731": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x310F"
    },
    "5734": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13985,
        14010
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5735": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5736": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5737": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5738": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5743": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5744": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5745": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "AND",
      "path": "20"
    },
    "5746": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5749": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5750": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5751": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "EXP",
      "path": "20"
    },
    "5752": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5753": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5754": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "MUL",
      "path": "20"
    },
    "5755": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5756": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "MUL",
      "path": "20"
    },
    "5757": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "NOT",
      "path": "20"
    },
    "5758": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "AND",
      "path": "20"
    },
    "5759": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "OR",
      "path": "20"
    },
    "5760": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5761": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5762": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13985,
        14010
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5763": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5765": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5768": {
      "op": "SWAP3"
    },
    "5769": {
      "op": "POP"
    },
    "5770": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14052
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x169F"
    },
    "5773": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14052
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5780": {
      "op": "SHL"
    },
    "5781": {
      "op": "SUB"
    },
    "5782": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5783": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "DIV",
      "path": "20"
    },
    "5784": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14048
      ],
      "op": "AND",
      "path": "20"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5787": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14052
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30E4"
    },
    "5790": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14036,
        14052
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5791": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14036,
        14052
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5792": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14074
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x3"
    },
    "5794": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5795": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5796": {
      "op": "PUSH13",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00"
    },
    "5810": {
      "op": "NOT"
    },
    "5811": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "AND",
      "path": "20"
    },
    "5812": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5821": {
      "op": "SHL"
    },
    "5822": {
      "op": "SUB"
    },
    "5823": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5824": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "AND",
      "path": "20"
    },
    "5825": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "MUL",
      "path": "20"
    },
    "5826": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "OR",
      "path": "20"
    },
    "5827": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5828": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5829": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14062,
        14082
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5833": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14114,
        14143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16F2"
    },
    "5836": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14132,
        14143
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "5869": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14114,
        14129
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "5870": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14114,
        14143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "5873": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14114,
        14143
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5874": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14114,
        14143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5875": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14092,
        14143
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5876": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14092,
        14143
      ],
      "op": "POP",
      "path": "20"
    },
    "5877": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14154,
        14173
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5879": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14182
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "5881": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5883": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14183,
        14188
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5890": {
      "op": "SHL"
    },
    "5891": {
      "op": "SUB"
    },
    "5892": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "AND",
      "path": "20"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5899": {
      "op": "SHL"
    },
    "5900": {
      "op": "SUB"
    },
    "5901": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "AND",
      "path": "20"
    },
    "5902": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5903": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5904": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5906": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "ADD",
      "path": "20"
    },
    "5907": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5908": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5909": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5910": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5912": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "ADD",
      "path": "20"
    },
    "5913": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5915": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14176,
        14189
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5916": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14154,
        14189
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5917": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14154,
        14189
      ],
      "op": "POP",
      "path": "20"
    },
    "5918": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14217,
        14226
      ],
      "op": "DUP8",
      "path": "20",
      "statement": 42
    },
    "5919": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14204
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5920": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14214
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5922": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14214
      ],
      "op": "ADD",
      "path": "20"
    },
    "5923": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14226
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5924": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14226
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5925": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14226
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5926": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14199,
        14226
      ],
      "op": "POP",
      "path": "20"
    },
    "5927": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14252,
        14262
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 43
    },
    "5928": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14241
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5929": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5931": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14249
      ],
      "op": "ADD",
      "path": "20"
    },
    "5932": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5934": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5937": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "EXP",
      "path": "20"
    },
    "5938": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5939": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5940": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5947": {
      "op": "SHL"
    },
    "5948": {
      "op": "SUB"
    },
    "5949": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "MUL",
      "path": "20"
    },
    "5950": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "NOT",
      "path": "20"
    },
    "5951": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "AND",
      "path": "20"
    },
    "5952": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5953": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "op": "SUB"
    },
    "5962": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "AND",
      "path": "20"
    },
    "5963": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "MUL",
      "path": "20"
    },
    "5964": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "OR",
      "path": "20"
    },
    "5965": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5966": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5967": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14236,
        14262
      ],
      "op": "POP",
      "path": "20"
    },
    "5968": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14293,
        14302
      ],
      "op": "CALLVALUE",
      "path": "20",
      "statement": 44
    },
    "5969": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14277
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5970": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14290
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "5972": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14290
      ],
      "op": "ADD",
      "path": "20"
    },
    "5973": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14302
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5974": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14302
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5975": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14302
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5976": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14272,
        14302
      ],
      "op": "POP",
      "path": "20"
    },
    "5977": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14332,
        14343
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 45
    },
    "5978": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5979": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5981": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14329
      ],
      "op": "ADD",
      "path": "20"
    },
    "5982": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14343
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5983": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14343
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5984": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14343
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5985": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14312,
        14343
      ],
      "op": "POP",
      "path": "20"
    },
    "5986": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14368,
        14374
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 46
    },
    "5987": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14358
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5988": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14365
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "5990": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14365
      ],
      "op": "ADD",
      "path": "20"
    },
    "5991": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14374
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5992": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14374
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5993": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14374
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5994": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14353,
        14374
      ],
      "op": "POP",
      "path": "20"
    },
    "5995": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14413,
        14422
      ],
      "op": "DUP8",
      "path": "20",
      "statement": 47
    },
    "5996": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x763B6170DF0264962938E705B5CBB0E18FD60107C02B64E3261FA233458CE7A"
    },
    "6029": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14436,
        14441
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6030": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14455,
        14465
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6031": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14479,
        14488
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6032": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14510,
        14511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6034": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14526,
        14527
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6035": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14541,
        14552
      ],
      "op": "DUP9",
      "path": "20"
    },
    "6036": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14566,
        14572
      ],
      "op": "DUP15",
      "path": "20"
    },
    "6037": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6039": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6040": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17A7"
    },
    "6043": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "6044": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "6045": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "6046": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "6047": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6048": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6049": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6050": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6051": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x312E"
    },
    "6054": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14390,
        14582
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6055": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6056": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6058": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6059": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6060": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6061": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SUB",
      "path": "20"
    },
    "6062": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6063": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14390,
        14582
      ],
      "op": "LOG2",
      "path": "20"
    },
    "6064": {
      "op": "POP"
    },
    "6065": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14600,
        14605
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 48
    },
    "6066": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14600,
        14605
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "6067": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13386,
        14612
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "6068": {
      "op": "POP"
    },
    "6069": {
      "op": "POP"
    },
    "6070": {
      "op": "POP"
    },
    "6071": {
      "op": "POP"
    },
    "6072": {
      "op": "POP"
    },
    "6073": {
      "op": "POP"
    },
    "6074": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        13386,
        14612
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6075": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6076": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C3"
    },
    "6079": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "6082": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6083": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6084": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 49,
      "value": "0x17CF"
    },
    "6087": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1196,
        1209
      ],
      "op": "CHAINID",
      "path": "22"
    },
    "6088": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1211,
        1217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6089": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1227,
        1228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6091": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1195
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2553"
    },
    "6094": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6095": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6096": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "POP",
      "path": "22"
    },
    "6097": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6098": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6099": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DA"
    },
    "6102": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "6105": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6106": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6107": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25764,
        25778
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 50,
      "value": "0x9"
    },
    "6109": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25764,
        25798
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6110": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25764,
        25798
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6111": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25764,
        25798
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6112": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25764,
        25798
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6113": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25808,
        25816
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 51,
      "value": "0x8"
    },
    "6115": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25808,
        25830
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6116": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25840,
        25848
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 52,
      "value": "0x7"
    },
    "6118": {
      "fn": "RequestManager.updateFeeData",
      "offset": [
        25840,
        25862
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6119": {
      "fn": "RequestManager.updateFeeData",
      "jump": "o",
      "offset": [
        25613,
        25869
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6120": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6121": {
      "offset": [
        8109,
        8110
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6123": {
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6124": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6125": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6126": {
      "offset": [
        8071,
        8079
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "6128": {
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6130": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6131": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6133": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6134": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8071,
        8090
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6135": {
      "offset": [
        8071,
        8097
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6136": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12393,
        12402
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6137": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12393,
        12402
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6144": {
      "op": "SHL"
    },
    "6145": {
      "op": "SUB"
    },
    "6146": {
      "offset": [
        8071,
        8097
      ],
      "op": "AND",
      "path": "20"
    },
    "6147": {
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x181E"
    },
    "6150": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6151": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6153": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6160": {
      "op": "SHL"
    },
    "6161": {
      "offset": [
        8050,
        8156
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6162": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6163": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6165": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "ADD",
      "path": "20"
    },
    "6166": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "6169": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6170": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3070"
    },
    "6173": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6174": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8050,
        8156
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6175": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12418,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6177": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6178": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6179": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6180": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12452
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "6182": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6184": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6185": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6186": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6187": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6189": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6190": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6191": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12444,
        12463
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6192": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12482,
        12505
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 53
    },
    "6193": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12482,
        12505
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6194": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12482,
        12505
      ],
      "op": "ADD",
      "path": "20"
    },
    "6195": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12482,
        12505
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12482,
        12505
      ],
      "op": "AND",
      "path": "20"
    },
    "6205": {
      "branch": 152,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12482,
        12510
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6206": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1885"
    },
    "6209": {
      "branch": 152,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6210": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6212": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6219": {
      "op": "SHL"
    },
    "6220": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6221": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6224": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6226": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6227": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "ADD",
      "path": "20"
    },
    "6228": {
      "op": "MSTORE"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6233": {
      "op": "DUP3"
    },
    "6234": {
      "op": "ADD"
    },
    "6235": {
      "op": "MSTORE"
    },
    "6236": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6264": {
      "op": "SHL"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6267": {
      "op": "DUP3"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "MSTORE"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "6276": {
      "op": "JUMP"
    },
    "6277": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12474,
        12540
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6278": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12590,
        12608
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 54,
      "value": "0x4"
    },
    "6280": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12590,
        12608
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6281": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12590,
        12608
      ],
      "op": "ADD",
      "path": "20"
    },
    "6282": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12590,
        12608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6283": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12590,
        12608
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6288": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12590,
        12608
      ],
      "op": "AND",
      "path": "20"
    },
    "6289": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12571,
        12586
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "6290": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12571,
        12608
      ],
      "op": "LT",
      "path": "20"
    },
    "6291": {
      "branch": 153,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12571,
        12608
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6292": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18DF"
    },
    "6295": {
      "branch": 153,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6296": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6298": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6305": {
      "op": "SHL"
    },
    "6306": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6307": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6310": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6312": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6313": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "ADD",
      "path": "20"
    },
    "6314": {
      "op": "MSTORE"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6319": {
      "op": "DUP3"
    },
    "6320": {
      "op": "ADD"
    },
    "6321": {
      "op": "MSTORE"
    },
    "6322": {
      "op": "PUSH32",
      "value": "0x52657175657374206E6F74206578706972656420796574000000000000000000"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6357": {
      "op": "DUP3"
    },
    "6358": {
      "op": "ADD"
    },
    "6359": {
      "op": "MSTORE"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "6366": {
      "op": "JUMP"
    },
    "6367": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12550,
        12657
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6368": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 55,
      "value": "0x4"
    },
    "6370": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6371": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "ADD",
      "path": "20"
    },
    "6372": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6377": {
      "op": "SHL"
    },
    "6378": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6379": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "DIV",
      "path": "20"
    },
    "6380": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6385": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12695
      ],
      "op": "AND",
      "path": "20"
    },
    "6386": {
      "branch": 154,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12675,
        12700
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6387": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1936"
    },
    "6390": {
      "branch": 154,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6391": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6393": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6394": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6400": {
      "op": "SHL"
    },
    "6401": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6402": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6405": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6407": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6408": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "ADD",
      "path": "20"
    },
    "6409": {
      "op": "MSTORE"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6414": {
      "op": "DUP3"
    },
    "6415": {
      "op": "ADD"
    },
    "6416": {
      "op": "MSTORE"
    },
    "6417": {
      "op": "PUSH21",
      "value": "0x41637469766520636C61696D732072756E6E696E67"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6441": {
      "op": "SHL"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6444": {
      "op": "DUP3"
    },
    "6445": {
      "op": "ADD"
    },
    "6446": {
      "op": "MSTORE"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6449": {
      "op": "ADD"
    },
    "6450": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "6453": {
      "op": "JUMP"
    },
    "6454": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12667,
        12726
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6455": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12760
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 56,
      "value": "0x5"
    },
    "6457": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12760
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6458": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12760
      ],
      "op": "ADD",
      "path": "20"
    },
    "6459": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12789
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6460": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12789
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6467": {
      "op": "SHL"
    },
    "6468": {
      "op": "SUB"
    },
    "6469": {
      "op": "NOT"
    },
    "6470": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12789
      ],
      "op": "AND",
      "path": "20"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6477": {
      "op": "SHL"
    },
    "6478": {
      "op": "SUB"
    },
    "6479": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12789
      ],
      "op": "OR",
      "path": "20"
    },
    "6480": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12789
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6481": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12737,
        12789
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6482": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12833,
        12847
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 57
    },
    "6483": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12833,
        12847
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6484": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6486": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6487": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6488": {
      "op": "DUP6"
    },
    "6489": {
      "op": "DUP2"
    },
    "6490": {
      "op": "MSTORE"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6497": {
      "op": "SHL"
    },
    "6498": {
      "op": "SUB"
    },
    "6499": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12833,
        12847
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6500": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12833,
        12847
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6501": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12833,
        12847
      ],
      "op": "AND",
      "path": "20"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6504": {
      "op": "DUP4"
    },
    "6505": {
      "op": "ADD"
    },
    "6506": {
      "op": "MSTORE"
    },
    "6507": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565"
    },
    "6540": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6541": {
      "op": "ADD"
    },
    "6542": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6544": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6545": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6546": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6547": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "SUB",
      "path": "20"
    },
    "6548": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6549": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12805,
        12848
      ],
      "op": "LOG1",
      "path": "20"
    },
    "6550": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6552": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6553": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "ADD",
      "path": "20"
    },
    "6554": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6555": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12950,
        12964
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 58
    },
    "6556": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12950,
        12964
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6557": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6559": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6560": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "ADD",
      "path": "20"
    },
    "6561": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6562": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        12992
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "6564": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        12992
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6565": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        12992
      ],
      "op": "ADD",
      "path": "20"
    },
    "6566": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        12992
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6573": {
      "op": "SHL"
    },
    "6574": {
      "op": "SUB"
    },
    "6575": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6576": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6577": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "AND",
      "path": "20"
    },
    "6578": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12881,
        12907
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6579": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        13040
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19FA"
    },
    "6582": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        13040
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6583": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12950,
        12964
      ],
      "op": "AND",
      "path": "20"
    },
    "6584": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12950,
        12964
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6591": {
      "op": "SHL"
    },
    "6592": {
      "op": "SUB"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6597": {
      "op": "SHL"
    },
    "6598": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6599": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "DIV",
      "path": "20"
    },
    "6600": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6601": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "AND",
      "path": "20"
    },
    "6602": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13011,
        13030
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6603": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13008
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19DF"
    },
    "6606": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13008
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6607": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "PUSH5",
      "path": "20",
      "value": "0x100000000"
    },
    "6613": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6614": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "DIV",
      "path": "20"
    },
    "6615": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6616": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6617": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "AND",
      "path": "20"
    },
    "6618": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12995,
        13008
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6619": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13008
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "6622": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12978,
        13008
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6623": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13008
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6624": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13030
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E9"
    },
    "6627": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13030
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6628": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13030
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6629": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13030
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "6632": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12978,
        13030
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6633": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12978,
        13030
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6640": {
      "op": "SHL"
    },
    "6641": {
      "op": "SUB"
    },
    "6642": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        12936
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6643": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        12936
      ],
      "op": "AND",
      "path": "20"
    },
    "6644": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        12936
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6645": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        13040
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6646": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        12936
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2665"
    },
    "6649": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12918,
        13040
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6650": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12918,
        13040
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6651": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12408,
        13047
      ],
      "op": "POP",
      "path": "20"
    },
    "6652": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12408,
        13047
      ],
      "op": "POP",
      "path": "20"
    },
    "6653": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "POP",
      "path": "20"
    },
    "6654": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12302,
        13047
      ],
      "op": "POP",
      "path": "20"
    },
    "6655": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "o",
      "offset": [
        12302,
        13047
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6656": {
      "fn": "RequestManager.pause",
      "offset": [
        29682,
        29743
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6657": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A08"
    },
    "6660": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "6663": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6664": {
      "fn": "RequestManager.pause",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6665": {
      "fn": "RequestManager.pause",
      "offset": [
        29728,
        29736
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 59,
      "value": "0x1239"
    },
    "6668": {
      "fn": "RequestManager.pause",
      "offset": [
        29728,
        29734
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2695"
    },
    "6671": {
      "fn": "RequestManager.pause",
      "jump": "i",
      "offset": [
        29728,
        29736
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6672": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6673": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7557,
        7564
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6675": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7611,
        7620
      ],
      "op": "PUSH3",
      "path": "20",
      "statement": 60,
      "value": "0xF4240"
    },
    "6679": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7593,
        7607
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "6681": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7593,
        7607
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6682": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7584,
        7590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6683": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7584,
        7607
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A24"
    },
    "6686": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7584,
        7607
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6687": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7584,
        7607
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6688": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7584,
        7607
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3178"
    },
    "6691": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7584,
        7607
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6692": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7584,
        7607
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6693": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7583,
        7620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A2E"
    },
    "6696": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7583,
        7620
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6697": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7583,
        7620
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6698": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7583,
        7620
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3197"
    },
    "6701": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7583,
        7620
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6702": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7583,
        7620
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6703": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7576,
        7620
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6704": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7499,
        7627
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6705": {
      "op": "POP"
    },
    "6706": {
      "op": "POP"
    },
    "6707": {
      "fn": "RequestManager.protocolFee",
      "jump": "o",
      "offset": [
        7499,
        7627
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6708": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6715": {
      "op": "SHL"
    },
    "6716": {
      "op": "SUB"
    },
    "6717": {
      "offset": [
        8285,
        8300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6718": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "AND",
      "path": "20"
    },
    "6719": {
      "offset": [
        8320,
        8321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6721": {
      "offset": [
        8285,
        8300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6722": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6723": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6724": {
      "offset": [
        8285,
        8291
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6726": {
      "offset": [
        8285,
        8300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6728": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6729": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6731": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6732": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8300
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6733": {
      "offset": [
        8285,
        8308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6735": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8308
      ],
      "op": "ADD",
      "path": "20"
    },
    "6736": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8285,
        8308
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6737": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15904,
        15911
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6738": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15904,
        15911
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6745": {
      "op": "SHL"
    },
    "6746": {
      "op": "SUB"
    },
    "6747": {
      "offset": [
        8285,
        8308
      ],
      "op": "AND",
      "path": "20"
    },
    "6748": {
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A9B"
    },
    "6751": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8277,
        8344
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6752": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6754": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8277,
        8344
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6755": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6761": {
      "op": "SHL"
    },
    "6762": {
      "offset": [
        8277,
        8344
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6763": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8277,
        8344
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6766": {
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6768": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8277,
        8344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6769": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8277,
        8344
      ],
      "op": "ADD",
      "path": "20"
    },
    "6770": {
      "op": "MSTORE"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6775": {
      "op": "DUP3"
    },
    "6776": {
      "op": "ADD"
    },
    "6777": {
      "op": "MSTORE"
    },
    "6778": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "6798": {
      "op": "SHL"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6801": {
      "op": "DUP3"
    },
    "6802": {
      "op": "ADD"
    },
    "6803": {
      "op": "MSTORE"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6806": {
      "op": "ADD"
    },
    "6807": {
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "6810": {
      "op": "JUMP"
    },
    "6811": {
      "offset": [
        8277,
        8344
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6818": {
      "op": "SHL"
    },
    "6819": {
      "op": "SUB"
    },
    "6820": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6821": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "AND",
      "path": "20"
    },
    "6822": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15927,
        15946
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6824": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6825": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6826": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6827": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15955
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6829": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6831": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6832": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6833": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6834": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6836": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6838": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15949,
        15964
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6839": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15994,
        16009
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6840": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15994,
        16009
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6841": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16041,
        16058
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "6843": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16041,
        16058
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6844": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16041,
        16058
      ],
      "op": "ADD",
      "path": "20"
    },
    "6845": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16041,
        16058
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6846": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6847": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6848": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6849": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16102
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "6851": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6852": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "6853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6855": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6856": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16094,
        16113
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6858": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15994,
        16009
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6859": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15994,
        16009
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6860": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16041,
        16058
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6861": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16131,
        16146
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 61
    },
    "6862": {
      "branch": 155,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16131,
        16160
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6863": {
      "op": "GT"
    },
    "6864": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B0B"
    },
    "6867": {
      "branch": 155,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6868": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6870": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6877": {
      "op": "SHL"
    },
    "6878": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6879": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6882": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6884": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6885": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "ADD",
      "path": "20"
    },
    "6886": {
      "op": "MSTORE"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6891": {
      "op": "DUP3"
    },
    "6892": {
      "op": "ADD"
    },
    "6893": {
      "op": "MSTORE"
    },
    "6894": {
      "op": "PUSH13",
      "value": "0x10DB185A5B48195E1C1A5C9959"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "6910": {
      "op": "SHL"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6913": {
      "op": "DUP3"
    },
    "6914": {
      "op": "ADD"
    },
    "6915": {
      "op": "MSTORE"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6918": {
      "op": "ADD"
    },
    "6919": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "6922": {
      "op": "JUMP"
    },
    "6923": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16123,
        16178
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6924": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 62,
      "value": "0x5"
    },
    "6926": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6927": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "ADD",
      "path": "20"
    },
    "6928": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6933": {
      "op": "SHL"
    },
    "6934": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6935": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "DIV",
      "path": "20"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6942": {
      "op": "SHL"
    },
    "6943": {
      "op": "SUB"
    },
    "6944": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16210
      ],
      "op": "AND",
      "path": "20"
    },
    "6945": {
      "branch": 156,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16196,
        16224
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6946": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B6D"
    },
    "6949": {
      "branch": 156,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6950": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6952": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6959": {
      "op": "SHL"
    },
    "6960": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6961": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6964": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6966": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6967": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "ADD",
      "path": "20"
    },
    "6968": {
      "op": "MSTORE"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6973": {
      "op": "DUP3"
    },
    "6974": {
      "op": "ADD"
    },
    "6975": {
      "op": "MSTORE"
    },
    "6976": {
      "op": "PUSH32",
      "value": "0x5265717565737420616C7265616479207265736F6C7665640000000000000000"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7011": {
      "op": "DUP3"
    },
    "7012": {
      "op": "ADD"
    },
    "7013": {
      "op": "MSTORE"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7016": {
      "op": "ADD"
    },
    "7017": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "7020": {
      "op": "JUMP"
    },
    "7021": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16188,
        16253
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7022": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16308,
        16320
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 63,
      "value": "0x8"
    },
    "7024": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16308,
        16320
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7025": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16308,
        16320
      ],
      "op": "ADD",
      "path": "20"
    },
    "7026": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16308,
        16320
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7027": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7029": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7030": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7031": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7032": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "7034": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16307
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7035": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16307
      ],
      "op": "ADD",
      "path": "20"
    },
    "7036": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7038": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7039": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7041": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7042": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7043": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7044": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "7046": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16285,
        16321
      ],
      "op": "AND",
      "path": "20"
    },
    "7047": {
      "branch": 157,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16284,
        16321
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7048": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BCE"
    },
    "7051": {
      "branch": 157,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7052": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7054": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7063": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7066": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7068": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7069": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "ADD",
      "path": "20"
    },
    "7070": {
      "op": "MSTORE"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7075": {
      "op": "DUP3"
    },
    "7076": {
      "op": "ADD"
    },
    "7077": {
      "op": "MSTORE"
    },
    "7078": {
      "op": "PUSH24",
      "value": "0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "7105": {
      "op": "SHL"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7108": {
      "op": "DUP3"
    },
    "7109": {
      "op": "ADD"
    },
    "7110": {
      "op": "MSTORE"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7113": {
      "op": "ADD"
    },
    "7114": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "7117": {
      "op": "JUMP"
    },
    "7118": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16263,
        16371
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7119": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16460,
        16473
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "7121": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16460,
        16473
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7122": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16460,
        16473
      ],
      "op": "ADD",
      "path": "20"
    },
    "7123": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16460,
        16473
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7124": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16506,
        16524
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "7126": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16506,
        16524
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7127": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16506,
        16524
      ],
      "op": "ADD",
      "path": "20"
    },
    "7128": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16506,
        16524
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7129": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16565,
        16591
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "7131": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16565,
        16591
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7132": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16565,
        16591
      ],
      "op": "ADD",
      "path": "20"
    },
    "7133": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16565,
        16591
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7134": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16408,
        16432
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x0"
    },
    "7167": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16408,
        16432
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7174": {
      "op": "SHL"
    },
    "7175": {
      "op": "SUB"
    },
    "7176": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16460,
        16473
      ],
      "op": "AND",
      "path": "20"
    },
    "7177": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16460,
        16473
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7178": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16506,
        16524
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7179": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16606,
        16641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7180": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16606,
        16641
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7181": {
      "branch": 158,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16606,
        16641
      ],
      "op": "GT",
      "path": "20"
    },
    "7182": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16602,
        17258
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7183": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16602,
        17258
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CF8"
    },
    "7186": {
      "branch": 158,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16602,
        17258
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7187": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16661,
        16681
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7188": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16685,
        16686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7190": {
      "branch": 159,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16661,
        16686
      ],
      "op": "SUB",
      "path": "20"
    },
    "7191": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16657,
        16778
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C3B"
    },
    "7194": {
      "branch": 159,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16657,
        16778
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7195": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16741,
        16762
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 64,
      "value": "0x2"
    },
    "7197": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16741,
        16762
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7198": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16741,
        16762
      ],
      "op": "ADD",
      "path": "20"
    },
    "7199": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16741,
        16762
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7200": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7202": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7203": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7204": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7205": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16740
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7207": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7209": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7210": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7212": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7213": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7214": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16725,
        16763
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7215": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C38"
    },
    "7218": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7219": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7220": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7223": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16706,
        16763
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7224": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7225": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7226": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16706,
        16763
      ],
      "op": "POP",
      "path": "20"
    },
    "7227": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16657,
        16778
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7234": {
      "op": "SHL"
    },
    "7235": {
      "op": "SUB"
    },
    "7236": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16820
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 65
    },
    "7237": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16820
      ],
      "op": "AND",
      "path": "20"
    },
    "7238": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16809
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7239": {
      "branch": 160,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16799,
        16820
      ],
      "op": "SUB",
      "path": "20"
    },
    "7240": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C93"
    },
    "7243": {
      "branch": 160,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7244": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7246": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7253": {
      "op": "SHL"
    },
    "7254": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7255": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7258": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7260": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7261": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "ADD",
      "path": "20"
    },
    "7262": {
      "op": "MSTORE"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "MSTORE"
    },
    "7270": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7305": {
      "op": "DUP3"
    },
    "7306": {
      "op": "ADD"
    },
    "7307": {
      "op": "MSTORE"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7310": {
      "op": "ADD"
    },
    "7311": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "7314": {
      "op": "JUMP"
    },
    "7315": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16791,
        16851
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7316": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16938
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 66,
      "value": "0x1C9D"
    },
    "7319": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16918,
        16938
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7320": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16915
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7321": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16938
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31B9"
    },
    "7324": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16903,
        16938
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7325": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16938
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7326": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CA8"
    },
    "7329": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7330": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16941,
        16942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "7332": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7335": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16903,
        16942
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7336": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16903,
        16942
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7337": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16890,
        16899
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "7338": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16890,
        16942
      ],
      "op": "LT",
      "path": "20"
    },
    "7339": {
      "branch": 161,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16890,
        16942
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7340": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CF3"
    },
    "7343": {
      "branch": 161,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7344": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7346": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7353": {
      "op": "SHL"
    },
    "7354": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7355": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7358": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7360": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7361": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "ADD",
      "path": "20"
    },
    "7362": {
      "op": "MSTORE"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7367": {
      "op": "DUP3"
    },
    "7368": {
      "op": "ADD"
    },
    "7369": {
      "op": "MSTORE"
    },
    "7370": {
      "op": "PUSH25",
      "value": "0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "7398": {
      "op": "SHL"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7401": {
      "op": "DUP3"
    },
    "7402": {
      "op": "ADD"
    },
    "7403": {
      "op": "MSTORE"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7406": {
      "op": "ADD"
    },
    "7407": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "7410": {
      "op": "JUMP"
    },
    "7411": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16865,
        17001
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7412": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16602,
        17258
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DC9"
    },
    "7415": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16602,
        17258
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7416": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16602,
        17258
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7417": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17040,
        17050
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 67
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7424": {
      "op": "SHL"
    },
    "7425": {
      "op": "SUB"
    },
    "7426": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17040,
        17061
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7427": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17040,
        17061
      ],
      "op": "AND",
      "path": "20"
    },
    "7428": {
      "branch": 162,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17040,
        17061
      ],
      "op": "EQ",
      "path": "20"
    },
    "7429": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D49"
    },
    "7432": {
      "branch": 162,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7433": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7435": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7442": {
      "op": "SHL"
    },
    "7443": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7444": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7447": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7449": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7450": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "ADD",
      "path": "20"
    },
    "7451": {
      "op": "MSTORE"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7456": {
      "op": "DUP3"
    },
    "7457": {
      "op": "ADD"
    },
    "7458": {
      "op": "MSTORE"
    },
    "7459": {
      "op": "PUSH22",
      "value": "0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7484": {
      "op": "SHL"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7487": {
      "op": "DUP3"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "MSTORE"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7492": {
      "op": "ADD"
    },
    "7493": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "7496": {
      "op": "JUMP"
    },
    "7497": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17032,
        17088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7498": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17178,
        17188
      ],
      "op": "PUSH32",
      "path": "20",
      "statement": 68,
      "value": "0x0"
    },
    "7531": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17175
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D74"
    },
    "7534": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17163,
        17175
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7535": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17160
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7536": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17175
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31B9"
    },
    "7539": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17140,
        17175
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7540": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17175
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7541": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17188
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D7E"
    },
    "7544": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17188
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7545": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17188
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7546": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17188
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7549": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17140,
        17188
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7550": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17140,
        17188
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7551": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17127,
        17136
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "7552": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17127,
        17188
      ],
      "op": "LT",
      "path": "20"
    },
    "7553": {
      "branch": 163,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17127,
        17188
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7554": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DC9"
    },
    "7557": {
      "branch": 163,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7558": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7560": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7567": {
      "op": "SHL"
    },
    "7568": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7569": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7572": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7574": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7575": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "ADD",
      "path": "20"
    },
    "7576": {
      "op": "MSTORE"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7581": {
      "op": "DUP3"
    },
    "7582": {
      "op": "ADD"
    },
    "7583": {
      "op": "MSTORE"
    },
    "7584": {
      "op": "PUSH25",
      "value": "0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "7612": {
      "op": "SHL"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7615": {
      "op": "DUP3"
    },
    "7616": {
      "op": "ADD"
    },
    "7617": {
      "op": "MSTORE"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7620": {
      "op": "ADD"
    },
    "7621": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "7624": {
      "op": "JUMP"
    },
    "7625": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17102,
        17247
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7632": {
      "op": "SHL"
    },
    "7633": {
      "op": "SUB"
    },
    "7634": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17272,
        17293
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7635": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17272,
        17293
      ],
      "op": "AND",
      "path": "20"
    },
    "7636": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17272,
        17282
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7637": {
      "branch": 164,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17272,
        17293
      ],
      "op": "SUB",
      "path": "20"
    },
    "7638": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17628
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DF1"
    },
    "7641": {
      "branch": 164,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17628
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7642": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17309,
        17334
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 69,
      "value": "0x1DE3"
    },
    "7645": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17325,
        17334
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "7646": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17309,
        17334
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7647": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17309,
        17334
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7650": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17309,
        17334
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7651": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17309,
        17334
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7652": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17348,
        17366
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 70,
      "value": "0x2"
    },
    "7654": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17348,
        17366
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7655": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17348,
        17366
      ],
      "op": "ADD",
      "path": "20"
    },
    "7656": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17348,
        17381
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7657": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17348,
        17381
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7658": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17348,
        17381
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7659": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17309,
        17334
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7660": {
      "op": "POP"
    },
    "7661": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17628
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E42"
    },
    "7664": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17628
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7665": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17628
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7666": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17432
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 71,
      "value": "0x4"
    },
    "7668": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17432
      ],
      "op": "DUP9",
      "path": "20"
    },
    "7669": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17432
      ],
      "op": "ADD",
      "path": "20"
    },
    "7670": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7671": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7678": {
      "op": "SHL"
    },
    "7679": {
      "op": "SUB"
    },
    "7680": {
      "op": "NOT"
    },
    "7681": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "AND",
      "path": "20"
    },
    "7682": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17435,
        17445
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7683": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7684": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7685": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "OR",
      "path": "20"
    },
    "7686": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7687": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7688": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17445
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7689": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17432
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7691": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 72
    },
    "7692": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7693": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7694": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17482
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "7696": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17482
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7697": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17482
      ],
      "op": "ADD",
      "path": "20"
    },
    "7698": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7700": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7701": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7703": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7704": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17494
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7705": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7706": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7707": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17498,
        17507
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "7708": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17498,
        17507
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7709": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17412,
        17432
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7710": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E28"
    },
    "7713": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7714": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17498,
        17507
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7715": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17498,
        17507
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7716": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7719": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17459,
        17507
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7720": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7721": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7722": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7723": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17459,
        17507
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7724": {
      "op": "POP"
    },
    "7725": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17521,
        17554
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 73,
      "value": "0x1E38"
    },
    "7728": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17521,
        17554
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7729": {
      "op": "POP"
    },
    "7730": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17545,
        17554
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "7731": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17521,
        17554
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7732": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17521,
        17554
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7735": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17521,
        17554
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7736": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17521,
        17554
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7737": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17568,
        17594
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 74,
      "value": "0x5"
    },
    "7739": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17568,
        17594
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7740": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17568,
        17594
      ],
      "op": "ADD",
      "path": "20"
    },
    "7741": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17568,
        17617
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7742": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17568,
        17617
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7743": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17568,
        17617
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7744": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17521,
        17554
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7745": {
      "op": "POP"
    },
    "7746": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17628
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7747": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17678,
        17689
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7748": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17642,
        17675
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E4D"
    },
    "7751": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17660,
        17675
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7752": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17642,
        17657
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "7753": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17642,
        17675
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7756": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17642,
        17675
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7757": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17642,
        17675
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7758": {
      "branch": 165,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17642,
        17689
      ],
      "op": "GT",
      "path": "20"
    },
    "7759": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17638,
        17808
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7760": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17638,
        17808
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E67"
    },
    "7763": {
      "branch": 165,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17638,
        17808
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7764": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17752
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 75,
      "value": "0x1E5D"
    },
    "7767": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17737,
        17752
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7768": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17734
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "7769": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17752
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7772": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17719,
        17752
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7773": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17752
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7774": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17766,
        17783
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 76,
      "value": "0x7"
    },
    "7776": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17766,
        17783
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7777": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17766,
        17783
      ],
      "op": "ADD",
      "path": "20"
    },
    "7778": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17766,
        17797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7779": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17766,
        17797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7780": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17766,
        17797
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7781": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17705,
        17752
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "7782": {
      "op": "POP"
    },
    "7783": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17638,
        17808
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7784": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 77,
      "value": "0x4"
    },
    "7786": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "DUP9",
      "path": "20"
    },
    "7787": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "ADD",
      "path": "20"
    },
    "7788": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7789": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18030,
        18042
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "7791": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18030,
        18042
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7792": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18030,
        18042
      ],
      "op": "ADD",
      "path": "20"
    },
    "7793": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18030,
        18042
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7794": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7796": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7797": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17846,
        17855
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7798": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17846,
        17855
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7799": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x763B6170DF0264962938E705B5CBB0E18FD60107C02B64E3261FA233458CE7A"
    },
    "7832": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7833": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EB7"
    },
    "7836": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17869,
        17876
      ],
      "op": "DUP16",
      "path": "20"
    },
    "7838": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17869,
        17876
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7839": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17890,
        17897
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7840": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17890,
        17897
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7841": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17911,
        17923
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7842": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17911,
        17923
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7849": {
      "op": "SHL"
    },
    "7850": {
      "op": "SUB"
    },
    "7851": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7852": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "AND",
      "path": "20"
    },
    "7854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17937,
        17957
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7855": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17971,
        17991
      ],
      "op": "DUP10",
      "path": "20"
    },
    "7856": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17971,
        17991
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18005,
        18016
      ],
      "op": "DUP16",
      "path": "20"
    },
    "7858": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18005,
        18016
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7859": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x312E"
    },
    "7862": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17823,
        18052
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7863": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7864": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7866": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7867": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7868": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7869": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "SUB",
      "path": "20"
    },
    "7870": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7871": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17823,
        18052
      ],
      "op": "LOG2",
      "path": "20"
    },
    "7872": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7873": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7874": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7875": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7876": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7877": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7878": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7879": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15917,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7880": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7881": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        15810,
        18059
      ],
      "op": "POP",
      "path": "20"
    },
    "7882": {
      "fn": "RequestManager.challengeClaim",
      "jump": "o",
      "offset": [
        15810,
        18059
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7883": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7799,
        7922
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7884": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7854,
        7861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7886": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7896,
        7915
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 78,
      "value": "0x1ED6"
    },
    "7889": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7908,
        7914
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7890": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7896,
        7907
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A10"
    },
    "7893": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7896,
        7915
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7894": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7896,
        7915
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7895": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EDF"
    },
    "7898": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7886,
        7892
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7899": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7885
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x237D"
    },
    "7902": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7880,
        7893
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7903": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7904": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7915
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A2E"
    },
    "7907": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7915
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7908": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7915
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7909": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7880,
        7915
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7912": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7880,
        7915
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7913": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        24923,
        25297
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7914": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF1"
    },
    "7917": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "7920": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7921": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7928": {
      "op": "SHL"
    },
    "7929": {
      "op": "SUB"
    },
    "7930": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7931": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "AND",
      "path": "20"
    },
    "7932": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25043,
        25057
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7934": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7935": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7936": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7937": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7939": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7941": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7942": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7944": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7945": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7946": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25060,
        25095
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7947": {
      "branch": 166,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25113,
        25123
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 79
    },
    "7948": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F4E"
    },
    "7951": {
      "branch": 166,
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7952": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7954": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7961": {
      "op": "SHL"
    },
    "7962": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7963": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7966": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7968": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7969": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "ADD",
      "path": "20"
    },
    "7970": {
      "op": "MSTORE"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7975": {
      "op": "DUP3"
    },
    "7976": {
      "op": "ADD"
    },
    "7977": {
      "op": "MSTORE"
    },
    "7978": {
      "op": "PUSH20",
      "value": "0x50726F746F636F6C20666565206973207A65726F"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8001": {
      "op": "SHL"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8004": {
      "op": "DUP3"
    },
    "8005": {
      "op": "ADD"
    },
    "8006": {
      "op": "MSTORE"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8009": {
      "op": "ADD"
    },
    "8010": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "8013": {
      "op": "JUMP"
    },
    "8014": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25105,
        25148
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8021": {
      "op": "SHL"
    },
    "8022": {
      "op": "SUB"
    },
    "8023": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 80
    },
    "8024": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "AND",
      "path": "20"
    },
    "8025": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25196,
        25197
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8027": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8028": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8029": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8030": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25179
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "8032": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8034": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8035": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8037": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8038": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25193
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8039": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25158,
        25197
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8040": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25180,
        25192
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8041": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25180,
        25192
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8042": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25253,
        25290
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 81,
      "value": "0x19FA"
    },
    "8045": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25253,
        25290
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8046": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25272,
        25281
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8047": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25283,
        25289
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8048": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        25253,
        25271
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2665"
    },
    "8051": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        25253,
        25290
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8052": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8053": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7C"
    },
    "8056": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "8059": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8060": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8061": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26611,
        26612
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 82,
      "value": "0x0"
    },
    "8063": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26594,
        26608
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8064": {
      "branch": 167,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26594,
        26612
      ],
      "op": "GT",
      "path": "20"
    },
    "8065": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FDB"
    },
    "8068": {
      "branch": 167,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8069": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8071": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8078": {
      "op": "SHL"
    },
    "8079": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8080": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8083": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8085": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8086": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "ADD",
      "path": "20"
    },
    "8087": {
      "op": "MSTORE"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8092": {
      "op": "DUP3"
    },
    "8093": {
      "op": "ADD"
    },
    "8094": {
      "op": "MSTORE"
    },
    "8095": {
      "op": "PUSH32",
      "value": "0x46696E616C69747920706572696F64206D757374206265206772656174657220"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8130": {
      "op": "DUP3"
    },
    "8131": {
      "op": "ADD"
    },
    "8132": {
      "op": "MSTORE"
    },
    "8133": {
      "op": "PUSH6",
      "value": "0x7468616E203"
    },
    "8140": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "8142": {
      "op": "SHL"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8145": {
      "op": "DUP3"
    },
    "8146": {
      "op": "ADD"
    },
    "8147": {
      "op": "MSTORE"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8150": {
      "op": "ADD"
    },
    "8151": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "8154": {
      "op": "JUMP"
    },
    "8155": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26586,
        26655
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8156": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 83,
      "value": "0x0"
    },
    "8158": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8159": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8160": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8161": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26680
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8163": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8165": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8166": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8167": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8168": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8170": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8171": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8172": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8173": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26695
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8174": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26712
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8175": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8176": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26665,
        26712
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8177": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 84
    },
    "8178": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8179": {
      "op": "DUP5"
    },
    "8180": {
      "op": "DUP2"
    },
    "8181": {
      "op": "MSTORE"
    },
    "8182": {
      "op": "SWAP1"
    },
    "8183": {
      "op": "DUP2"
    },
    "8184": {
      "op": "ADD"
    },
    "8185": {
      "op": "DUP4"
    },
    "8186": {
      "op": "SWAP1"
    },
    "8187": {
      "op": "MSTORE"
    },
    "8188": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65"
    },
    "8221": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8222": {
      "op": "ADD"
    },
    "8223": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8225": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8226": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8227": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8228": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "SUB",
      "path": "20"
    },
    "8229": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8230": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26728,
        26780
      ],
      "op": "LOG1",
      "path": "20"
    },
    "8231": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "POP",
      "path": "20"
    },
    "8232": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        26463,
        26787
      ],
      "op": "POP",
      "path": "20"
    },
    "8233": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "o",
      "offset": [
        26463,
        26787
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8234": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8235": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2032"
    },
    "8238": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "8241": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8242": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8243": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26160,
        26173
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 85,
      "value": "0xA"
    },
    "8245": {
      "fn": "RequestManager.updateTransferLimit",
      "offset": [
        26160,
        26192
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8246": {
      "fn": "RequestManager.updateTransferLimit",
      "jump": "o",
      "offset": [
        26076,
        26199
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8247": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8254": {
      "op": "SHL"
    },
    "8255": {
      "op": "SUB"
    },
    "8256": {
      "offset": [
        8285,
        8300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8257": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "AND",
      "path": "20"
    },
    "8258": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18714,
        18721
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8260": {
      "offset": [
        8285,
        8300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8261": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8262": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8263": {
      "offset": [
        8285,
        8291
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "8265": {
      "offset": [
        8285,
        8300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8267": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8268": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8270": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8271": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8300
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8272": {
      "offset": [
        8285,
        8308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "8274": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8308
      ],
      "op": "ADD",
      "path": "20"
    },
    "8275": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8285,
        8308
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8276": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18688,
        18695
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8277": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18688,
        18695
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8284": {
      "op": "SHL"
    },
    "8285": {
      "op": "SUB"
    },
    "8286": {
      "offset": [
        8285,
        8308
      ],
      "op": "AND",
      "path": "20"
    },
    "8287": {
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x209E"
    },
    "8290": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8277,
        8344
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8291": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8293": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8277,
        8344
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8300": {
      "op": "SHL"
    },
    "8301": {
      "offset": [
        8277,
        8344
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8302": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8277,
        8344
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8305": {
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8307": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8277,
        8344
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8308": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8277,
        8344
      ],
      "op": "ADD",
      "path": "20"
    },
    "8309": {
      "op": "MSTORE"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8314": {
      "op": "DUP3"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "8337": {
      "op": "SHL"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8340": {
      "op": "DUP3"
    },
    "8341": {
      "op": "ADD"
    },
    "8342": {
      "op": "MSTORE"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8345": {
      "op": "ADD"
    },
    "8346": {
      "offset": [
        8277,
        8344
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "8349": {
      "op": "JUMP"
    },
    "8350": {
      "offset": [
        8277,
        8344
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8357": {
      "op": "SHL"
    },
    "8358": {
      "op": "SUB"
    },
    "8359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8360": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "AND",
      "path": "20"
    },
    "8361": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18737,
        18756
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8363": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8364": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8365": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8366": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18765
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "8368": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8370": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8371": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8372": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8373": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8375": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8376": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8377": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8378": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18804,
        18819
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8379": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18804,
        18819
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8380": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8381": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8382": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8383": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18863
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "8385": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8386": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8387": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8388": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8389": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8390": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18855,
        18874
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8391": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8392": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18759,
        18774
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8393": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18737,
        18756
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8394": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18934,
        18955
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20D2"
    },
    "8397": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18766,
        18773
      ],
      "op": "DUP9",
      "path": "20"
    },
    "8398": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18934,
        18946
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26D2"
    },
    "8401": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        18934,
        18955
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8402": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18934,
        18955
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8409": {
      "op": "SHL"
    },
    "8410": {
      "op": "SUB"
    },
    "8411": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8412": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "AND",
      "path": "20"
    },
    "8413": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19011,
        19012
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8415": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8416": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8417": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8418": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        18993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "8420": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        18993
      ],
      "op": "DUP9",
      "path": "20"
    },
    "8421": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        18993
      ],
      "op": "ADD",
      "path": "20"
    },
    "8422": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8424": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8425": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8427": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8428": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8429": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19008
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8430": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18885,
        18955
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8431": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18885,
        18955
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8432": {
      "op": "POP"
    },
    "8433": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18885,
        18955
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8434": {
      "op": "POP"
    },
    "8435": {
      "branch": 168,
      "fn": "RequestManager.withdraw",
      "offset": [
        18970,
        19012
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8436": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18966,
        19118
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2113"
    },
    "8439": {
      "branch": 168,
      "fn": "RequestManager.withdraw",
      "offset": [
        18966,
        19118
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8446": {
      "op": "SHL"
    },
    "8447": {
      "op": "SUB"
    },
    "8448": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 86
    },
    "8449": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "AND",
      "path": "20"
    },
    "8450": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19106,
        19107
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8452": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8453": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8454": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8455": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19088
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "8457": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19088
      ],
      "op": "DUP7",
      "path": "20"
    },
    "8458": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19088
      ],
      "op": "ADD",
      "path": "20"
    },
    "8459": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8461": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8462": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8464": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8465": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19103
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8466": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19065,
        19107
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8467": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18966,
        19118
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8468": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19154,
        19175
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "8470": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19154,
        19175
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8471": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19154,
        19175
      ],
      "op": "ADD",
      "path": "20"
    },
    "8472": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19154,
        19175
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8473": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19128,
        19151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8475": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19261,
        19281
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8476": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19261,
        19281
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8477": {
      "branch": 169,
      "fn": "RequestManager.withdraw",
      "offset": [
        19261,
        19281
      ],
      "op": "SUB",
      "path": "20"
    },
    "8478": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19257,
        19333
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2164"
    },
    "8481": {
      "branch": 169,
      "fn": "RequestManager.withdraw",
      "offset": [
        19257,
        19333
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8482": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19321,
        19322
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 87,
      "value": "0x1"
    },
    "8484": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19304
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8485": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8487": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19317
      ],
      "op": "ADD",
      "path": "20"
    },
    "8488": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1C"
    },
    "8490": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8491": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8492": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8493": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8494": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8495": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8496": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "8499": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "EXP",
      "path": "20"
    },
    "8500": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8501": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DIV",
      "path": "20"
    },
    "8502": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "8507": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "AND",
      "path": "20"
    },
    "8508": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2145"
    },
    "8511": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8512": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8513": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31D0"
    },
    "8516": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19297,
        19322
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8517": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8518": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8519": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "POP",
      "path": "20"
    },
    "8520": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "8523": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "EXP",
      "path": "20"
    },
    "8524": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8525": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8526": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8527": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "8532": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "MUL",
      "path": "20"
    },
    "8533": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "NOT",
      "path": "20"
    },
    "8534": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "AND",
      "path": "20"
    },
    "8535": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8536": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8537": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "8542": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "AND",
      "path": "20"
    },
    "8543": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "MUL",
      "path": "20"
    },
    "8544": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "OR",
      "path": "20"
    },
    "8545": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8546": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8547": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19297,
        19322
      ],
      "op": "POP",
      "path": "20"
    },
    "8548": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19257,
        19333
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8549": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19342,
        19374
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 88,
      "value": "0x216E"
    },
    "8552": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19361,
        19374
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8553": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19342,
        19374
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8554": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19342,
        19374
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "8557": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19342,
        19374
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8558": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19342,
        19374
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8559": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19384,
        19405
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 89,
      "value": "0x6"
    },
    "8561": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19384,
        19405
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8562": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19384,
        19405
      ],
      "op": "ADD",
      "path": "20"
    },
    "8563": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19384,
        19423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8564": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19384,
        19423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8565": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19384,
        19423
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8566": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19495,
        19521
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 90,
      "value": "0x5"
    },
    "8568": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19495,
        19521
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8569": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19495,
        19521
      ],
      "op": "ADD",
      "path": "20"
    },
    "8570": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19495,
        19521
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8571": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19492
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "8573": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19492
      ],
      "op": "DUP9",
      "path": "20"
    },
    "8574": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19492
      ],
      "op": "ADD",
      "path": "20"
    },
    "8575": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19492
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8576": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19342,
        19374
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8577": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19342,
        19374
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8578": {
      "op": "POP"
    },
    "8579": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19521
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x218B"
    },
    "8582": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19521
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8583": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19521
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "8586": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19474,
        19521
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8587": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19474,
        19521
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8588": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19455,
        19470
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8589": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19455,
        19521
      ],
      "op": "GT",
      "path": "20"
    },
    "8590": {
      "branch": 170,
      "fn": "RequestManager.withdraw",
      "offset": [
        19455,
        19521
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8591": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21DA"
    },
    "8594": {
      "branch": 170,
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8595": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8597": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8598": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8602": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8604": {
      "op": "SHL"
    },
    "8605": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8606": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8609": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8611": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8612": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "ADD",
      "path": "20"
    },
    "8613": {
      "op": "MSTORE"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8618": {
      "op": "DUP3"
    },
    "8619": {
      "op": "ADD"
    },
    "8620": {
      "op": "MSTORE"
    },
    "8621": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8656": {
      "op": "DUP3"
    },
    "8657": {
      "op": "ADD"
    },
    "8658": {
      "op": "MSTORE"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8661": {
      "op": "ADD"
    },
    "8662": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "8665": {
      "op": "JUMP"
    },
    "8666": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19434,
        19575
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8667": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19587,
        19596
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8669": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19615
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8676": {
      "op": "SHL"
    },
    "8677": {
      "op": "SUB"
    },
    "8678": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19620
      ],
      "op": "AND",
      "path": "20"
    },
    "8679": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19628,
        19641
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8680": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8682": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8683": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8685": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8687": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8688": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8689": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8690": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "SUB",
      "path": "20"
    },
    "8691": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8692": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8693": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8694": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "GAS",
      "path": "20"
    },
    "8695": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "CALL",
      "path": "20"
    },
    "8696": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8697": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8698": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8699": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8700": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8701": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8702": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8704": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8705": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "EQ",
      "path": "20"
    },
    "8706": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2227"
    },
    "8709": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8710": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8712": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8713": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8714": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8715": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "8717": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "NOT",
      "path": "20"
    },
    "8718": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3F"
    },
    "8720": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8721": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "ADD",
      "path": "20"
    },
    "8722": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "AND",
      "path": "20"
    },
    "8723": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8724": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "ADD",
      "path": "20"
    },
    "8725": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8727": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8728": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8729": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8730": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8731": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8732": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8734": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8736": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8737": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "ADD",
      "path": "20"
    },
    "8738": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "8739": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x222C"
    },
    "8742": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8743": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8744": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "8746": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8747": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8748": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8749": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19602,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8750": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19586,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8751": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19586,
        19646
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8752": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19586,
        19646
      ],
      "op": "POP",
      "path": "20"
    },
    "8753": {
      "branch": 171,
      "fn": "RequestManager.withdraw",
      "offset": [
        19664,
        19668
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 91
    },
    "8754": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2274"
    },
    "8757": {
      "branch": 171,
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8758": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8760": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8767": {
      "op": "SHL"
    },
    "8768": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8769": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8772": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8774": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8775": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "ADD",
      "path": "20"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8781": {
      "op": "DUP3"
    },
    "8782": {
      "op": "ADD"
    },
    "8783": {
      "op": "MSTORE"
    },
    "8784": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "8807": {
      "op": "SHL"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8810": {
      "op": "DUP3"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "op": "MSTORE"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "8819": {
      "op": "JUMP"
    },
    "8820": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19656,
        19693
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8821": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 92,
      "value": "0x40"
    },
    "8823": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8824": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8831": {
      "op": "SHL"
    },
    "8832": {
      "op": "SUB"
    },
    "8833": {
      "op": "DUP13"
    },
    "8834": {
      "op": "AND"
    },
    "8835": {
      "op": "DUP2"
    },
    "8836": {
      "op": "MSTORE"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8843": {
      "op": "SHL"
    },
    "8844": {
      "op": "SUB"
    },
    "8845": {
      "op": "DUP7"
    },
    "8846": {
      "op": "AND"
    },
    "8847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8849": {
      "op": "DUP3"
    },
    "8850": {
      "op": "ADD"
    },
    "8851": {
      "op": "MSTORE"
    },
    "8852": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19738,
        19747
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8853": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19738,
        19747
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8854": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xC9E74E0700D0C6488AF9C81D70FDD4158AEA77687137FF85499509C41A10612B"
    },
    "8887": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8888": {
      "op": "ADD"
    },
    "8889": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8891": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8892": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8893": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8894": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "SUB",
      "path": "20"
    },
    "8895": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8896": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19709,
        19763
      ],
      "op": "LOG2",
      "path": "20"
    },
    "8897": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19801
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "8899": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19801
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8900": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19801
      ],
      "op": "ADD",
      "path": "20"
    },
    "8901": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19801
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8908": {
      "op": "SHL"
    },
    "8909": {
      "op": "SUB"
    },
    "8910": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19801
      ],
      "op": "AND",
      "path": "20"
    },
    "8911": {
      "branch": 172,
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19806
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8912": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19840
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8913": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19840
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8914": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19840
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22EA"
    },
    "8917": {
      "branch": 172,
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19840
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8918": {
      "op": "POP"
    },
    "8919": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19827,
        19840
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "8921": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19827,
        19840
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8922": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19827,
        19840
      ],
      "op": "ADD",
      "path": "20"
    },
    "8923": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19827,
        19840
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8930": {
      "op": "SHL"
    },
    "8931": {
      "op": "SUB"
    },
    "8932": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19810,
        19840
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8933": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19810,
        19840
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8934": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19810,
        19840
      ],
      "op": "AND",
      "path": "20"
    },
    "8935": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19827,
        19840
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8936": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19827,
        19840
      ],
      "op": "AND",
      "path": "20"
    },
    "8937": {
      "branch": 173,
      "fn": "RequestManager.withdraw",
      "offset": [
        19810,
        19840
      ],
      "op": "EQ",
      "path": "20"
    },
    "8938": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19778,
        19840
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8939": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19774,
        19900
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8940": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19774,
        19900
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F9"
    },
    "8943": {
      "branch": 173,
      "fn": "RequestManager.withdraw",
      "offset": [
        19774,
        19900
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8944": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19856,
        19889
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 93,
      "value": "0x22F9"
    },
    "8947": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19872,
        19879
      ],
      "op": "DUP6",
      "path": "20"
    },
    "8948": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19881,
        19888
      ],
      "op": "DUP12",
      "path": "20"
    },
    "8949": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19856,
        19871
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29C8"
    },
    "8952": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19856,
        19889
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8953": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19856,
        19889
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8954": {
      "op": "POP"
    },
    "8955": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19917,
        19930
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 94
    },
    "8956": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19917,
        19930
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "8957": {
      "fn": "RequestManager.withdraw",
      "offset": [
        18616,
        19937
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "8958": {
      "op": "POP"
    },
    "8959": {
      "op": "POP"
    },
    "8960": {
      "op": "POP"
    },
    "8961": {
      "op": "POP"
    },
    "8962": {
      "op": "POP"
    },
    "8963": {
      "op": "POP"
    },
    "8964": {
      "op": "POP"
    },
    "8965": {
      "op": "POP"
    },
    "8966": {
      "fn": "RequestManager.withdraw",
      "jump": "o",
      "offset": [
        18616,
        19937
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8968": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230F"
    },
    "8971": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2457"
    },
    "8974": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8982": {
      "op": "SHL"
    },
    "8983": {
      "op": "SUB"
    },
    "8984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 95
    },
    "8985": {
      "branch": 190,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "8986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2374"
    },
    "8989": {
      "branch": 190,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "9008": {
      "op": "MSTORE"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9013": {
      "op": "DUP3"
    },
    "9014": {
      "op": "ADD"
    },
    "9015": {
      "op": "MSTORE"
    },
    "9016": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9051": {
      "op": "DUP3"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "MSTORE"
    },
    "9054": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9063": {
      "op": "SHL"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9066": {
      "op": "DUP3"
    },
    "9067": {
      "op": "ADD"
    },
    "9068": {
      "op": "MSTORE"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9071": {
      "op": "ADD"
    },
    "9072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "9075": {
      "op": "JUMP"
    },
    "9076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 96,
      "value": "0x17CF"
    },
    "9080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2503"
    },
    "9084": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9085": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7273,
        7409
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9086": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7325,
        7332
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9088": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7351,
        7402
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 97,
      "value": "0x1A2E"
    },
    "9091": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7360,
        7368
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "9093": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7360,
        7368
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9094": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7392,
        7401
      ],
      "op": "PUSH3",
      "path": "20",
      "value": "0xF4240"
    },
    "9098": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7380,
        7388
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "9100": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7380,
        7388
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9101": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7371,
        7377
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9102": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7371,
        7388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2397"
    },
    "9105": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7371,
        7388
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9106": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7371,
        7388
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9107": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7371,
        7388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3178"
    },
    "9110": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7371,
        7388
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9111": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7371,
        7388
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9112": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7370,
        7401
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23A1"
    },
    "9115": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7370,
        7401
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9116": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7370,
        7401
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9117": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7370,
        7401
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3197"
    },
    "9120": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7370,
        7401
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9121": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7370,
        7401
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9122": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7351,
        7359
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AD3"
    },
    "9125": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7351,
        7402
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9126": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1767,
        1873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9127": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "9129": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9130": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9132": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "AND",
      "path": "1"
    },
    "9133": {
      "branch": 192,
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1836,
        1845
      ],
      "op": "ISZERO",
      "path": "1",
      "statement": 98
    },
    "9134": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1239"
    },
    "9137": {
      "branch": 192,
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9138": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9140": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9147": {
      "op": "SHL"
    },
    "9148": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9149": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9152": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9154": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9155": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9156": {
      "op": "MSTORE"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9161": {
      "op": "DUP3"
    },
    "9162": {
      "op": "ADD"
    },
    "9163": {
      "op": "MSTORE"
    },
    "9164": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "9183": {
      "op": "SHL"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9186": {
      "op": "DUP3"
    },
    "9187": {
      "op": "ADD"
    },
    "9188": {
      "op": "MSTORE"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9191": {
      "op": "ADD"
    },
    "9192": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA30"
    },
    "9195": {
      "op": "JUMP"
    },
    "9196": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9197": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 99,
      "value": "0x40"
    },
    "9199": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9206": {
      "op": "SHL"
    },
    "9207": {
      "op": "SUB"
    },
    "9208": {
      "op": "DUP1"
    },
    "9209": {
      "op": "DUP6"
    },
    "9210": {
      "op": "AND"
    },
    "9211": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9213": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9214": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "6"
    },
    "9215": {
      "op": "MSTORE"
    },
    "9216": {
      "op": "DUP4"
    },
    "9217": {
      "op": "AND"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9220": {
      "op": "DUP3"
    },
    "9221": {
      "op": "ADD"
    },
    "9222": {
      "op": "MSTORE"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9225": {
      "op": "DUP2"
    },
    "9226": {
      "op": "ADD"
    },
    "9227": {
      "op": "DUP3"
    },
    "9228": {
      "op": "SWAP1"
    },
    "9229": {
      "op": "MSTORE"
    },
    "9230": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19FA"
    },
    "9233": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9234": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9235": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9236": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9243": {
      "op": "SHL"
    },
    "9244": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1162,
        1189
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9247": {
      "op": "ADD"
    },
    "9248": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9249": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9251": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9252": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9253": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9255": {
      "op": "NOT"
    },
    "9256": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9257": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9258": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SUB",
      "path": "6"
    },
    "9259": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "6"
    },
    "9260": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9261": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9262": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9263": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9264": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9265": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9267": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9268": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "6"
    },
    "9269": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9270": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9277": {
      "op": "SHL"
    },
    "9278": {
      "op": "SUB"
    },
    "9279": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "6"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9286": {
      "op": "SHL"
    },
    "9287": {
      "op": "SUB"
    },
    "9288": {
      "op": "NOT"
    },
    "9289": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9290": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "9291": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "6"
    },
    "9292": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9293": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9294": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9295": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "OR",
      "path": "6"
    },
    "9296": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9297": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9298": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9299": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1131
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AEB"
    },
    "9302": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1112,
        1208
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9303": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9304": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9306": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9313": {
      "op": "SHL"
    },
    "9314": {
      "op": "SUB"
    },
    "9315": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "9316": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 100
    },
    "9317": {
      "branch": 191,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 101
    },
    "9318": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1239"
    },
    "9321": {
      "branch": 191,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9322": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9324": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9331": {
      "op": "SHL"
    },
    "9332": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9333": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9336": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9338": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9339": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "9340": {
      "op": "DUP2"
    },
    "9341": {
      "op": "SWAP1"
    },
    "9342": {
      "op": "MSTORE"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9345": {
      "op": "DUP3"
    },
    "9346": {
      "op": "ADD"
    },
    "9347": {
      "op": "MSTORE"
    },
    "9348": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9388": {
      "op": "ADD"
    },
    "9389": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "9392": {
      "op": "JUMP"
    },
    "9393": {
      "fn": "Pausable._unpause",
      "offset": [
        2433,
        2550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9394": {
      "offset": [
        1486,
        1502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24B9"
    },
    "9397": {
      "offset": [
        1486,
        1500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BBD"
    },
    "9400": {
      "jump": "i",
      "offset": [
        1486,
        1502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9401": {
      "fn": "Pausable._unpause",
      "offset": [
        1486,
        1502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9402": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 102,
      "value": "0x3"
    },
    "9404": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9405": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9408": {
      "op": "NOT"
    },
    "9409": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "AND",
      "path": "1"
    },
    "9410": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9411": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9412": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 103,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9445": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9446": {
      "fn": "Pausable._unpause",
      "offset": [
        2530,
        2542
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9447": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9449": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9456": {
      "op": "SHL"
    },
    "9457": {
      "op": "SUB"
    },
    "9458": {
      "op": "SWAP1"
    },
    "9459": {
      "op": "SWAP2"
    },
    "9460": {
      "op": "AND"
    },
    "9461": {
      "op": "DUP2"
    },
    "9462": {
      "op": "MSTORE"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9465": {
      "op": "ADD"
    },
    "9466": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9468": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9469": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9470": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9471": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "SUB",
      "path": "1"
    },
    "9472": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9473": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9474": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2433,
        2550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9478": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9479": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9486": {
      "op": "SHL"
    },
    "9487": {
      "op": "SUB"
    },
    "9488": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 104
    },
    "9489": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9490": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9497": {
      "op": "SHL"
    },
    "9498": {
      "op": "SUB"
    },
    "9499": {
      "op": "NOT"
    },
    "9500": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9501": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "9502": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9503": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "9504": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9505": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9506": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x40"
    },
    "9508": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9509": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "9513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9551": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9552": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "9553": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "9554": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9555": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9562": {
      "op": "SHL"
    },
    "9563": {
      "op": "SUB"
    },
    "9564": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 106
    },
    "9565": {
      "branch": 196,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "AND",
      "path": "22"
    },
    "9566": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25B5"
    },
    "9569": {
      "branch": 196,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9570": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9572": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9579": {
      "op": "SHL"
    },
    "9580": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9581": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9584": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "9586": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9587": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "ADD",
      "path": "22"
    },
    "9588": {
      "op": "MSTORE"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "9591": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9593": {
      "op": "DUP3"
    },
    "9594": {
      "op": "ADD"
    },
    "9595": {
      "op": "MSTORE"
    },
    "9596": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9631": {
      "op": "DUP3"
    },
    "9632": {
      "op": "ADD"
    },
    "9633": {
      "op": "MSTORE"
    },
    "9634": {
      "op": "PUSH3",
      "value": "0x65203"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "9640": {
      "op": "SHL"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9643": {
      "op": "DUP3"
    },
    "9644": {
      "op": "ADD"
    },
    "9645": {
      "op": "MSTORE"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9648": {
      "op": "ADD"
    },
    "9649": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "9652": {
      "op": "JUMP"
    },
    "9653": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9654": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        891,
        892
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 107,
      "value": "0x0"
    },
    "9656": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9657": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9658": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9659": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        861
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "9661": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "9663": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9664": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9666": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9667": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "9668": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9675": {
      "op": "SHL"
    },
    "9676": {
      "op": "SUB"
    },
    "9677": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "AND",
      "path": "22"
    },
    "9678": {
      "branch": 197,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        893
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9679": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2629"
    },
    "9682": {
      "branch": 197,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9683": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9685": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9692": {
      "op": "SHL"
    },
    "9693": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9694": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9697": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "9699": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9700": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "ADD",
      "path": "22"
    },
    "9701": {
      "op": "MSTORE"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9706": {
      "op": "DUP3"
    },
    "9707": {
      "op": "ADD"
    },
    "9708": {
      "op": "MSTORE"
    },
    "9709": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920"
    },
    "9742": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9744": {
      "op": "DUP3"
    },
    "9745": {
      "op": "ADD"
    },
    "9746": {
      "op": "MSTORE"
    },
    "9747": {
      "op": "PUSH6",
      "value": "0x657869737473"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9756": {
      "op": "SHL"
    },
    "9757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9759": {
      "op": "DUP3"
    },
    "9760": {
      "op": "ADD"
    },
    "9761": {
      "op": "MSTORE"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9764": {
      "op": "ADD"
    },
    "9765": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "9768": {
      "op": "JUMP"
    },
    "9769": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9770": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 108,
      "value": "0x40"
    },
    "9772": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9773": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9774": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9775": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9776": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "22"
    },
    "9777": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9778": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9785": {
      "op": "SHL"
    },
    "9786": {
      "op": "SUB"
    },
    "9787": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9788": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP6",
      "path": "22"
    },
    "9789": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "22"
    },
    "9790": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9791": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9792": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9793": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "22"
    },
    "9794": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "9796": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9797": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9798": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "22"
    },
    "9799": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9800": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9801": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9802": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9805": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP7",
      "path": "22"
    },
    "9806": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9807": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9808": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "9810": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9811": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9812": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9813": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9814": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9815": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9816": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9817": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "9818": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x19FA"
    },
    "9821": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9822": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9823": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9824": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9825": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D96"
    },
    "9828": {
      "fn": "RestrictedCalls._addCaller",
      "jump": "i",
      "offset": [
        967,
        1011
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9829": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9830": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 109,
      "value": "0x40"
    },
    "9832": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9839": {
      "op": "SHL"
    },
    "9840": {
      "op": "SUB"
    },
    "9841": {
      "op": "DUP4"
    },
    "9842": {
      "op": "AND"
    },
    "9843": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9845": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9846": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "ADD",
      "path": "6"
    },
    "9847": {
      "op": "MSTORE"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9850": {
      "op": "DUP2"
    },
    "9851": {
      "op": "ADD"
    },
    "9852": {
      "op": "DUP3"
    },
    "9853": {
      "op": "SWAP1"
    },
    "9854": {
      "op": "MSTORE"
    },
    "9855": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1411"
    },
    "9858": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9859": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9860": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9861": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9868": {
      "op": "SHL"
    },
    "9869": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        925,
        948
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9872": {
      "op": "ADD"
    },
    "9873": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2420"
    },
    "9876": {
      "op": "JUMP"
    },
    "9877": {
      "fn": "Pausable._pause",
      "offset": [
        2186,
        2301
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9878": {
      "offset": [
        1239,
        1258
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x269D"
    },
    "9881": {
      "offset": [
        1239,
        1256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A6"
    },
    "9884": {
      "jump": "i",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9885": {
      "fn": "Pausable._pause",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9886": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 110,
      "value": "0x3"
    },
    "9888": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9889": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9892": {
      "op": "NOT"
    },
    "9893": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "AND",
      "path": "1"
    },
    "9894": {
      "fn": "Pausable._pause",
      "offset": [
        2255,
        2259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9896": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "OR",
      "path": "1"
    },
    "9897": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9898": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9899": {
      "fn": "Pausable._pause",
      "offset": [
        2274,
        2294
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 111,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "9932": {
      "fn": "Pausable._pause",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E6"
    },
    "9935": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "9936": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9937": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9938": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19943,
        23381
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9943": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9945": {
      "op": "SHL"
    },
    "9946": {
      "op": "SUB"
    },
    "9947": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9948": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9949": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "AND",
      "path": "20"
    },
    "9950": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20027,
        20034
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9952": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9953": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9954": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9955": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20087
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "9957": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9959": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9960": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9961": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9962": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9964": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9965": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9966": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9967": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20141,
        20156
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9968": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20141,
        20156
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9969": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9970": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9971": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "9973": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9974": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9975": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9976": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9977": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9978": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9979": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9980": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9981": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9982": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "ADD",
      "path": "20"
    },
    "9983": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9984": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "9986": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9987": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "ADD",
      "path": "20"
    },
    "9988": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9989": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20289,
        20307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "9991": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20289,
        20307
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9992": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20289,
        20307
      ],
      "op": "ADD",
      "path": "20"
    },
    "9993": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20289,
        20307
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9994": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20348,
        20374
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "9995": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20348,
        20374
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9996": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20348,
        20374
      ],
      "op": "ADD",
      "path": "20"
    },
    "9997": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20348,
        20374
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9998": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20406,
        20418
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "10000": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20406,
        20418
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10001": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20406,
        20418
      ],
      "op": "ADD",
      "path": "20"
    },
    "10002": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20406,
        20418
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10003": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20027,
        20034
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "10004": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20027,
        20034
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "10005": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20027,
        20034
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10006": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20027,
        20034
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "10007": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "10008": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20081,
        20096
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "10009": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "10010": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20132,
        20157
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "10011": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10012": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "AND",
      "path": "20"
    },
    "10013": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20192,
        20215
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10020": {
      "op": "SHL"
    },
    "10021": {
      "op": "SUB"
    },
    "10022": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10023": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10024": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "AND",
      "path": "20"
    },
    "10025": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20243,
        20256
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10026": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20473,
        20508
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 112,
      "value": "0x2733"
    },
    "10029": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20348,
        20374
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10030": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20289,
        20307
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10031": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20473,
        20508
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "10034": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        20473,
        20508
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10035": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20473,
        20508
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10036": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20449,
        20454
      ],
      "op": "DUP8",
      "path": "20"
    },
    "10037": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20449,
        20470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10039": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20449,
        20470
      ],
      "op": "ADD",
      "path": "20"
    },
    "10040": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20449,
        20470
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10041": {
      "branch": 174,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20449,
        20508
      ],
      "op": "LT",
      "path": "20"
    },
    "10042": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2785"
    },
    "10045": {
      "branch": 174,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10046": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10048": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10055": {
      "op": "SHL"
    },
    "10056": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10057": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10060": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10062": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10063": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "ADD",
      "path": "20"
    },
    "10064": {
      "op": "MSTORE"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10069": {
      "op": "DUP3"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "op": "PUSH32",
      "value": "0x436C61696D20616C72656164792077697468647261776E000000000000000000"
    },
    "10105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10107": {
      "op": "DUP3"
    },
    "10108": {
      "op": "ADD"
    },
    "10109": {
      "op": "MSTORE"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10112": {
      "op": "ADD"
    },
    "10113": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "10116": {
      "op": "JUMP"
    },
    "10117": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20428,
        20557
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10118": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "10120": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10121": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "ADD",
      "path": "20"
    },
    "10122": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10123": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21079,
        21093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10125": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21079,
        21093
      ],
      "op": "DUP8",
      "path": "20"
    },
    "10126": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21079,
        21093
      ],
      "op": "ADD",
      "path": "20"
    },
    "10127": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21079,
        21093
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10128": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20568,
        20583
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10130": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        20568,
        20583
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10135": {
      "op": "SHL"
    },
    "10136": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10137": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "DIV",
      "path": "20"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10144": {
      "op": "SHL"
    },
    "10145": {
      "op": "SUB"
    },
    "10146": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "AND",
      "path": "20"
    },
    "10147": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21038,
        21052
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10148": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21108,
        21128
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10149": {
      "branch": 175,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21108,
        21128
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10150": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21104,
        21857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27D0"
    },
    "10153": {
      "branch": 175,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21104,
        21857
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10154": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21206,
        21213
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 113
    },
    "10155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10161": {
      "op": "SHL"
    },
    "10162": {
      "op": "SUB"
    },
    "10163": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21213
      ],
      "op": "AND",
      "path": "20"
    },
    "10164": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21202
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10171": {
      "op": "SHL"
    },
    "10172": {
      "op": "SUB"
    },
    "10173": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21213
      ],
      "op": "AND",
      "path": "20"
    },
    "10174": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21213
      ],
      "op": "EQ",
      "path": "20"
    },
    "10175": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21238
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10176": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21238
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10177": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21238
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C9"
    },
    "10180": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21238
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10181": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21238
      ],
      "op": "POP",
      "path": "20"
    },
    "10182": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21227,
        21238
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10183": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21217,
        21223
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10184": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21217,
        21238
      ],
      "op": "EQ",
      "path": "20"
    },
    "10185": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21196,
        21238
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10186": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21183,
        21238
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10187": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21183,
        21238
      ],
      "op": "POP",
      "path": "20"
    },
    "10188": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21104,
        21857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28B1"
    },
    "10191": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21104,
        21857
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10192": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21104,
        21857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10193": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10195": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10196": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10197": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10198": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21281
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "10200": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21281
      ],
      "op": "DUP11",
      "path": "20"
    },
    "10201": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21281
      ],
      "op": "ADD",
      "path": "20"
    },
    "10202": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10204": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10205": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10207": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10208": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10209": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10210": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "10212": {
      "branch": 176,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21259,
        21289
      ],
      "op": "AND",
      "path": "20"
    },
    "10213": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21255,
        21857
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10214": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21255,
        21857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27F2"
    },
    "10217": {
      "branch": 176,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21255,
        21857
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10218": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21357,
        21362
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 114,
      "value": "0x0"
    },
    "10220": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21344,
        21362
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10221": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21344,
        21362
      ],
      "op": "POP",
      "path": "20"
    },
    "10222": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21255,
        21857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28B1"
    },
    "10225": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21255,
        21857
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10226": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21255,
        21857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10233": {
      "op": "SHL"
    },
    "10234": {
      "op": "SUB"
    },
    "10235": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21383,
        21403
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10236": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21383,
        21403
      ],
      "op": "AND",
      "path": "20"
    },
    "10237": {
      "branch": 177,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21383,
        21403
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10238": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21379,
        21857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2857"
    },
    "10241": {
      "branch": 177,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21379,
        21857
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10246": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10248": {
      "op": "SHL"
    },
    "10249": {
      "op": "SUB"
    },
    "10250": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "DUP9",
      "path": "20",
      "statement": 115
    },
    "10251": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "AND",
      "path": "20"
    },
    "10252": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10254": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10255": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10256": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10257": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10259": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10261": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10262": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10264": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10265": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21521
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10266": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21529
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10268": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21529
      ],
      "op": "ADD",
      "path": "20"
    },
    "10269": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21529
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10276": {
      "op": "SHL"
    },
    "10277": {
      "op": "SUB"
    },
    "10278": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21529
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10279": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21529
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10280": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21529
      ],
      "op": "AND",
      "path": "20"
    },
    "10281": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21529
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10282": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21498,
        21529
      ],
      "op": "AND",
      "path": "20"
    },
    "10283": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21529
      ],
      "op": "EQ",
      "path": "20"
    },
    "10284": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21594
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10285": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21594
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10286": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21594
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27C9"
    },
    "10289": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21487,
        21594
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10290": {
      "op": "POP"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10297": {
      "op": "SHL"
    },
    "10298": {
      "op": "SUB"
    },
    "10299": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10300": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "AND",
      "path": "20"
    },
    "10301": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10303": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10304": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10305": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10306": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10308": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10310": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10311": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10313": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10314": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21587
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10315": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21594
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "10317": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21594
      ],
      "op": "ADD",
      "path": "20"
    },
    "10318": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21564,
        21594
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10319": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21549,
        21594
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10320": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21549,
        21594
      ],
      "op": "EQ",
      "path": "20"
    },
    "10321": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21458,
        21594
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10322": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21458,
        21594
      ],
      "op": "POP",
      "path": "20"
    },
    "10323": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21379,
        21857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28B1"
    },
    "10326": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21379,
        21857
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10327": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21379,
        21857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10328": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21708,
        21713
      ],
      "op": "DUP10",
      "path": "20",
      "statement": 116
    },
    "10329": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21708,
        21725
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "10331": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21708,
        21725
      ],
      "op": "ADD",
      "path": "20"
    },
    "10332": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21708,
        21725
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10333": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21689,
        21704
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "10334": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21689,
        21725
      ],
      "op": "LT",
      "path": "20"
    },
    "10335": {
      "branch": 178,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21689,
        21725
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10336": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28AB"
    },
    "10339": {
      "branch": 178,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10340": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10342": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10349": {
      "op": "SHL"
    },
    "10350": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10351": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10354": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10356": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10357": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "ADD",
      "path": "20"
    },
    "10358": {
      "op": "MSTORE"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10363": {
      "op": "DUP3"
    },
    "10364": {
      "op": "ADD"
    },
    "10365": {
      "op": "MSTORE"
    },
    "10366": {
      "op": "PUSH32",
      "value": "0x436C61696D20706572696F64206E6F742066696E697368656400000000000000"
    },
    "10399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10401": {
      "op": "DUP3"
    },
    "10402": {
      "op": "ADD"
    },
    "10403": {
      "op": "MSTORE"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10406": {
      "op": "ADD"
    },
    "10407": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "10410": {
      "op": "JUMP"
    },
    "10411": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21664,
        21784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10412": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21826,
        21846
      ],
      "op": "DUP5",
      "path": "20",
      "statement": 117
    },
    "10413": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21811,
        21823
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10414": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21811,
        21846
      ],
      "op": "GT",
      "path": "20"
    },
    "10415": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21798,
        21846
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10416": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21798,
        21846
      ],
      "op": "POP",
      "path": "20"
    },
    "10417": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21379,
        21857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10418": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21921,
        21942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10420": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21952,
        21973
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10421": {
      "branch": 179,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21988,
        21998
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10422": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21984,
        22755
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10423": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21984,
        22755
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28CE"
    },
    "10426": {
      "branch": 179,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21984,
        22755
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10427": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22093,
        22128
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 118,
      "value": "0x28C4"
    },
    "10430": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22108,
        22128
      ],
      "op": "DUP8",
      "path": "20"
    },
    "10431": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22093,
        22105
      ],
      "op": "DUP10",
      "path": "20"
    },
    "10432": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22093,
        22128
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "10435": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22093,
        22128
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10436": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22093,
        22128
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10437": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22077,
        22128
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10438": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22077,
        22128
      ],
      "op": "POP",
      "path": "20"
    },
    "10439": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22158,
        22165
      ],
      "op": "DUP9",
      "path": "20",
      "statement": 119
    },
    "10440": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22142,
        22165
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10441": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22142,
        22165
      ],
      "op": "POP",
      "path": "20"
    },
    "10442": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21984,
        22755
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2967"
    },
    "10445": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21984,
        22755
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10446": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        21984,
        22755
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10447": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22186,
        22210
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10448": {
      "branch": 180,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22186,
        22210
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10449": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22182,
        22755
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2956"
    },
    "10452": {
      "branch": 180,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22182,
        22755
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10453": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22339,
        22349
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 120
    },
    "10454": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10456": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10457": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10458": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10459": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22338
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "10461": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22338
      ],
      "op": "DUP14",
      "path": "20"
    },
    "10462": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22338
      ],
      "op": "ADD",
      "path": "20"
    },
    "10463": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10465": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10466": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10468": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10469": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10470": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22315,
        22350
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10471": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22311,
        22350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28F1"
    },
    "10474": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22311,
        22350
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10475": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22311,
        22312
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "10477": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22311,
        22350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3178"
    },
    "10480": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22311,
        22350
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10481": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22311,
        22350
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10482": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22295,
        22350
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10483": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22295,
        22350
      ],
      "op": "POP",
      "path": "20"
    },
    "10484": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22380,
        22390
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 121
    },
    "10485": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22364,
        22390
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10486": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22364,
        22390
      ],
      "op": "POP",
      "path": "20"
    },
    "10487": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22429,
        22430
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 122,
      "value": "0x0"
    },
    "10489": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22426
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10490": {
      "branch": 181,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22430
      ],
      "op": "GT",
      "path": "20"
    },
    "10491": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2951"
    },
    "10494": {
      "branch": 181,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10495": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10497": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10504": {
      "op": "SHL"
    },
    "10505": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10506": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10509": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10511": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10512": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "ADD",
      "path": "20"
    },
    "10513": {
      "op": "MSTORE"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10518": {
      "op": "DUP3"
    },
    "10519": {
      "op": "ADD"
    },
    "10520": {
      "op": "MSTORE"
    },
    "10521": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472"
    },
    "10554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10556": {
      "op": "DUP3"
    },
    "10557": {
      "op": "ADD"
    },
    "10558": {
      "op": "MSTORE"
    },
    "10559": {
      "op": "PUSH2",
      "value": "0x6177"
    },
    "10562": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10564": {
      "op": "SHL"
    },
    "10565": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10567": {
      "op": "DUP3"
    },
    "10568": {
      "op": "ADD"
    },
    "10569": {
      "op": "MSTORE"
    },
    "10570": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10572": {
      "op": "ADD"
    },
    "10573": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "10576": {
      "op": "JUMP"
    },
    "10577": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22405,
        22469
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10578": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22182,
        22755
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2967"
    },
    "10581": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22182,
        22755
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10582": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22182,
        22755
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10583": {
      "op": "POP"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10587": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10588": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22695,
        22707
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 123
    },
    "10589": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22695,
        22707
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10596": {
      "op": "SHL"
    },
    "10597": {
      "op": "SUB"
    },
    "10598": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "10599": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22182,
        22755
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10600": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23060,
        23080
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "10602": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23060,
        23080
      ],
      "op": "DUP13",
      "path": "20"
    },
    "10603": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23060,
        23080
      ],
      "op": "ADD",
      "path": "20"
    },
    "10604": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23060,
        23080
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10611": {
      "op": "SHL"
    },
    "10612": {
      "op": "SUB"
    },
    "10613": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23060,
        23080
      ],
      "op": "AND",
      "path": "20"
    },
    "10614": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23046,
        23056
      ],
      "op": "CALLER",
      "path": "20"
    },
    "10615": {
      "branch": 182,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23046,
        23080
      ],
      "op": "SUB",
      "path": "20"
    },
    "10616": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23042,
        23327
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29B5"
    },
    "10619": {
      "branch": 182,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23042,
        23327
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10620": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23115,
        23135
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10621": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23100,
        23112
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10622": {
      "branch": 183,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23100,
        23135
      ],
      "op": "GT",
      "path": "20"
    },
    "10623": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "10624": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x299E"
    },
    "10627": {
      "branch": 183,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10628": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23173,
        23208
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 124,
      "value": "0x298D"
    },
    "10631": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23188,
        23208
      ],
      "op": "DUP8",
      "path": "20"
    },
    "10632": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23173,
        23185
      ],
      "op": "DUP10",
      "path": "20"
    },
    "10633": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23173,
        23208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31B9"
    },
    "10636": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        23173,
        23208
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10637": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23173,
        23208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10638": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2997"
    },
    "10641": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10642": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10643": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "10646": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        23155,
        23209
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10647": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10648": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10649": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23155,
        23209
      ],
      "op": "POP",
      "path": "20"
    },
    "10650": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29B5"
    },
    "10653": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10654": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10655": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23266,
        23301
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 125,
      "value": "0x29A8"
    },
    "10658": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23289,
        23301
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10659": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23266,
        23286
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10660": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23266,
        23301
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31B9"
    },
    "10663": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        23266,
        23301
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10664": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23266,
        23301
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10665": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29B2"
    },
    "10668": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10669": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10670": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31B9"
    },
    "10673": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        23248,
        23302
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10674": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10675": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10676": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23248,
        23302
      ],
      "op": "POP",
      "path": "20"
    },
    "10677": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23096,
        23317
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10678": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23345,
        23358
      ],
      "op": "SWAP15",
      "path": "20",
      "statement": 126
    },
    "10679": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23360,
        23373
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10680": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23360,
        23373
      ],
      "op": "SWAP14",
      "path": "20"
    },
    "10681": {
      "op": "POP"
    },
    "10682": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        19943,
        23381
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "op": "POP"
    },
    "10685": {
      "op": "POP"
    },
    "10686": {
      "op": "POP"
    },
    "10687": {
      "op": "POP"
    },
    "10688": {
      "op": "POP"
    },
    "10689": {
      "op": "POP"
    },
    "10690": {
      "op": "POP"
    },
    "10691": {
      "op": "POP"
    },
    "10692": {
      "op": "POP"
    },
    "10693": {
      "op": "POP"
    },
    "10694": {
      "op": "POP"
    },
    "10695": {
      "fn": "RequestManager.resolveClaim",
      "jump": "o",
      "offset": [
        19943,
        23381
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10696": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23387,
        23882
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10703": {
      "op": "SHL"
    },
    "10704": {
      "op": "SUB"
    },
    "10705": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10706": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "AND",
      "path": "20"
    },
    "10707": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23471,
        23490
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10709": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10710": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10711": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10712": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10714": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10716": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10717": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10718": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10719": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10721": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10722": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10723": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10724": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10725": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10727": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10728": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "ADD",
      "path": "20"
    },
    "10729": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10730": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23581,
        23596
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 127
    },
    "10731": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23581,
        23596
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10732": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10733": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10734": {
      "op": "SWAP1"
    },
    "10735": {
      "op": "DUP2"
    },
    "10736": {
      "op": "MSTORE"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10743": {
      "op": "SHL"
    },
    "10744": {
      "op": "SUB"
    },
    "10745": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10746": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10747": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23536,
        23549
      ],
      "op": "AND",
      "path": "20"
    },
    "10748": {
      "op": "SWAP3"
    },
    "10749": {
      "op": "DUP2"
    },
    "10750": {
      "op": "ADD"
    },
    "10751": {
      "op": "DUP4"
    },
    "10752": {
      "op": "SWAP1"
    },
    "10753": {
      "op": "MSTORE"
    },
    "10754": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10755": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23493,
        23508
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10756": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565"
    },
    "10789": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10790": {
      "op": "ADD"
    },
    "10791": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10793": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10794": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10795": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10796": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "SUB",
      "path": "20"
    },
    "10797": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10798": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23564,
        23606
      ],
      "op": "LOG1",
      "path": "20"
    },
    "10799": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23640
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 128,
      "value": "0x5"
    },
    "10801": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23640
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10802": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23640
      ],
      "op": "ADD",
      "path": "20"
    },
    "10803": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10804": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10811": {
      "op": "SHL"
    },
    "10812": {
      "op": "SUB"
    },
    "10813": {
      "op": "NOT"
    },
    "10814": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "AND",
      "path": "20"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10821": {
      "op": "SHL"
    },
    "10822": {
      "op": "SUB"
    },
    "10823": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10824": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10825": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "AND",
      "path": "20"
    },
    "10826": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10827": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10828": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10829": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "OR",
      "path": "20"
    },
    "10830": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10831": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10832": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23617,
        23650
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10833": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 129,
      "value": "0x4"
    },
    "10835": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10836": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "ADD",
      "path": "20"
    },
    "10837": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10840": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23683,
        23709
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10841": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23683,
        23709
      ],
      "op": "ADD",
      "path": "20"
    },
    "10842": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23683,
        23709
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10849": {
      "op": "SHL"
    },
    "10850": {
      "op": "SUB"
    },
    "10851": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23683,
        23709
      ],
      "op": "AND",
      "path": "20"
    },
    "10852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10854": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10855": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10856": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10857": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23682
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "10859": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10861": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10862": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10864": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10865": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "10866": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10867": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10872": {
      "op": "SHL"
    },
    "10873": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10874": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10875": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "DIV",
      "path": "20"
    },
    "10876": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10877": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10878": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "AND",
      "path": "20"
    },
    "10879": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10880": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23710
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10881": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A8B"
    },
    "10884": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10885": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10886": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23714,
        23746
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10887": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "10890": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        23661,
        23746
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10891": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10892": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10893": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10894": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23661,
        23746
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "10895": {
      "op": "POP"
    },
    "10896": {
      "op": "POP"
    },
    "10897": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10899": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10900": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "ADD",
      "path": "20"
    },
    "10901": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10902": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 130,
      "value": "0x4"
    },
    "10904": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10905": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "ADD",
      "path": "20"
    },
    "10906": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10907": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23858
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "10909": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23858
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10910": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23858
      ],
      "op": "ADD",
      "path": "20"
    },
    "10911": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23858
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "10912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10918": {
      "op": "SHL"
    },
    "10919": {
      "op": "SUB"
    },
    "10920": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10921": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10922": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "AND",
      "path": "20"
    },
    "10923": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23779,
        23805
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10924": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23816,
        23875
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2ACC"
    },
    "10927": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23816,
        23875
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10928": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23835,
        23842
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10929": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23835,
        23842
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10930": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23874
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E9"
    },
    "10933": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23874
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10934": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "PUSH5",
      "path": "20",
      "value": "0x100000000"
    },
    "10940": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10941": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "DIV",
      "path": "20"
    },
    "10942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10946": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10948": {
      "op": "SHL"
    },
    "10949": {
      "op": "SUB"
    },
    "10950": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "AND",
      "path": "20"
    },
    "10951": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23861,
        23874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10952": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23844,
        23874
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "10955": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        23844,
        23874
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10956": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23816,
        23875
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10957": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23461,
        23882
      ],
      "op": "POP",
      "path": "20"
    },
    "10958": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23461,
        23882
      ],
      "op": "POP",
      "path": "20"
    },
    "10959": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23461,
        23882
      ],
      "op": "POP",
      "path": "20"
    },
    "10960": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23387,
        23882
      ],
      "op": "POP",
      "path": "20"
    },
    "10961": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        23387,
        23882
      ],
      "op": "POP",
      "path": "20"
    },
    "10962": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "o",
      "offset": [
        23387,
        23882
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10963": {
      "fn": "Math.max",
      "offset": [
        413,
        517
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10964": {
      "fn": "Math.max",
      "offset": [
        471,
        478
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "10966": {
      "fn": "Math.max",
      "offset": [
        501,
        502
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 131
    },
    "10967": {
      "fn": "Math.max",
      "offset": [
        497,
        498
      ],
      "op": "DUP4",
      "path": "9"
    },
    "10968": {
      "branch": 189,
      "fn": "Math.max",
      "offset": [
        497,
        502
      ],
      "op": "GT",
      "path": "9"
    },
    "10969": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AE2"
    },
    "10972": {
      "branch": 189,
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "10973": {
      "fn": "Math.max",
      "offset": [
        509,
        510
      ],
      "op": "DUP2",
      "path": "9"
    },
    "10974": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AE4"
    },
    "10977": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMP",
      "path": "9"
    },
    "10978": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10979": {
      "fn": "Math.max",
      "offset": [
        505,
        506
      ],
      "op": "DUP3",
      "path": "9"
    },
    "10980": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10981": {
      "fn": "Math.max",
      "offset": [
        490,
        510
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "10982": {
      "fn": "Math.max",
      "offset": [
        413,
        517
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "10983": {
      "op": "POP"
    },
    "10984": {
      "op": "POP"
    },
    "10985": {
      "op": "POP"
    },
    "10986": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        413,
        517
      ],
      "op": "JUMP",
      "path": "9"
    },
    "10987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10988": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4189
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B40"
    },
    "10993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4220,
        4224
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11000": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "6"
    },
    "11001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11011": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "6"
    },
    "11012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "11045": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11046": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11047": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "POP",
      "path": "6"
    },
    "11048": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4200,
        4205
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11055": {
      "op": "SHL"
    },
    "11056": {
      "op": "SUB"
    },
    "11057": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "AND",
      "path": "6"
    },
    "11058": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C06"
    },
    "11061": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11062": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11063": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11064": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "11070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "AND",
      "path": "6"
    },
    "11071": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11072": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11073": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11074": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "11075": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11076": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11077": {
      "op": "POP"
    },
    "11078": {
      "branch": 198,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4296
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "11079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1411"
    },
    "11082": {
      "branch": 198,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11083": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4370,
        4380
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 132
    },
    "11084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11085": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "6"
    },
    "11088": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11089": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "11090": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "6"
    },
    "11092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11093": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5E"
    },
    "11096": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11097": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11098": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x304E"
    },
    "11101": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11102": {
      "branch": 199,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11103": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1411"
    },
    "11106": {
      "branch": 199,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11107": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11109": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "11110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11116": {
      "op": "SHL"
    },
    "11117": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11118": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11121": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "11123": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11124": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "ADD",
      "path": "6"
    },
    "11125": {
      "op": "MSTORE"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11130": {
      "op": "DUP3"
    },
    "11131": {
      "op": "ADD"
    },
    "11132": {
      "op": "MSTORE"
    },
    "11133": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "11166": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11168": {
      "op": "DUP3"
    },
    "11169": {
      "op": "ADD"
    },
    "11170": {
      "op": "MSTORE"
    },
    "11171": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "11184": {
      "op": "SHL"
    },
    "11185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11187": {
      "op": "DUP3"
    },
    "11188": {
      "op": "ADD"
    },
    "11189": {
      "op": "MSTORE"
    },
    "11190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11192": {
      "op": "ADD"
    },
    "11193": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA30"
    },
    "11196": {
      "op": "JUMP"
    },
    "11197": {
      "fn": "Pausable._requirePaused",
      "offset": [
        1945,
        2051
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11198": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "11200": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11201": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11203": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "AND",
      "path": "1"
    },
    "11204": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 133,
      "value": "0x1239"
    },
    "11207": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11208": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11210": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11217": {
      "op": "SHL"
    },
    "11218": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11219": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11222": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11224": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11225": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "ADD",
      "path": "1"
    },
    "11226": {
      "op": "MSTORE"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11231": {
      "op": "DUP3"
    },
    "11232": {
      "op": "ADD"
    },
    "11233": {
      "op": "MSTORE"
    },
    "11234": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "11255": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "11257": {
      "op": "SHL"
    },
    "11258": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11260": {
      "op": "DUP3"
    },
    "11261": {
      "op": "ADD"
    },
    "11262": {
      "op": "MSTORE"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11265": {
      "op": "ADD"
    },
    "11266": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA30"
    },
    "11269": {
      "op": "JUMP"
    },
    "11270": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11271": {
      "fn": "Address.functionCall",
      "offset": [
        4006,
        4018
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "11273": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 134,
      "value": "0x2C15"
    },
    "11276": {
      "fn": "Address.functionCall",
      "offset": [
        4059,
        4065
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11277": {
      "fn": "Address.functionCall",
      "offset": [
        4067,
        4071
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11278": {
      "fn": "Address.functionCall",
      "offset": [
        4073,
        4074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11280": {
      "fn": "Address.functionCall",
      "offset": [
        4076,
        4088
      ],
      "op": "DUP6",
      "path": "7"
    },
    "11281": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C1D"
    },
    "11284": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4037,
        4089
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11285": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11286": {
      "fn": "Address.functionCall",
      "offset": [
        4030,
        4089
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "11287": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "11288": {
      "op": "POP"
    },
    "11289": {
      "op": "POP"
    },
    "11290": {
      "op": "POP"
    },
    "11291": {
      "op": "POP"
    },
    "11292": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5125,
        5137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "11296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5182,
        5187
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 135
    },
    "11297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5178
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "11298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5187
      ],
      "op": "LT",
      "path": "7"
    },
    "11299": {
      "branch": 184,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5187
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "11300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C7E"
    },
    "11303": {
      "branch": 184,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11313": {
      "op": "SHL"
    },
    "11314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "ADD",
      "path": "7"
    },
    "11322": {
      "op": "MSTORE"
    },
    "11323": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11327": {
      "op": "DUP3"
    },
    "11328": {
      "op": "ADD"
    },
    "11329": {
      "op": "MSTORE"
    },
    "11330": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11365": {
      "op": "DUP3"
    },
    "11366": {
      "op": "ADD"
    },
    "11367": {
      "op": "MSTORE"
    },
    "11368": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "11377": {
      "op": "SHL"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11380": {
      "op": "DUP3"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "MSTORE"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11385": {
      "op": "ADD"
    },
    "11386": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA30"
    },
    "11389": {
      "op": "JUMP"
    },
    "11390": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11391": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5241,
        5253
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11393": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5255,
        5278
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11394": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5288
      ],
      "op": "DUP7",
      "path": "7"
    },
    "11395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11401": {
      "op": "SHL"
    },
    "11402": {
      "op": "SUB"
    },
    "11403": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5293
      ],
      "op": "AND",
      "path": "7"
    },
    "11404": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5301,
        5306
      ],
      "op": "DUP6",
      "path": "7"
    },
    "11405": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5308,
        5312
      ],
      "op": "DUP8",
      "path": "7"
    },
    "11406": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11408": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11409": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C9A"
    },
    "11412": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11413": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11414": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3221"
    },
    "11417": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11418": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11419": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11423": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11424": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11425": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11426": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SUB",
      "path": "7"
    },
    "11427": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11428": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP6",
      "path": "7"
    },
    "11429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP8",
      "path": "7"
    },
    "11430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "GAS",
      "path": "7"
    },
    "11431": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "CALL",
      "path": "7"
    },
    "11432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "11433": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11434": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11435": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "11437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11441": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "EQ",
      "path": "7"
    },
    "11442": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CD7"
    },
    "11445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11451": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "11453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "NOT",
      "path": "7"
    },
    "11454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "11456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "11457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "7"
    },
    "11458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "AND",
      "path": "7"
    },
    "11459": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "7"
    },
    "11461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "11465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "11468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "7"
    },
    "11474": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "11475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CDC"
    },
    "11478": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11479": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "11482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11483": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "11490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 136,
      "value": "0x2CED"
    },
    "11493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5357,
        5363
      ],
      "op": "DUP8",
      "path": "7"
    },
    "11494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5365,
        5372
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5384
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5386,
        5398
      ],
      "op": "DUP8",
      "path": "7"
    },
    "11497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5356
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CF8"
    },
    "11500": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5323,
        5399
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "11503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "11504": {
      "op": "POP"
    },
    "11505": {
      "op": "POP"
    },
    "11506": {
      "op": "POP"
    },
    "11507": {
      "op": "POP"
    },
    "11508": {
      "op": "POP"
    },
    "11509": {
      "op": "POP"
    },
    "11510": {
      "op": "POP"
    },
    "11511": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11512": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7466,
        8094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11513": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7646,
        7658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "11515": {
      "branch": 185,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7674,
        7681
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11516": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "11517": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D67"
    },
    "11520": {
      "branch": 185,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11521": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11522": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7718
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11523": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7722,
        7723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "11525": {
      "branch": 186,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7723
      ],
      "op": "SUB",
      "path": "7"
    },
    "11526": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D60"
    },
    "11529": {
      "branch": 186,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11536": {
      "op": "SHL"
    },
    "11537": {
      "op": "SUB"
    },
    "11538": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 137
    },
    "11539": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "7"
    },
    "11540": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "11541": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 138,
      "value": "0x2D60"
    },
    "11544": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11545": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11547": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11554": {
      "op": "SHL"
    },
    "11555": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11556": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11559": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11561": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11562": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "ADD",
      "path": "7"
    },
    "11563": {
      "op": "MSTORE"
    },
    "11564": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "11566": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11568": {
      "op": "DUP3"
    },
    "11569": {
      "op": "ADD"
    },
    "11570": {
      "op": "MSTORE"
    },
    "11571": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "11604": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11606": {
      "op": "DUP3"
    },
    "11607": {
      "op": "ADD"
    },
    "11608": {
      "op": "MSTORE"
    },
    "11609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11611": {
      "op": "ADD"
    },
    "11612": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA30"
    },
    "11615": {
      "op": "JUMP"
    },
    "11616": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11617": {
      "op": "POP"
    },
    "11618": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8003,
        8013
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 139
    },
    "11619": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C15"
    },
    "11622": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11623": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11624": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8044,
        8077
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 140,
      "value": "0x2C15"
    },
    "11627": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8052,
        8062
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11628": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8064,
        8076
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11629": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11630": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11631": {
      "branch": 187,
      "fn": "Address._revert",
      "offset": [
        8775,
        8796
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "11632": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D7C"
    },
    "11635": {
      "branch": 187,
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11636": {
      "fn": "Address._revert",
      "offset": [
        9003,
        9013
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11637": {
      "fn": "Address._revert",
      "offset": [
        8997,
        9014
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11638": {
      "fn": "Address._revert",
      "offset": [
        9059,
        9074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11639": {
      "fn": "Address._revert",
      "offset": [
        9046,
        9056
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11640": {
      "fn": "Address._revert",
      "offset": [
        9042,
        9044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11642": {
      "fn": "Address._revert",
      "offset": [
        9038,
        9057
      ],
      "op": "ADD",
      "path": "7"
    },
    "11643": {
      "fn": "Address._revert",
      "offset": [
        9031,
        9075
      ],
      "op": "REVERT",
      "path": "7"
    },
    "11644": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11645": {
      "fn": "Address._revert",
      "offset": [
        9126,
        9138
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 141
    },
    "11646": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11648": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11655": {
      "op": "SHL"
    },
    "11656": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11657": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11658": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "11660": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "ADD",
      "path": "7"
    },
    "11661": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA30"
    },
    "11664": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11665": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11666": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x323D"
    },
    "11669": {
      "fn": "Address._revert",
      "jump": "i",
      "offset": [
        9119,
        9139
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11670": {
      "op": "JUMPDEST"
    },
    "11671": {
      "op": "DUP3"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11674": {
      "op": "DUP2"
    },
    "11675": {
      "op": "ADD"
    },
    "11676": {
      "op": "SWAP3"
    },
    "11677": {
      "op": "DUP3"
    },
    "11678": {
      "op": "ISZERO"
    },
    "11679": {
      "op": "PUSH2",
      "value": "0x2DDE"
    },
    "11682": {
      "op": "JUMPI"
    },
    "11683": {
      "op": "SWAP2"
    },
    "11684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11686": {
      "op": "MUL"
    },
    "11687": {
      "op": "DUP3"
    },
    "11688": {
      "op": "ADD"
    },
    "11689": {
      "op": "JUMPDEST"
    },
    "11690": {
      "op": "DUP3"
    },
    "11691": {
      "op": "DUP2"
    },
    "11692": {
      "op": "GT"
    },
    "11693": {
      "op": "ISZERO"
    },
    "11694": {
      "op": "PUSH2",
      "value": "0x2DDE"
    },
    "11697": {
      "op": "JUMPI"
    },
    "11698": {
      "op": "DUP3"
    },
    "11699": {
      "op": "MLOAD"
    },
    "11700": {
      "op": "DUP3"
    },
    "11701": {
      "op": "SLOAD"
    },
    "11702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11708": {
      "op": "SHL"
    },
    "11709": {
      "op": "SUB"
    },
    "11710": {
      "op": "NOT"
    },
    "11711": {
      "op": "AND"
    },
    "11712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11718": {
      "op": "SHL"
    },
    "11719": {
      "op": "SUB"
    },
    "11720": {
      "op": "SWAP1"
    },
    "11721": {
      "op": "SWAP2"
    },
    "11722": {
      "op": "AND"
    },
    "11723": {
      "op": "OR"
    },
    "11724": {
      "op": "DUP3"
    },
    "11725": {
      "op": "SSTORE"
    },
    "11726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11728": {
      "op": "SWAP1"
    },
    "11729": {
      "op": "SWAP3"
    },
    "11730": {
      "op": "ADD"
    },
    "11731": {
      "op": "SWAP2"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11734": {
      "op": "SWAP1"
    },
    "11735": {
      "op": "SWAP2"
    },
    "11736": {
      "op": "ADD"
    },
    "11737": {
      "op": "SWAP1"
    },
    "11738": {
      "op": "PUSH2",
      "value": "0x2DA9"
    },
    "11741": {
      "op": "JUMP"
    },
    "11742": {
      "op": "JUMPDEST"
    },
    "11743": {
      "op": "POP"
    },
    "11744": {
      "op": "PUSH2",
      "value": "0x2DEA"
    },
    "11747": {
      "op": "SWAP3"
    },
    "11748": {
      "op": "SWAP2"
    },
    "11749": {
      "op": "POP"
    },
    "11750": {
      "op": "PUSH2",
      "value": "0x2DEE"
    },
    "11753": {
      "jump": "i",
      "op": "JUMP"
    },
    "11754": {
      "op": "JUMPDEST"
    },
    "11755": {
      "op": "POP"
    },
    "11756": {
      "op": "SWAP1"
    },
    "11757": {
      "jump": "o",
      "op": "JUMP"
    },
    "11758": {
      "op": "JUMPDEST"
    },
    "11759": {
      "op": "JUMPDEST"
    },
    "11760": {
      "op": "DUP1"
    },
    "11761": {
      "op": "DUP3"
    },
    "11762": {
      "op": "GT"
    },
    "11763": {
      "op": "ISZERO"
    },
    "11764": {
      "op": "PUSH2",
      "value": "0x2DEA"
    },
    "11767": {
      "op": "JUMPI"
    },
    "11768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11770": {
      "op": "DUP2"
    },
    "11771": {
      "op": "SSTORE"
    },
    "11772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11774": {
      "op": "ADD"
    },
    "11775": {
      "op": "PUSH2",
      "value": "0x2DEF"
    },
    "11778": {
      "op": "JUMP"
    },
    "11779": {
      "op": "JUMPDEST"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11782": {
      "op": "DUP1"
    },
    "11783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11787": {
      "op": "DUP5"
    },
    "11788": {
      "op": "DUP7"
    },
    "11789": {
      "op": "SUB"
    },
    "11790": {
      "op": "SLT"
    },
    "11791": {
      "op": "ISZERO"
    },
    "11792": {
      "op": "PUSH2",
      "value": "0x2E18"
    },
    "11795": {
      "op": "JUMPI"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11798": {
      "op": "DUP1"
    },
    "11799": {
      "op": "REVERT"
    },
    "11800": {
      "op": "JUMPDEST"
    },
    "11801": {
      "op": "POP"
    },
    "11802": {
      "op": "POP"
    },
    "11803": {
      "op": "DUP2"
    },
    "11804": {
      "op": "CALLDATALOAD"
    },
    "11805": {
      "op": "SWAP4"
    },
    "11806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11808": {
      "op": "DUP4"
    },
    "11809": {
      "op": "ADD"
    },
    "11810": {
      "op": "CALLDATALOAD"
    },
    "11811": {
      "op": "SWAP4"
    },
    "11812": {
      "op": "POP"
    },
    "11813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11815": {
      "op": "SWAP1"
    },
    "11816": {
      "op": "SWAP3"
    },
    "11817": {
      "op": "ADD"
    },
    "11818": {
      "op": "CALLDATALOAD"
    },
    "11819": {
      "op": "SWAP2"
    },
    "11820": {
      "op": "SWAP1"
    },
    "11821": {
      "op": "POP"
    },
    "11822": {
      "jump": "o",
      "op": "JUMP"
    },
    "11823": {
      "op": "JUMPDEST"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11826": {
      "op": "DUP1"
    },
    "11827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11829": {
      "op": "DUP4"
    },
    "11830": {
      "op": "DUP6"
    },
    "11831": {
      "op": "SUB"
    },
    "11832": {
      "op": "SLT"
    },
    "11833": {
      "op": "ISZERO"
    },
    "11834": {
      "op": "PUSH2",
      "value": "0x2E42"
    },
    "11837": {
      "op": "JUMPI"
    },
    "11838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11840": {
      "op": "DUP1"
    },
    "11841": {
      "op": "REVERT"
    },
    "11842": {
      "op": "JUMPDEST"
    },
    "11843": {
      "op": "POP"
    },
    "11844": {
      "op": "POP"
    },
    "11845": {
      "op": "DUP1"
    },
    "11846": {
      "op": "CALLDATALOAD"
    },
    "11847": {
      "op": "SWAP3"
    },
    "11848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11850": {
      "op": "SWAP1"
    },
    "11851": {
      "op": "SWAP2"
    },
    "11852": {
      "op": "ADD"
    },
    "11853": {
      "op": "CALLDATALOAD"
    },
    "11854": {
      "op": "SWAP2"
    },
    "11855": {
      "op": "POP"
    },
    "11856": {
      "jump": "o",
      "op": "JUMP"
    },
    "11857": {
      "op": "JUMPDEST"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11862": {
      "op": "DUP3"
    },
    "11863": {
      "op": "DUP5"
    },
    "11864": {
      "op": "SUB"
    },
    "11865": {
      "op": "SLT"
    },
    "11866": {
      "op": "ISZERO"
    },
    "11867": {
      "op": "PUSH2",
      "value": "0x2E63"
    },
    "11870": {
      "op": "JUMPI"
    },
    "11871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11873": {
      "op": "DUP1"
    },
    "11874": {
      "op": "REVERT"
    },
    "11875": {
      "op": "JUMPDEST"
    },
    "11876": {
      "op": "POP"
    },
    "11877": {
      "op": "CALLDATALOAD"
    },
    "11878": {
      "op": "SWAP2"
    },
    "11879": {
      "op": "SWAP1"
    },
    "11880": {
      "op": "POP"
    },
    "11881": {
      "jump": "o",
      "op": "JUMP"
    },
    "11882": {
      "op": "JUMPDEST"
    },
    "11883": {
      "op": "DUP1"
    },
    "11884": {
      "op": "CALLDATALOAD"
    },
    "11885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11891": {
      "op": "SHL"
    },
    "11892": {
      "op": "SUB"
    },
    "11893": {
      "op": "DUP2"
    },
    "11894": {
      "op": "AND"
    },
    "11895": {
      "op": "DUP2"
    },
    "11896": {
      "op": "EQ"
    },
    "11897": {
      "op": "PUSH2",
      "value": "0x2E81"
    },
    "11900": {
      "op": "JUMPI"
    },
    "11901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11903": {
      "op": "DUP1"
    },
    "11904": {
      "op": "REVERT"
    },
    "11905": {
      "op": "JUMPDEST"
    },
    "11906": {
      "op": "SWAP2"
    },
    "11907": {
      "op": "SWAP1"
    },
    "11908": {
      "op": "POP"
    },
    "11909": {
      "jump": "o",
      "op": "JUMP"
    },
    "11910": {
      "op": "JUMPDEST"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11913": {
      "op": "DUP1"
    },
    "11914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11916": {
      "op": "DUP1"
    },
    "11917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11919": {
      "op": "DUP1"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11922": {
      "op": "DUP8"
    },
    "11923": {
      "op": "DUP10"
    },
    "11924": {
      "op": "SUB"
    },
    "11925": {
      "op": "SLT"
    },
    "11926": {
      "op": "ISZERO"
    },
    "11927": {
      "op": "PUSH2",
      "value": "0x2E9F"
    },
    "11930": {
      "op": "JUMPI"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11933": {
      "op": "DUP1"
    },
    "11934": {
      "op": "REVERT"
    },
    "11935": {
      "op": "JUMPDEST"
    },
    "11936": {
      "op": "DUP7"
    },
    "11937": {
      "op": "CALLDATALOAD"
    },
    "11938": {
      "op": "SWAP6"
    },
    "11939": {
      "op": "POP"
    },
    "11940": {
      "op": "PUSH2",
      "value": "0x2EAF"
    },
    "11943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11945": {
      "op": "DUP9"
    },
    "11946": {
      "op": "ADD"
    },
    "11947": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "11950": {
      "jump": "i",
      "op": "JUMP"
    },
    "11951": {
      "op": "JUMPDEST"
    },
    "11952": {
      "op": "SWAP5"
    },
    "11953": {
      "op": "POP"
    },
    "11954": {
      "op": "PUSH2",
      "value": "0x2EBD"
    },
    "11957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11959": {
      "op": "DUP9"
    },
    "11960": {
      "op": "ADD"
    },
    "11961": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "11964": {
      "jump": "i",
      "op": "JUMP"
    },
    "11965": {
      "op": "JUMPDEST"
    },
    "11966": {
      "op": "SWAP4"
    },
    "11967": {
      "op": "POP"
    },
    "11968": {
      "op": "PUSH2",
      "value": "0x2ECB"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11973": {
      "op": "DUP9"
    },
    "11974": {
      "op": "ADD"
    },
    "11975": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "11978": {
      "jump": "i",
      "op": "JUMP"
    },
    "11979": {
      "op": "JUMPDEST"
    },
    "11980": {
      "op": "SWAP3"
    },
    "11981": {
      "op": "POP"
    },
    "11982": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11984": {
      "op": "DUP8"
    },
    "11985": {
      "op": "ADD"
    },
    "11986": {
      "op": "CALLDATALOAD"
    },
    "11987": {
      "op": "SWAP2"
    },
    "11988": {
      "op": "POP"
    },
    "11989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11991": {
      "op": "DUP8"
    },
    "11992": {
      "op": "ADD"
    },
    "11993": {
      "op": "CALLDATALOAD"
    },
    "11994": {
      "op": "SWAP1"
    },
    "11995": {
      "op": "POP"
    },
    "11996": {
      "op": "SWAP3"
    },
    "11997": {
      "op": "SWAP6"
    },
    "11998": {
      "op": "POP"
    },
    "11999": {
      "op": "SWAP3"
    },
    "12000": {
      "op": "SWAP6"
    },
    "12001": {
      "op": "POP"
    },
    "12002": {
      "op": "SWAP3"
    },
    "12003": {
      "op": "SWAP6"
    },
    "12004": {
      "jump": "o",
      "op": "JUMP"
    },
    "12005": {
      "op": "JUMPDEST"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12010": {
      "op": "DUP3"
    },
    "12011": {
      "op": "DUP5"
    },
    "12012": {
      "op": "SUB"
    },
    "12013": {
      "op": "SLT"
    },
    "12014": {
      "op": "ISZERO"
    },
    "12015": {
      "op": "PUSH2",
      "value": "0x2EF7"
    },
    "12018": {
      "op": "JUMPI"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12021": {
      "op": "DUP1"
    },
    "12022": {
      "op": "REVERT"
    },
    "12023": {
      "op": "JUMPDEST"
    },
    "12024": {
      "op": "PUSH2",
      "value": "0x2AE4"
    },
    "12027": {
      "op": "DUP3"
    },
    "12028": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "12031": {
      "jump": "i",
      "op": "JUMP"
    },
    "12032": {
      "op": "JUMPDEST"
    },
    "12033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12037": {
      "op": "DUP3"
    },
    "12038": {
      "op": "DUP5"
    },
    "12039": {
      "op": "SUB"
    },
    "12040": {
      "op": "SLT"
    },
    "12041": {
      "op": "ISZERO"
    },
    "12042": {
      "op": "PUSH2",
      "value": "0x2F12"
    },
    "12045": {
      "op": "JUMPI"
    },
    "12046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12048": {
      "op": "DUP1"
    },
    "12049": {
      "op": "REVERT"
    },
    "12050": {
      "op": "JUMPDEST"
    },
    "12051": {
      "op": "DUP2"
    },
    "12052": {
      "op": "CALLDATALOAD"
    },
    "12053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12057": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12059": {
      "op": "SHL"
    },
    "12060": {
      "op": "SUB"
    },
    "12061": {
      "op": "DUP2"
    },
    "12062": {
      "op": "AND"
    },
    "12063": {
      "op": "DUP2"
    },
    "12064": {
      "op": "EQ"
    },
    "12065": {
      "op": "PUSH2",
      "value": "0x2AE4"
    },
    "12068": {
      "op": "JUMPI"
    },
    "12069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12071": {
      "op": "DUP1"
    },
    "12072": {
      "op": "REVERT"
    },
    "12073": {
      "op": "JUMPDEST"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12076": {
      "op": "DUP1"
    },
    "12077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12079": {
      "op": "DUP1"
    },
    "12080": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12082": {
      "op": "DUP6"
    },
    "12083": {
      "op": "DUP8"
    },
    "12084": {
      "op": "SUB"
    },
    "12085": {
      "op": "SLT"
    },
    "12086": {
      "op": "ISZERO"
    },
    "12087": {
      "op": "PUSH2",
      "value": "0x2F3F"
    },
    "12090": {
      "op": "JUMPI"
    },
    "12091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12093": {
      "op": "DUP1"
    },
    "12094": {
      "op": "REVERT"
    },
    "12095": {
      "op": "JUMPDEST"
    },
    "12096": {
      "op": "DUP5"
    },
    "12097": {
      "op": "CALLDATALOAD"
    },
    "12098": {
      "op": "SWAP4"
    },
    "12099": {
      "op": "POP"
    },
    "12100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12102": {
      "op": "DUP6"
    },
    "12103": {
      "op": "ADD"
    },
    "12104": {
      "op": "CALLDATALOAD"
    },
    "12105": {
      "op": "SWAP3"
    },
    "12106": {
      "op": "POP"
    },
    "12107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12109": {
      "op": "DUP6"
    },
    "12110": {
      "op": "ADD"
    },
    "12111": {
      "op": "CALLDATALOAD"
    },
    "12112": {
      "op": "SWAP2"
    },
    "12113": {
      "op": "POP"
    },
    "12114": {
      "op": "PUSH2",
      "value": "0x2F5D"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12119": {
      "op": "DUP7"
    },
    "12120": {
      "op": "ADD"
    },
    "12121": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "12124": {
      "jump": "i",
      "op": "JUMP"
    },
    "12125": {
      "op": "JUMPDEST"
    },
    "12126": {
      "op": "SWAP1"
    },
    "12127": {
      "op": "POP"
    },
    "12128": {
      "op": "SWAP3"
    },
    "12129": {
      "op": "SWAP6"
    },
    "12130": {
      "op": "SWAP2"
    },
    "12131": {
      "op": "SWAP5"
    },
    "12132": {
      "op": "POP"
    },
    "12133": {
      "op": "SWAP3"
    },
    "12134": {
      "op": "POP"
    },
    "12135": {
      "jump": "o",
      "op": "JUMP"
    },
    "12136": {
      "op": "JUMPDEST"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12139": {
      "op": "DUP1"
    },
    "12140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12142": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12144": {
      "op": "DUP5"
    },
    "12145": {
      "op": "DUP7"
    },
    "12146": {
      "op": "SUB"
    },
    "12147": {
      "op": "SLT"
    },
    "12148": {
      "op": "ISZERO"
    },
    "12149": {
      "op": "PUSH2",
      "value": "0x2F7D"
    },
    "12152": {
      "op": "JUMPI"
    },
    "12153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12155": {
      "op": "DUP1"
    },
    "12156": {
      "op": "REVERT"
    },
    "12157": {
      "op": "JUMPDEST"
    },
    "12158": {
      "op": "DUP4"
    },
    "12159": {
      "op": "CALLDATALOAD"
    },
    "12160": {
      "op": "SWAP3"
    },
    "12161": {
      "op": "POP"
    },
    "12162": {
      "op": "PUSH2",
      "value": "0x2F8D"
    },
    "12165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12167": {
      "op": "DUP6"
    },
    "12168": {
      "op": "ADD"
    },
    "12169": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "12172": {
      "jump": "i",
      "op": "JUMP"
    },
    "12173": {
      "op": "JUMPDEST"
    },
    "12174": {
      "op": "SWAP2"
    },
    "12175": {
      "op": "POP"
    },
    "12176": {
      "op": "PUSH2",
      "value": "0x2F9B"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12181": {
      "op": "DUP6"
    },
    "12182": {
      "op": "ADD"
    },
    "12183": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "12186": {
      "jump": "i",
      "op": "JUMP"
    },
    "12187": {
      "op": "JUMPDEST"
    },
    "12188": {
      "op": "SWAP1"
    },
    "12189": {
      "op": "POP"
    },
    "12190": {
      "op": "SWAP3"
    },
    "12191": {
      "op": "POP"
    },
    "12192": {
      "op": "SWAP3"
    },
    "12193": {
      "op": "POP"
    },
    "12194": {
      "op": "SWAP3"
    },
    "12195": {
      "jump": "o",
      "op": "JUMP"
    },
    "12196": {
      "op": "JUMPDEST"
    },
    "12197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12199": {
      "op": "DUP1"
    },
    "12200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12202": {
      "op": "DUP4"
    },
    "12203": {
      "op": "DUP6"
    },
    "12204": {
      "op": "SUB"
    },
    "12205": {
      "op": "SLT"
    },
    "12206": {
      "op": "ISZERO"
    },
    "12207": {
      "op": "PUSH2",
      "value": "0x2FB7"
    },
    "12210": {
      "op": "JUMPI"
    },
    "12211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12213": {
      "op": "DUP1"
    },
    "12214": {
      "op": "REVERT"
    },
    "12215": {
      "op": "JUMPDEST"
    },
    "12216": {
      "op": "PUSH2",
      "value": "0x2FC0"
    },
    "12219": {
      "op": "DUP4"
    },
    "12220": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "12223": {
      "jump": "i",
      "op": "JUMP"
    },
    "12224": {
      "op": "JUMPDEST"
    },
    "12225": {
      "op": "SWAP2"
    },
    "12226": {
      "op": "POP"
    },
    "12227": {
      "op": "PUSH2",
      "value": "0x2FCE"
    },
    "12230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12232": {
      "op": "DUP5"
    },
    "12233": {
      "op": "ADD"
    },
    "12234": {
      "op": "PUSH2",
      "value": "0x2E6A"
    },
    "12237": {
      "jump": "i",
      "op": "JUMP"
    },
    "12238": {
      "op": "JUMPDEST"
    },
    "12239": {
      "op": "SWAP1"
    },
    "12240": {
      "op": "POP"
    },
    "12241": {
      "op": "SWAP3"
    },
    "12242": {
      "op": "POP"
    },
    "12243": {
      "op": "SWAP3"
    },
    "12244": {
      "op": "SWAP1"
    },
    "12245": {
      "op": "POP"
    },
    "12246": {
      "jump": "o",
      "op": "JUMP"
    },
    "12247": {
      "op": "JUMPDEST"
    },
    "12248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12250": {
      "op": "DUP1"
    },
    "12251": {
      "op": "DUP3"
    },
    "12252": {
      "op": "MSTORE"
    },
    "12253": {
      "op": "DUP2"
    },
    "12254": {
      "op": "DUP2"
    },
    "12255": {
      "op": "ADD"
    },
    "12256": {
      "op": "MSTORE"
    },
    "12257": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12292": {
      "op": "DUP3"
    },
    "12293": {
      "op": "ADD"
    },
    "12294": {
      "op": "MSTORE"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12297": {
      "op": "ADD"
    },
    "12298": {
      "op": "SWAP1"
    },
    "12299": {
      "jump": "o",
      "op": "JUMP"
    },
    "12300": {
      "op": "JUMPDEST"
    },
    "12301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12303": {
      "op": "DUP1"
    },
    "12304": {
      "op": "DUP3"
    },
    "12305": {
      "op": "MSTORE"
    },
    "12306": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12308": {
      "op": "SWAP1"
    },
    "12309": {
      "op": "DUP3"
    },
    "12310": {
      "op": "ADD"
    },
    "12311": {
      "op": "MSTORE"
    },
    "12312": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12347": {
      "op": "DUP3"
    },
    "12348": {
      "op": "ADD"
    },
    "12349": {
      "op": "MSTORE"
    },
    "12350": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "12353": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "12355": {
      "op": "SHL"
    },
    "12356": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12358": {
      "op": "DUP3"
    },
    "12359": {
      "op": "ADD"
    },
    "12360": {
      "op": "MSTORE"
    },
    "12361": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12363": {
      "op": "ADD"
    },
    "12364": {
      "op": "SWAP1"
    },
    "12365": {
      "jump": "o",
      "op": "JUMP"
    },
    "12366": {
      "op": "JUMPDEST"
    },
    "12367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12371": {
      "op": "DUP3"
    },
    "12372": {
      "op": "DUP5"
    },
    "12373": {
      "op": "SUB"
    },
    "12374": {
      "op": "SLT"
    },
    "12375": {
      "op": "ISZERO"
    },
    "12376": {
      "op": "PUSH2",
      "value": "0x3060"
    },
    "12379": {
      "op": "JUMPI"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12382": {
      "op": "DUP1"
    },
    "12383": {
      "op": "REVERT"
    },
    "12384": {
      "op": "JUMPDEST"
    },
    "12385": {
      "op": "DUP2"
    },
    "12386": {
      "op": "MLOAD"
    },
    "12387": {
      "op": "DUP1"
    },
    "12388": {
      "op": "ISZERO"
    },
    "12389": {
      "op": "ISZERO"
    },
    "12390": {
      "op": "DUP2"
    },
    "12391": {
      "op": "EQ"
    },
    "12392": {
      "op": "PUSH2",
      "value": "0x2AE4"
    },
    "12395": {
      "op": "JUMPI"
    },
    "12396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12398": {
      "op": "DUP1"
    },
    "12399": {
      "op": "REVERT"
    },
    "12400": {
      "op": "JUMPDEST"
    },
    "12401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12403": {
      "op": "DUP1"
    },
    "12404": {
      "op": "DUP3"
    },
    "12405": {
      "op": "MSTORE"
    },
    "12406": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "12408": {
      "op": "SWAP1"
    },
    "12409": {
      "op": "DUP3"
    },
    "12410": {
      "op": "ADD"
    },
    "12411": {
      "op": "MSTORE"
    },
    "12412": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "12432": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "12434": {
      "op": "SHL"
    },
    "12435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12437": {
      "op": "DUP3"
    },
    "12438": {
      "op": "ADD"
    },
    "12439": {
      "op": "MSTORE"
    },
    "12440": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12442": {
      "op": "ADD"
    },
    "12443": {
      "op": "SWAP1"
    },
    "12444": {
      "jump": "o",
      "op": "JUMP"
    },
    "12445": {
      "op": "JUMPDEST"
    },
    "12446": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12451": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12453": {
      "op": "SHL"
    },
    "12454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12456": {
      "op": "MSTORE"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12461": {
      "op": "MSTORE"
    },
    "12462": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12466": {
      "op": "REVERT"
    },
    "12467": {
      "op": "JUMPDEST"
    },
    "12468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12470": {
      "op": "DUP3"
    },
    "12471": {
      "op": "NOT"
    },
    "12472": {
      "op": "DUP3"
    },
    "12473": {
      "op": "GT"
    },
    "12474": {
      "op": "ISZERO"
    },
    "12475": {
      "op": "PUSH2",
      "value": "0x30C6"
    },
    "12478": {
      "op": "JUMPI"
    },
    "12479": {
      "op": "PUSH2",
      "value": "0x30C6"
    },
    "12482": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12485": {
      "jump": "i",
      "op": "JUMP"
    },
    "12486": {
      "op": "JUMPDEST"
    },
    "12487": {
      "op": "POP"
    },
    "12488": {
      "op": "ADD"
    },
    "12489": {
      "op": "SWAP1"
    },
    "12490": {
      "jump": "o",
      "op": "JUMP"
    },
    "12491": {
      "op": "JUMPDEST"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12496": {
      "op": "DUP3"
    },
    "12497": {
      "op": "DUP5"
    },
    "12498": {
      "op": "SUB"
    },
    "12499": {
      "op": "SLT"
    },
    "12500": {
      "op": "ISZERO"
    },
    "12501": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12504": {
      "op": "JUMPI"
    },
    "12505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12507": {
      "op": "DUP1"
    },
    "12508": {
      "op": "REVERT"
    },
    "12509": {
      "op": "JUMPDEST"
    },
    "12510": {
      "op": "POP"
    },
    "12511": {
      "op": "MLOAD"
    },
    "12512": {
      "op": "SWAP2"
    },
    "12513": {
      "op": "SWAP1"
    },
    "12514": {
      "op": "POP"
    },
    "12515": {
      "jump": "o",
      "op": "JUMP"
    },
    "12516": {
      "op": "JUMPDEST"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12523": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12525": {
      "op": "SHL"
    },
    "12526": {
      "op": "SUB"
    },
    "12527": {
      "op": "DUP1"
    },
    "12528": {
      "op": "DUP4"
    },
    "12529": {
      "op": "AND"
    },
    "12530": {
      "op": "DUP2"
    },
    "12531": {
      "op": "DUP6"
    },
    "12532": {
      "op": "AND"
    },
    "12533": {
      "op": "DUP1"
    },
    "12534": {
      "op": "DUP4"
    },
    "12535": {
      "op": "SUB"
    },
    "12536": {
      "op": "DUP3"
    },
    "12537": {
      "op": "GT"
    },
    "12538": {
      "op": "ISZERO"
    },
    "12539": {
      "op": "PUSH2",
      "value": "0x3106"
    },
    "12542": {
      "op": "JUMPI"
    },
    "12543": {
      "op": "PUSH2",
      "value": "0x3106"
    },
    "12546": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12549": {
      "jump": "i",
      "op": "JUMP"
    },
    "12550": {
      "op": "JUMPDEST"
    },
    "12551": {
      "op": "ADD"
    },
    "12552": {
      "op": "SWAP5"
    },
    "12553": {
      "op": "SWAP4"
    },
    "12554": {
      "op": "POP"
    },
    "12555": {
      "op": "POP"
    },
    "12556": {
      "op": "POP"
    },
    "12557": {
      "op": "POP"
    },
    "12558": {
      "jump": "o",
      "op": "JUMP"
    },
    "12559": {
      "op": "JUMPDEST"
    },
    "12560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12562": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "12567": {
      "op": "DUP1"
    },
    "12568": {
      "op": "DUP4"
    },
    "12569": {
      "op": "AND"
    },
    "12570": {
      "op": "DUP2"
    },
    "12571": {
      "op": "DUP6"
    },
    "12572": {
      "op": "AND"
    },
    "12573": {
      "op": "DUP1"
    },
    "12574": {
      "op": "DUP4"
    },
    "12575": {
      "op": "SUB"
    },
    "12576": {
      "op": "DUP3"
    },
    "12577": {
      "op": "GT"
    },
    "12578": {
      "op": "ISZERO"
    },
    "12579": {
      "op": "PUSH2",
      "value": "0x3106"
    },
    "12582": {
      "op": "JUMPI"
    },
    "12583": {
      "op": "PUSH2",
      "value": "0x3106"
    },
    "12586": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12589": {
      "jump": "i",
      "op": "JUMP"
    },
    "12590": {
      "op": "JUMPDEST"
    },
    "12591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12597": {
      "op": "SHL"
    },
    "12598": {
      "op": "SUB"
    },
    "12599": {
      "op": "SWAP8"
    },
    "12600": {
      "op": "SWAP1"
    },
    "12601": {
      "op": "SWAP8"
    },
    "12602": {
      "op": "AND"
    },
    "12603": {
      "op": "DUP8"
    },
    "12604": {
      "op": "MSTORE"
    },
    "12605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12611": {
      "op": "SHL"
    },
    "12612": {
      "op": "SUB"
    },
    "12613": {
      "op": "SWAP6"
    },
    "12614": {
      "op": "DUP7"
    },
    "12615": {
      "op": "AND"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12618": {
      "op": "DUP9"
    },
    "12619": {
      "op": "ADD"
    },
    "12620": {
      "op": "MSTORE"
    },
    "12621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12623": {
      "op": "DUP8"
    },
    "12624": {
      "op": "ADD"
    },
    "12625": {
      "op": "SWAP5"
    },
    "12626": {
      "op": "SWAP1"
    },
    "12627": {
      "op": "SWAP5"
    },
    "12628": {
      "op": "MSTORE"
    },
    "12629": {
      "op": "SWAP2"
    },
    "12630": {
      "op": "SWAP1"
    },
    "12631": {
      "op": "SWAP4"
    },
    "12632": {
      "op": "AND"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12635": {
      "op": "DUP6"
    },
    "12636": {
      "op": "ADD"
    },
    "12637": {
      "op": "MSTORE"
    },
    "12638": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12640": {
      "op": "DUP5"
    },
    "12641": {
      "op": "ADD"
    },
    "12642": {
      "op": "SWAP3"
    },
    "12643": {
      "op": "SWAP1"
    },
    "12644": {
      "op": "SWAP3"
    },
    "12645": {
      "op": "MSTORE"
    },
    "12646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12648": {
      "op": "DUP4"
    },
    "12649": {
      "op": "ADD"
    },
    "12650": {
      "op": "SWAP2"
    },
    "12651": {
      "op": "SWAP1"
    },
    "12652": {
      "op": "SWAP2"
    },
    "12653": {
      "op": "MSTORE"
    },
    "12654": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12656": {
      "op": "DUP3"
    },
    "12657": {
      "op": "ADD"
    },
    "12658": {
      "op": "MSTORE"
    },
    "12659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12661": {
      "op": "ADD"
    },
    "12662": {
      "op": "SWAP1"
    },
    "12663": {
      "jump": "o",
      "op": "JUMP"
    },
    "12664": {
      "op": "JUMPDEST"
    },
    "12665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12667": {
      "op": "DUP2"
    },
    "12668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12670": {
      "op": "NOT"
    },
    "12671": {
      "op": "DIV"
    },
    "12672": {
      "op": "DUP4"
    },
    "12673": {
      "op": "GT"
    },
    "12674": {
      "op": "DUP3"
    },
    "12675": {
      "op": "ISZERO"
    },
    "12676": {
      "op": "ISZERO"
    },
    "12677": {
      "op": "AND"
    },
    "12678": {
      "op": "ISZERO"
    },
    "12679": {
      "op": "PUSH2",
      "value": "0x3192"
    },
    "12682": {
      "op": "JUMPI"
    },
    "12683": {
      "op": "PUSH2",
      "value": "0x3192"
    },
    "12686": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12689": {
      "jump": "i",
      "op": "JUMP"
    },
    "12690": {
      "op": "JUMPDEST"
    },
    "12691": {
      "op": "POP"
    },
    "12692": {
      "op": "MUL"
    },
    "12693": {
      "op": "SWAP1"
    },
    "12694": {
      "jump": "o",
      "op": "JUMP"
    },
    "12695": {
      "op": "JUMPDEST"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12698": {
      "op": "DUP3"
    },
    "12699": {
      "op": "PUSH2",
      "value": "0x31B4"
    },
    "12702": {
      "op": "JUMPI"
    },
    "12703": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12710": {
      "op": "SHL"
    },
    "12711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12713": {
      "op": "MSTORE"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12716": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12718": {
      "op": "MSTORE"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12723": {
      "op": "REVERT"
    },
    "12724": {
      "op": "JUMPDEST"
    },
    "12725": {
      "op": "POP"
    },
    "12726": {
      "op": "DIV"
    },
    "12727": {
      "op": "SWAP1"
    },
    "12728": {
      "jump": "o",
      "op": "JUMP"
    },
    "12729": {
      "op": "JUMPDEST"
    },
    "12730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12732": {
      "op": "DUP3"
    },
    "12733": {
      "op": "DUP3"
    },
    "12734": {
      "op": "LT"
    },
    "12735": {
      "op": "ISZERO"
    },
    "12736": {
      "op": "PUSH2",
      "value": "0x31CB"
    },
    "12739": {
      "op": "JUMPI"
    },
    "12740": {
      "op": "PUSH2",
      "value": "0x31CB"
    },
    "12743": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12746": {
      "jump": "i",
      "op": "JUMP"
    },
    "12747": {
      "op": "JUMPDEST"
    },
    "12748": {
      "op": "POP"
    },
    "12749": {
      "op": "SUB"
    },
    "12750": {
      "op": "SWAP1"
    },
    "12751": {
      "jump": "o",
      "op": "JUMP"
    },
    "12752": {
      "op": "JUMPDEST"
    },
    "12753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12755": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "12760": {
      "op": "DUP4"
    },
    "12761": {
      "op": "DUP2"
    },
    "12762": {
      "op": "AND"
    },
    "12763": {
      "op": "SWAP1"
    },
    "12764": {
      "op": "DUP4"
    },
    "12765": {
      "op": "AND"
    },
    "12766": {
      "op": "DUP2"
    },
    "12767": {
      "op": "DUP2"
    },
    "12768": {
      "op": "LT"
    },
    "12769": {
      "op": "ISZERO"
    },
    "12770": {
      "op": "PUSH2",
      "value": "0x31ED"
    },
    "12773": {
      "op": "JUMPI"
    },
    "12774": {
      "op": "PUSH2",
      "value": "0x31ED"
    },
    "12777": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12780": {
      "jump": "i",
      "op": "JUMP"
    },
    "12781": {
      "op": "JUMPDEST"
    },
    "12782": {
      "op": "SUB"
    },
    "12783": {
      "op": "SWAP4"
    },
    "12784": {
      "op": "SWAP3"
    },
    "12785": {
      "op": "POP"
    },
    "12786": {
      "op": "POP"
    },
    "12787": {
      "op": "POP"
    },
    "12788": {
      "jump": "o",
      "op": "JUMP"
    },
    "12789": {
      "op": "JUMPDEST"
    },
    "12790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12792": {
      "op": "JUMPDEST"
    },
    "12793": {
      "op": "DUP4"
    },
    "12794": {
      "op": "DUP2"
    },
    "12795": {
      "op": "LT"
    },
    "12796": {
      "op": "ISZERO"
    },
    "12797": {
      "op": "PUSH2",
      "value": "0x3210"
    },
    "12800": {
      "op": "JUMPI"
    },
    "12801": {
      "op": "DUP2"
    },
    "12802": {
      "op": "DUP2"
    },
    "12803": {
      "op": "ADD"
    },
    "12804": {
      "op": "MLOAD"
    },
    "12805": {
      "op": "DUP4"
    },
    "12806": {
      "op": "DUP3"
    },
    "12807": {
      "op": "ADD"
    },
    "12808": {
      "op": "MSTORE"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12811": {
      "op": "ADD"
    },
    "12812": {
      "op": "PUSH2",
      "value": "0x31F8"
    },
    "12815": {
      "op": "JUMP"
    },
    "12816": {
      "op": "JUMPDEST"
    },
    "12817": {
      "op": "DUP4"
    },
    "12818": {
      "op": "DUP2"
    },
    "12819": {
      "op": "GT"
    },
    "12820": {
      "op": "ISZERO"
    },
    "12821": {
      "op": "PUSH2",
      "value": "0x19FA"
    },
    "12824": {
      "op": "JUMPI"
    },
    "12825": {
      "op": "POP"
    },
    "12826": {
      "op": "POP"
    },
    "12827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12829": {
      "op": "SWAP2"
    },
    "12830": {
      "op": "ADD"
    },
    "12831": {
      "op": "MSTORE"
    },
    "12832": {
      "jump": "o",
      "op": "JUMP"
    },
    "12833": {
      "op": "JUMPDEST"
    },
    "12834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12836": {
      "op": "DUP3"
    },
    "12837": {
      "op": "MLOAD"
    },
    "12838": {
      "op": "PUSH2",
      "value": "0x3233"
    },
    "12841": {
      "op": "DUP2"
    },
    "12842": {
      "op": "DUP5"
    },
    "12843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12845": {
      "op": "DUP8"
    },
    "12846": {
      "op": "ADD"
    },
    "12847": {
      "op": "PUSH2",
      "value": "0x31F5"
    },
    "12850": {
      "jump": "i",
      "op": "JUMP"
    },
    "12851": {
      "op": "JUMPDEST"
    },
    "12852": {
      "op": "SWAP2"
    },
    "12853": {
      "op": "SWAP1"
    },
    "12854": {
      "op": "SWAP2"
    },
    "12855": {
      "op": "ADD"
    },
    "12856": {
      "op": "SWAP3"
    },
    "12857": {
      "op": "SWAP2"
    },
    "12858": {
      "op": "POP"
    },
    "12859": {
      "op": "POP"
    },
    "12860": {
      "jump": "o",
      "op": "JUMP"
    },
    "12861": {
      "op": "JUMPDEST"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12864": {
      "op": "DUP2"
    },
    "12865": {
      "op": "MSTORE"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12868": {
      "op": "DUP3"
    },
    "12869": {
      "op": "MLOAD"
    },
    "12870": {
      "op": "DUP1"
    },
    "12871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12873": {
      "op": "DUP5"
    },
    "12874": {
      "op": "ADD"
    },
    "12875": {
      "op": "MSTORE"
    },
    "12876": {
      "op": "PUSH2",
      "value": "0x325C"
    },
    "12879": {
      "op": "DUP2"
    },
    "12880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12882": {
      "op": "DUP6"
    },
    "12883": {
      "op": "ADD"
    },
    "12884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12886": {
      "op": "DUP8"
    },
    "12887": {
      "op": "ADD"
    },
    "12888": {
      "op": "PUSH2",
      "value": "0x31F5"
    },
    "12891": {
      "jump": "i",
      "op": "JUMP"
    },
    "12892": {
      "op": "JUMPDEST"
    },
    "12893": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12895": {
      "op": "ADD"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12898": {
      "op": "NOT"
    },
    "12899": {
      "op": "AND"
    },
    "12900": {
      "op": "SWAP2"
    },
    "12901": {
      "op": "SWAP1"
    },
    "12902": {
      "op": "SWAP2"
    },
    "12903": {
      "op": "ADD"
    },
    "12904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12906": {
      "op": "ADD"
    },
    "12907": {
      "op": "SWAP3"
    },
    "12908": {
      "op": "SWAP2"
    },
    "12909": {
      "op": "POP"
    },
    "12910": {
      "op": "POP"
    },
    "12911": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e3e5ba1d01d8d881fc302186642b523f2438c2e6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol\";\n\nimport \"./BeamerUtils.sol\";\nimport \"./RestrictedCalls.sol\";\nimport \"./LpWhitelist.sol\";\n\n/// The request manager.\n///\n/// This contract is responsible for keeping track of transfer requests,\n/// implementing the rules of the challenge game and holding deposited\n/// tokens until they are withdrawn.\n/// The information passed by L1 resolution will be stored with the respective requests.\n///\n/// It is the only contract that agents need to interact with on the source chain.\n/// .. note::\n///\n///   The functions resolveRequest and invalidateFill can only be called by\n///   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract.\ncontract RequestManager is Ownable, LpWhitelist, RestrictedCalls, Pausable {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    // Structs\n    // TODO: check if we can use a smaller type for `targetChainId`, so that the\n    // fields can be packed into one storage slot\n    struct Request {\n        address sender;\n        address sourceTokenAddress;\n        uint256 targetChainId;\n        uint256 amount;\n        uint32 validUntil;\n        uint96 lpFee;\n        uint96 protocolFee;\n        uint32 activeClaims;\n        uint96 withdrawClaimId;\n        address filler;\n        bytes32 fillId;\n        mapping(bytes32 => bool) invalidFillIds;\n    }\n\n    struct Claim {\n        bytes32 requestId;\n        address claimer;\n        uint256 claimerStake;\n        mapping(address => uint256) challengersStakes;\n        address lastChallenger;\n        uint256 challengerStakeTotal;\n        uint256 withdrawnAmount;\n        uint256 termination;\n        bytes32 fillId;\n    }\n\n    // Events\n\n    /// Emitted when a new request has been created.\n    ///\n    /// .. seealso:: :sol:func:`createRequest`\n    event RequestCreated(\n        bytes32 indexed requestId,\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint96 nonce,\n        uint32 validUntil\n    );\n\n    /// Emitted when the token deposit for request ``requestId`` has been\n    /// transferred to the ``receiver``.\n    ///\n    /// This can happen in two cases:\n    ///\n    ///  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n    ///  * a claim related to the request has been resolved successfully in favor of the claimer\n    ///\n    /// .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`\n    event DepositWithdrawn(bytes32 requestId, address receiver);\n\n    /// Emitted when a claim or a counter-claim (challenge) has been made.\n    ///\n    /// .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`\n    event ClaimMade(\n        bytes32 indexed requestId,\n        uint96 claimId,\n        address claimer,\n        uint256 claimerStake,\n        address lastChallenger,\n        uint256 challengerStakeTotal,\n        uint256 termination,\n        bytes32 fillId\n    );\n\n    /// Emitted when staked native tokens tied to a claim have been withdrawn.\n    ///\n    /// This can only happen when the claim has been resolved and the caller\n    /// of :sol:func:`withdraw` is allowed to withdraw their stake.\n    ///\n    /// .. seealso:: :sol:func:`withdraw`\n    event ClaimStakeWithdrawn(\n        uint96 claimId,\n        bytes32 indexed requestId,\n        address claimReceiver\n    );\n\n    event FinalityPeriodUpdated(uint256 targetChainId, uint256 finalityPeriod);\n\n    /// Emitted when a request has been resolved via L1 resolution.\n    ///\n    /// .. seealso:: :sol:func:`resolveRequest`\n    event RequestResolved(bytes32 requestId, address filler, bytes32 fillId);\n\n    /// Emitted when an invalidated fill has been resolved.\n    ///\n    /// .. seealso:: :sol:func:`invalidateFill`\n    event FillInvalidatedResolved(bytes32 requestId, bytes32 fillId);\n\n    // Constants\n\n    /// The minimum amount of source chain's native token that the claimer needs to\n    /// provide when making a claim, as well in each round of the challenge game.\n    uint256 public immutable claimStake;\n\n    /// The additional time given to claim a request. This value is added to the\n    /// validity period of a request.\n    uint256 public immutable claimRequestExtension;\n\n    /// The period for which the claim is valid.\n    uint256 public immutable claimPeriod;\n\n    /// The period by which the termination time of a claim is extended after each\n    /// round of the challenge game. This period should allow enough time for the\n    /// other parties to counter-challenge.\n    ///\n    /// .. note::\n    ///\n    ///    The claim's termination time is extended only if it is less than the\n    ///    extension time.\n    ///\n    /// Note that in the first challenge round, i.e. the round initiated by the first\n    /// challenger, the termination time is extended additionally by the finality\n    /// period of the target chain. This is done to allow for L1 resolution.\n    uint256 public immutable challengePeriodExtension;\n\n    /// The minimum validity period of a request.\n    uint256 public constant MIN_VALIDITY_PERIOD = 30 minutes;\n\n    /// The maximum validity period of a request.\n    uint256 public constant MAX_VALIDITY_PERIOD = 48 hours;\n\n    /// withdrawClaimId is set to this value when an expired request gets withdrawn by the sender\n    uint96 public constant CLAIM_ID_WITHDRAWN_EXPIRED = type(uint96).max;\n\n    // Variables\n\n    /// A counter used to generate request and claim IDs.\n    /// The variable holds the most recently used nonce and must\n    /// be incremented to get the next nonce\n    uint96 public currentNonce;\n\n    /// Maps target rollup chain IDs to finality periods.\n    /// Finality periods are in seconds.\n    mapping(uint256 => uint256) public finalityPeriods;\n\n    /// Maps request IDs to requests.\n    mapping(bytes32 => Request) public requests;\n\n    /// Maps claim IDs to claims.\n    mapping(uint96 => Claim) public claims;\n\n    /// The minimum fee, denominated in transfer token, paid to the liquidity provider.\n    uint256 public minLpFee = 5 ether; // 5e18\n\n    /// Liquidity provider fee percentage, expressed in ppm (parts per million).\n    uint256 public lpFeePPM = 1_000; // 0.1% of the token amount being transferred\n\n    /// Protocol fee percentage, expressed in ppm (parts per million).\n    uint256 public protocolFeePPM = 0; // 0% of the token amount being transferred\n\n    /// The maximum amount of tokens that can be transferred in a single request.\n    uint256 public transferLimit = 10000 ether; // 10000e18\n\n    /// Maps ERC20 token addresses to related token amounts that belong to the protocol.\n    mapping(address => uint256) public collectedProtocolFees;\n\n    /// Compute the liquidy provider fee that needs to be paid for a given transfer amount.\n    function lpFee(uint256 amount) public view returns (uint256) {\n        return Math.max(minLpFee, (amount * lpFeePPM) / 1_000_000);\n    }\n\n    /// Compute the protocol fee that needs to be paid for a given transfer amount.\n    function protocolFee(uint256 amount) public view returns (uint256) {\n        return (amount * protocolFeePPM) / 1_000_000;\n    }\n\n    /// Compute the total fee that needs to be paid for a given transfer amount.\n    /// The total fee is the sum of the liquidity provider fee and the protocol fee.\n    function totalFee(uint256 amount) public view returns (uint256) {\n        return lpFee(amount) + protocolFee(amount);\n    }\n\n    // Modifiers\n\n    /// Check whether a given request ID is valid.\n    modifier validRequestId(bytes32 requestId) {\n        require(\n            requests[requestId].sender != address(0),\n            \"requestId not valid\"\n        );\n        _;\n    }\n\n    /// Check whether a given claim ID is valid.\n    modifier validClaimId(uint96 claimId) {\n        require(claims[claimId].claimer != address(0), \"claimId not valid\");\n        _;\n    }\n\n    /// Constructor.\n    ///\n    /// @param _claimStake Claim stake amount.\n    /// @param _claimRequestExtension Extension to claim a request after validity period ends.\n    /// @param _claimPeriod Claim period, in seconds.\n    /// @param _challengePeriodExtension Challenge period extension, in seconds.\n    constructor(\n        uint256 _claimStake,\n        uint256 _claimRequestExtension,\n        uint256 _claimPeriod,\n        uint256 _challengePeriodExtension\n    ) {\n        claimStake = _claimStake;\n        claimRequestExtension = _claimRequestExtension;\n        claimPeriod = _claimPeriod;\n        challengePeriodExtension = _challengePeriodExtension;\n    }\n\n    /// Create a new transfer request.\n    ///\n    /// @param targetChainId ID of the target chain.\n    /// @param sourceTokenAddress Address of the token contract on the source chain.\n    /// @param targetTokenAddress Address of the token contract on the target chain.\n    /// @param targetAddress Recipient address on the target chain.\n    /// @param amount Amount of tokens to transfer. Does not include fees.\n    /// @param validityPeriod The number of seconds the request is to be considered valid.\n    ///                       Once its validity period has elapsed, the request cannot be claimed\n    ///                       anymore and will eventually expire, allowing the request submitter\n    ///                       to withdraw the deposited tokens if there are no active claims.\n    /// @return ID of the newly created request.\n    function createRequest(\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validityPeriod\n    ) external whenNotPaused returns (bytes32) {\n        require(\n            finalityPeriods[targetChainId] != 0,\n            \"Target rollup not supported\"\n        );\n        require(\n            validityPeriod >= MIN_VALIDITY_PERIOD,\n            \"Validity period too short\"\n        );\n        require(\n            validityPeriod <= MAX_VALIDITY_PERIOD,\n            \"Validity period too long\"\n        );\n        require(amount <= transferLimit, \"Amount exceeds transfer limit\");\n\n        IERC20 token = IERC20(sourceTokenAddress);\n\n        uint256 lpFeeTokenAmount = lpFee(amount);\n        uint256 protocolFeeTokenAmount = protocolFee(amount);\n\n        require(\n            token.allowance(msg.sender, address(this)) >=\n                amount + lpFeeTokenAmount + protocolFeeTokenAmount,\n            \"Insufficient allowance\"\n        );\n\n        uint96 nonce = currentNonce + 1;\n        currentNonce = nonce;\n\n        bytes32 requestId = BeamerUtils.createRequestId(\n            block.chainid,\n            targetChainId,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            nonce\n        );\n\n        Request storage newRequest = requests[requestId];\n        newRequest.sender = msg.sender;\n        newRequest.sourceTokenAddress = sourceTokenAddress;\n        newRequest.targetChainId = targetChainId;\n        newRequest.amount = amount;\n        newRequest.validUntil = uint32(block.timestamp + validityPeriod);\n        newRequest.lpFee = uint96(lpFeeTokenAmount);\n        newRequest.protocolFee = uint96(protocolFeeTokenAmount);\n\n        emit RequestCreated(\n            requestId,\n            targetChainId,\n            sourceTokenAddress,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            nonce,\n            uint32(block.timestamp + validityPeriod)\n        );\n\n        token.safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount + lpFeeTokenAmount + protocolFeeTokenAmount\n        );\n\n        return requestId;\n    }\n\n    /// Withdraw funds deposited with an expired request.\n    ///\n    /// No claims must be active for the request.\n    ///\n    /// @param requestId ID of the expired request.\n    function withdrawExpiredRequest(bytes32 requestId)\n        external\n        validRequestId(requestId)\n    {\n        Request storage request = requests[requestId];\n\n        require(request.withdrawClaimId == 0, \"Deposit already withdrawn\");\n        require(\n            block.timestamp >= request.validUntil,\n            \"Request not expired yet\"\n        );\n        require(request.activeClaims == 0, \"Active claims running\");\n\n        request.withdrawClaimId = CLAIM_ID_WITHDRAWN_EXPIRED;\n\n        emit DepositWithdrawn(requestId, request.sender);\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(\n            request.sender,\n            request.amount + request.lpFee + request.protocolFee\n        );\n    }\n\n    /// Claim that a request was filled by the caller.\n    ///\n    /// The request must still be valid at call time.\n    /// The caller must provide the ``claimStake`` amount of source rollup's native\n    /// token.\n    ///\n    /// @param requestId ID of the request.\n    /// @param fillId The fill ID.\n    /// @return The claim ID.\n    function claimRequest(bytes32 requestId, bytes32 fillId)\n        external\n        payable\n        validRequestId(requestId)\n        onlyWhitelist\n        returns (uint96)\n    {\n        Request storage request = requests[requestId];\n\n        require(\n            block.timestamp < request.validUntil + claimRequestExtension,\n            \"Request cannot be claimed anymore\"\n        );\n        require(request.withdrawClaimId == 0, \"Deposit already withdrawn\");\n        require(msg.value == claimStake, \"Invalid stake amount\");\n        require(fillId != bytes32(0), \"FillId must not be 0x0\");\n\n        request.activeClaims += 1;\n\n        uint96 nonce = currentNonce + 1;\n        currentNonce = nonce;\n        uint256 termination = block.timestamp + claimPeriod;\n\n        Claim storage claim = claims[nonce];\n        claim.requestId = requestId;\n        claim.claimer = msg.sender;\n        claim.claimerStake = msg.value;\n        claim.termination = termination;\n        claim.fillId = fillId;\n\n        emit ClaimMade(\n            requestId,\n            nonce,\n            msg.sender,\n            msg.value,\n            address(0),\n            0,\n            termination,\n            fillId\n        );\n\n        return nonce;\n    }\n\n    /// Challenge an existing claim.\n    ///\n    /// The claim must still be valid at call time.\n    /// This function implements one round of the challenge game.\n    /// The original claimer is allowed to call this function only\n    /// after someone else made a challenge, i.e. every second round.\n    /// However, once the original claimer counter-challenges, anyone\n    /// can join the game and make another challenge.\n    ///\n    /// The caller must provide enough native tokens as their stake.\n    /// For the original claimer, the minimum stake is\n    /// ``challengerStakeTotal - claimerStake + claimStake``.\n    ///\n    /// For challengers, the minimum stake is\n    /// ``claimerStake - challengerStakeTotal + 1``.\n    ///\n    /// An example (time flows downwards, claimStake = 10)::\n    ///\n    ///   claimRequest() by Max [stakes 10]\n    ///   challengeClaim() by Alice [stakes 11]\n    ///   challengeClaim() by Max [stakes 11]\n    ///   challengeClaim() by Bob [stakes 16]\n    ///\n    /// In this example, if Max didn't want to lose the challenge game to\n    /// Alice and Bob, he would have to challenge with a stake of at least 16.\n    ///\n    /// @param claimId The claim ID.\n    function challengeClaim(uint96 claimId)\n        external\n        payable\n        validClaimId(claimId)\n    {\n        Claim storage claim = claims[claimId];\n        bytes32 requestId = claim.requestId;\n        uint256 termination = claim.termination;\n        Request storage request = requests[requestId];\n        require(block.timestamp < termination, \"Claim expired\");\n        require(request.filler == address(0), \"Request already resolved\");\n        require(\n            !request.invalidFillIds[claim.fillId],\n            \"Fill already invalidated\"\n        );\n\n        uint256 periodExtension = challengePeriodExtension;\n        address claimer = claim.claimer;\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n\n        if (claimerStake > challengerStakeTotal) {\n            if (challengerStakeTotal == 0) {\n                periodExtension += finalityPeriods[request.targetChainId];\n            }\n            require(msg.sender != claimer, \"Cannot challenge own claim\");\n            require(\n                msg.value >= claimerStake - challengerStakeTotal + 1,\n                \"Not enough stake provided\"\n            );\n        } else {\n            require(msg.sender == claimer, \"Not eligible to outbid\");\n            require(\n                msg.value >= challengerStakeTotal - claimerStake + claimStake,\n                \"Not enough stake provided\"\n            );\n        }\n\n        if (msg.sender == claimer) {\n            claimerStake += msg.value;\n            claim.claimerStake = claimerStake;\n        } else {\n            claim.lastChallenger = msg.sender;\n            claim.challengersStakes[msg.sender] += msg.value;\n            challengerStakeTotal += msg.value;\n            claim.challengerStakeTotal = challengerStakeTotal;\n        }\n\n        if (block.timestamp + periodExtension > termination) {\n            termination = block.timestamp + periodExtension;\n            claim.termination = termination;\n        }\n\n        emit ClaimMade(\n            requestId,\n            claimId,\n            claimer,\n            claimerStake,\n            claim.lastChallenger,\n            challengerStakeTotal,\n            termination,\n            claim.fillId\n        );\n    }\n\n    /// Withdraw the deposit that the request submitter left with the contract,\n    /// as well as the staked native tokens associated with the claim.\n    ///\n    /// In case the caller of this function is a challenger that won the game,\n    /// they will only get their staked native tokens plus the reward in the form\n    /// of full (sole challenger) or partial (multiple challengers) amount\n    /// of native tokens staked by the dishonest claimer.\n    ///\n    /// @param claimId The claim ID.\n    /// @return The address of the deposit receiver.\n    function withdraw(uint96 claimId)\n        external\n        validClaimId(claimId)\n        returns (address)\n    {\n        Claim storage claim = claims[claimId];\n        bytes32 requestId = claim.requestId;\n        Request storage request = requests[requestId];\n\n        (address claimReceiver, uint256 ethToTransfer) = resolveClaim(claimId);\n\n        if (claim.challengersStakes[claimReceiver] > 0) {\n            //Re-entrancy protection\n            claim.challengersStakes[claimReceiver] = 0;\n        }\n\n        uint256 withdrawnAmount = claim.withdrawnAmount;\n\n        // First time withdraw is called, remove it from active claims\n        if (withdrawnAmount == 0) {\n            request.activeClaims -= 1;\n        }\n        withdrawnAmount += ethToTransfer;\n        claim.withdrawnAmount = withdrawnAmount;\n\n        require(\n            withdrawnAmount <= claim.claimerStake + claim.challengerStakeTotal,\n            \"Amount to withdraw too large\"\n        );\n\n        (bool sent, ) = claimReceiver.call{value: ethToTransfer}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        emit ClaimStakeWithdrawn(claimId, requestId, claimReceiver);\n\n        if (request.withdrawClaimId == 0 && claimReceiver == claim.claimer) {\n            withdrawDeposit(request, claimId);\n        }\n\n        return claimReceiver;\n    }\n\n    function resolveClaim(uint96 claimId)\n        private\n        view\n        returns (address, uint256)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        uint96 withdrawClaimId = request.withdrawClaimId;\n        address claimer = claim.claimer;\n        uint256 claimerStake = claim.claimerStake;\n        uint256 challengerStakeTotal = claim.challengerStakeTotal;\n        bytes32 claimFillId = claim.fillId;\n        require(\n            claim.withdrawnAmount < claimerStake + challengerStakeTotal,\n            \"Claim already withdrawn\"\n        );\n\n        bool claimValid = false;\n\n        // The claim is resolved with the following priority:\n        // 1) The l1 resolved filler is the claimer and l1 resolved fillId matches, claim is valid\n        // 2) FillId is true in request's invalidFillIds, claim is invalid\n        // 3) The withdrawer's claim matches exactly this claim (same claimer address, same fillId)\n        // 4) Claim properties, claim terminated and claimer has the highest stake\n        address filler = request.filler;\n        bytes32 fillId = request.fillId;\n\n        if (filler != address(0)) {\n            // Claim resolution via 1)\n            claimValid = filler == claimer && fillId == claimFillId;\n        } else if (request.invalidFillIds[fillId]) {\n            // Claim resolution via 2)\n            claimValid = false;\n        } else if (withdrawClaimId != 0) {\n            // Claim resolution via 3)\n            claimValid =\n                claimer == claims[withdrawClaimId].claimer &&\n                claimFillId == claims[withdrawClaimId].fillId;\n        } else {\n            // Claim resolution via 4)\n            require(\n                block.timestamp >= claim.termination,\n                \"Claim period not finished\"\n            );\n            claimValid = claimerStake > challengerStakeTotal;\n        }\n\n        // Calculate withdraw scheme for claim stakes\n        uint256 ethToTransfer;\n        address claimReceiver;\n\n        if (claimValid) {\n            // If claim is valid, all stakes go to the claimer\n            ethToTransfer = claimerStake + challengerStakeTotal;\n            claimReceiver = claimer;\n        } else if (challengerStakeTotal > 0) {\n            // If claim is invalid, partial withdrawal by the sender\n            ethToTransfer = 2 * claim.challengersStakes[msg.sender];\n            claimReceiver = msg.sender;\n\n            require(ethToTransfer > 0, \"Challenger has nothing to withdraw\");\n        } else {\n            // The unlikely event is possible that a false claim has no challenger\n            // If it is known that the claim is false then the claim stake goes to the platform\n            ethToTransfer = claimerStake;\n            claimReceiver = owner();\n        }\n\n        // If the challenger wins and is the last challenger, he gets either\n        // twice his stake plus the excess stake (if the claimer was winning), or\n        // twice his stake minus the difference between the claimer and challenger stakes (if the claimer was losing)\n        if (msg.sender == claim.lastChallenger) {\n            if (claimerStake > challengerStakeTotal) {\n                ethToTransfer += (claimerStake - challengerStakeTotal);\n            } else {\n                ethToTransfer -= (challengerStakeTotal - claimerStake);\n            }\n        }\n\n        return (claimReceiver, ethToTransfer);\n    }\n\n    function withdrawDeposit(Request storage request, uint96 claimId) private {\n        Claim storage claim = claims[claimId];\n        address claimer = claim.claimer;\n        emit DepositWithdrawn(claim.requestId, claimer);\n\n        request.withdrawClaimId = claimId;\n\n        collectedProtocolFees[request.sourceTokenAddress] += request\n            .protocolFee;\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(claimer, request.amount + request.lpFee);\n    }\n\n    /// Returns whether a request's deposit was withdrawn or not\n    ///\n    /// This can be true in two cases:\n    /// 1. The deposit was withdrawn after the request was claimed and filled.\n    /// 2. The submitter withdrew the deposit after the request's expiry.\n    /// .. seealso:: :sol:func:`withdraw`\n    /// .. seealso:: :sol:func:`withdrawExpiredRequest`\n    ///\n    /// @param requestId The request ID\n    /// @return Whether the deposit corresponding to the given request ID was withdrawn\n    function isWithdrawn(bytes32 requestId)\n        public\n        view\n        validRequestId(requestId)\n        returns (bool)\n    {\n        return requests[requestId].withdrawClaimId != 0;\n    }\n\n    /// Withdraw protocol fees collected by the contract.\n    ///\n    /// Protocol fees are paid in token transferred.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param tokenAddress The address of the token contract.\n    /// @param recipient The address the fees should be sent to.\n    function withdrawProtocolFees(address tokenAddress, address recipient)\n        external\n        onlyOwner\n    {\n        uint256 amount = collectedProtocolFees[tokenAddress];\n        require(amount > 0, \"Protocol fee is zero\");\n        collectedProtocolFees[tokenAddress] = 0;\n\n        IERC20 token = IERC20(tokenAddress);\n        token.safeTransfer(recipient, amount);\n    }\n\n    /// Update fee parameters.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newProtocolFeePPM The new value for ``protocolFeePPM``.\n    /// @param newLpFeePPM The new value for ``lpFeePPM``.\n    /// @param newMinLpFee The new value for ``minLpFee``.\n    function updateFeeData(\n        uint256 newProtocolFeePPM,\n        uint256 newLpFeePPM,\n        uint256 newMinLpFee\n    ) external onlyOwner {\n        protocolFeePPM = newProtocolFeePPM;\n        lpFeePPM = newLpFeePPM;\n        minLpFee = newMinLpFee;\n    }\n\n    /// Update the transfer amount limit.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param newTransferLimit The new value for ``transferLimit``.\n    function updateTransferLimit(uint256 newTransferLimit) external onlyOwner {\n        transferLimit = newTransferLimit;\n    }\n\n    /// Set the finality period for the given target chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param targetChainId The target chain ID.\n    /// @param finalityPeriod Finality period in seconds.\n    function setFinalityPeriod(uint256 targetChainId, uint256 finalityPeriod)\n        external\n        onlyOwner\n    {\n        require(finalityPeriod > 0, \"Finality period must be greater than 0\");\n        finalityPeriods[targetChainId] = finalityPeriod;\n\n        emit FinalityPeriodUpdated(targetChainId, finalityPeriod);\n    }\n\n    /// Returns whether a fill is invalidated or not\n    ///\n    /// Calling invalidateFill() will set this boolean to true,\n    /// marking that the ``fillId`` for the corresponding ``requestId`` was\n    /// invalidated.\n    /// Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId]\n    /// to false.\n    /// .. seealso:: :sol:func:`invalidateFill`\n    /// .. seealso:: :sol:func:`resolveRequest`\n    ///\n    /// @param requestId The request ID\n    /// @param fillId The fill ID\n    /// @return Whether the fill ID is invalid for the given request ID\n    function isInvalidFill(bytes32 requestId, bytes32 fillId)\n        public\n        view\n        returns (bool)\n    {\n        return requests[requestId].invalidFillIds[fillId];\n    }\n\n    /// Mark the request identified by ``requestId`` as filled by ``filler``.\n    ///\n    /// .. note::\n    ///\n    ///     This function is a restricted call function. Only callable by the added caller.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    /// @param filler The address that filled the request.\n    function resolveRequest(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 resolutionChainId,\n        address filler\n    ) external restricted(resolutionChainId) {\n        Request storage request = requests[requestId];\n        request.filler = filler;\n        request.fillId = fillId;\n\n        request.invalidFillIds[fillId] = false;\n\n        emit RequestResolved(requestId, filler, fillId);\n    }\n\n    /// Mark the fill identified by ``requestId`` and ``fillId`` as invalid.\n    ///\n    /// .. note::\n    ///\n    ///     This function is a restricted call function. Only callable by the added caller.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    function invalidateFill(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 resolutionChainId\n    ) external restricted(resolutionChainId) {\n        Request storage request = requests[requestId];\n        require(\n            request.filler == address(0),\n            \"Cannot invalidate resolved fills\"\n        );\n        require(\n            request.invalidFillIds[fillId] == false,\n            \"Fill already invalidated\"\n        );\n\n        request.invalidFillIds[fillId] = true;\n\n        emit FillInvalidatedResolved(requestId, fillId);\n    }\n\n    /// Pauses the contract.\n    ///\n    /// Once the contract is paused, it cannot be used to create new\n    /// requests anymore. Withdrawing deposited funds and claim stakes\n    /// still works, though.\n    ///\n    /// .. note:: This function can only be called when the contract is not paused.\n    /// .. note:: This function can only be called by the contract owner.\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// Unpauses the contract.\n    ///\n    /// Once the contract is unpaused, it can be used normally.\n    ///\n    /// .. note:: This function can only be called when the contract is paused.\n    /// .. note:: This function can only be called by the contract owner.\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}\n",
  "sourceMap": "1141:28940:20:-:0;;;6544:7;6518:33;;6673:5;6647:31;;6834:1;6802:33;;6999:11;6968:42;;8674:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:8;936:18:0;:32::i;:::-;996:7:1;:15;;-1:-1:-1;;996:15:1;;;8844:24:20;;;;;8878:46;;;;;8934:26;;8970:52;;1141:28940;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:368:29:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;-1:-1:-1;;228:16:29;;284:2;269:18;;263:25;328:2;313:18;;307:25;372:2;357:18;;;351:25;228:16;;263:25;;-1:-1:-1;351:25:29;;-1:-1:-1;14:368:29;-1:-1:-1;14:368:29:o;:::-;1141:28940:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/RequestManager.sol",
  "type": "contract"
}